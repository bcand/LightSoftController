# Python stubs generated by omniidl from managedElementManager.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "managedElement.idl"
import managedElement_idl
_0_managedElement = omniORB.openModule("managedElement")
_0_managedElement__POA = omniORB.openModule("managedElement__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "OMGidl/CosNotification.idl"
import CosNotification_idl
_0_CosNotification = omniORB.openModule("CosNotification")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA")

# #include "performance.idl"
import performance_idl
_0_performance = omniORB.openModule("performance")
_0_performance__POA = omniORB.openModule("performance__POA")

# #include "notifications.idl"
import notifications_idl
_0_notifications = omniORB.openModule("notifications")
_0_notifications__POA = omniORB.openModule("notifications__POA")

# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

# #include "aSAP.idl"
import aSAP_idl
_0_aSAP = omniORB.openModule("aSAP")
_0_aSAP__POA = omniORB.openModule("aSAP__POA")

#
# Start of module "managedElementManager"
#
__name__ = "managedElementManager"
_0_managedElementManager = omniORB.openModule("managedElementManager", r"managedElementManager.idl")
_0_managedElementManager__POA = omniORB.openModule("managedElementManager__POA", r"managedElementManager.idl")


# interface ManagedElementMgr_I
_0_managedElementManager._d_ManagedElementMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/managedElementManager/ManagedElementMgr_I:1.0", "ManagedElementMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElementManager/ManagedElementMgr_I:1.0"] = _0_managedElementManager._d_ManagedElementMgr_I
_0_managedElementManager.ManagedElementMgr_I = omniORB.newEmptyClass()
class ManagedElementMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_managedElementManager._d_ManagedElementMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_managedElementManager.ManagedElementMgr_I = ManagedElementMgr_I
_0_managedElementManager._tc_ManagedElementMgr_I = omniORB.tcInternal.createTypeCode(_0_managedElementManager._d_ManagedElementMgr_I)
omniORB.registerType(ManagedElementMgr_I._NP_RepositoryId, _0_managedElementManager._d_ManagedElementMgr_I, _0_managedElementManager._tc_ManagedElementMgr_I)

# ManagedElementMgr_I operations and attributes
ManagedElementMgr_I._d_getAllManagedElements = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllManagedElementNames = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainingSubnetworkNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllPTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllPTPsWithoutFTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllFTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllPTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllPTPNamesWithoutFTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllFTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getManagedElement = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedPotentialTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedPotentialTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedInUseTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedInUseTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedCurrentTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedCurrentTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainingTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainingTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/ProbableCauseList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllUnacknowledgedActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/ProbableCauseList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_setTPData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPData_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllCrossConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_createGTP = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong, omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/GTPEffort_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/GTP_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_deleteGTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_modifyGTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/GTP_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getGTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/GTP_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllGTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/GTPlist_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/GTPiterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllGTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainingGTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/GTP_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_setGtpAlarmReportingOn = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_setGtpAlarmReportingOff = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_verifyTMDAssignment = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/Directionality_T:1.0"]), ((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllFixedCrossConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getPotentialFixedCCs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# ManagedElementMgr_I object reference
class _objref_ManagedElementMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = ManagedElementMgr_I._NP_RepositoryId

    def __init__(self, obj):
        _0_common._objref_Common_I.__init__(self, obj)

    def getAllManagedElements(self, *args):
        return self._obj.invoke("getAllManagedElements", _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElements, args)

    def getAllManagedElementNames(self, *args):
        return self._obj.invoke("getAllManagedElementNames", _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElementNames, args)

    def getContainingSubnetworkNames(self, *args):
        return self._obj.invoke("getContainingSubnetworkNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainingSubnetworkNames, args)

    def getAllPTPs(self, *args):
        return self._obj.invoke("getAllPTPs", _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPs, args)

    def getAllPTPsWithoutFTPs(self, *args):
        return self._obj.invoke("getAllPTPsWithoutFTPs", _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPsWithoutFTPs, args)

    def getAllFTPs(self, *args):
        return self._obj.invoke("getAllFTPs", _0_managedElementManager.ManagedElementMgr_I._d_getAllFTPs, args)

    def getAllPTPNames(self, *args):
        return self._obj.invoke("getAllPTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPNames, args)

    def getAllPTPNamesWithoutFTPs(self, *args):
        return self._obj.invoke("getAllPTPNamesWithoutFTPs", _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPNamesWithoutFTPs, args)

    def getAllFTPNames(self, *args):
        return self._obj.invoke("getAllFTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getAllFTPNames, args)

    def getTP(self, *args):
        return self._obj.invoke("getTP", _0_managedElementManager.ManagedElementMgr_I._d_getTP, args)

    def getManagedElement(self, *args):
        return self._obj.invoke("getManagedElement", _0_managedElementManager.ManagedElementMgr_I._d_getManagedElement, args)

    def getContainedPotentialTPs(self, *args):
        return self._obj.invoke("getContainedPotentialTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPs, args)

    def getContainedPotentialTPNames(self, *args):
        return self._obj.invoke("getContainedPotentialTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPNames, args)

    def getContainedInUseTPs(self, *args):
        return self._obj.invoke("getContainedInUseTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPs, args)

    def getContainedInUseTPNames(self, *args):
        return self._obj.invoke("getContainedInUseTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPNames, args)

    def getContainedCurrentTPs(self, *args):
        return self._obj.invoke("getContainedCurrentTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPs, args)

    def getContainedCurrentTPNames(self, *args):
        return self._obj.invoke("getContainedCurrentTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPNames, args)

    def getContainingTPs(self, *args):
        return self._obj.invoke("getContainingTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPs, args)

    def getContainingTPNames(self, *args):
        return self._obj.invoke("getContainingTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPNames, args)

    def getAllActiveAlarms(self, *args):
        return self._obj.invoke("getAllActiveAlarms", _0_managedElementManager.ManagedElementMgr_I._d_getAllActiveAlarms, args)

    def getAllUnacknowledgedActiveAlarms(self, *args):
        return self._obj.invoke("getAllUnacknowledgedActiveAlarms", _0_managedElementManager.ManagedElementMgr_I._d_getAllUnacknowledgedActiveAlarms, args)

    def setTPData(self, *args):
        return self._obj.invoke("setTPData", _0_managedElementManager.ManagedElementMgr_I._d_setTPData, args)

    def getAllCrossConnections(self, *args):
        return self._obj.invoke("getAllCrossConnections", _0_managedElementManager.ManagedElementMgr_I._d_getAllCrossConnections, args)

    def createGTP(self, *args):
        return self._obj.invoke("createGTP", _0_managedElementManager.ManagedElementMgr_I._d_createGTP, args)

    def deleteGTP(self, *args):
        return self._obj.invoke("deleteGTP", _0_managedElementManager.ManagedElementMgr_I._d_deleteGTP, args)

    def modifyGTP(self, *args):
        return self._obj.invoke("modifyGTP", _0_managedElementManager.ManagedElementMgr_I._d_modifyGTP, args)

    def getGTP(self, *args):
        return self._obj.invoke("getGTP", _0_managedElementManager.ManagedElementMgr_I._d_getGTP, args)

    def getAllGTPs(self, *args):
        return self._obj.invoke("getAllGTPs", _0_managedElementManager.ManagedElementMgr_I._d_getAllGTPs, args)

    def getAllGTPNames(self, *args):
        return self._obj.invoke("getAllGTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getAllGTPNames, args)

    def getContainingGTP(self, *args):
        return self._obj.invoke("getContainingGTP", _0_managedElementManager.ManagedElementMgr_I._d_getContainingGTP, args)

    def setGtpAlarmReportingOn(self, *args):
        return self._obj.invoke("setGtpAlarmReportingOn", _0_managedElementManager.ManagedElementMgr_I._d_setGtpAlarmReportingOn, args)

    def setGtpAlarmReportingOff(self, *args):
        return self._obj.invoke("setGtpAlarmReportingOff", _0_managedElementManager.ManagedElementMgr_I._d_setGtpAlarmReportingOff, args)

    def verifyTMDAssignment(self, *args):
        return self._obj.invoke("verifyTMDAssignment", _0_managedElementManager.ManagedElementMgr_I._d_verifyTMDAssignment, args)

    def getAllFixedCrossConnections(self, *args):
        return self._obj.invoke("getAllFixedCrossConnections", _0_managedElementManager.ManagedElementMgr_I._d_getAllFixedCrossConnections, args)

    def getPotentialFixedCCs(self, *args):
        return self._obj.invoke("getPotentialFixedCCs", _0_managedElementManager.ManagedElementMgr_I._d_getPotentialFixedCCs, args)

omniORB.registerObjref(ManagedElementMgr_I._NP_RepositoryId, _objref_ManagedElementMgr_I)
_0_managedElementManager._objref_ManagedElementMgr_I = _objref_ManagedElementMgr_I
del ManagedElementMgr_I, _objref_ManagedElementMgr_I

# ManagedElementMgr_I skeleton
__name__ = "managedElementManager__POA"
class ManagedElementMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_managedElementManager.ManagedElementMgr_I._NP_RepositoryId


    _omni_op_d = {"getAllManagedElements": _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElements, "getAllManagedElementNames": _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElementNames, "getContainingSubnetworkNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainingSubnetworkNames, "getAllPTPs": _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPs, "getAllPTPsWithoutFTPs": _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPsWithoutFTPs, "getAllFTPs": _0_managedElementManager.ManagedElementMgr_I._d_getAllFTPs, "getAllPTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPNames, "getAllPTPNamesWithoutFTPs": _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPNamesWithoutFTPs, "getAllFTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getAllFTPNames, "getTP": _0_managedElementManager.ManagedElementMgr_I._d_getTP, "getManagedElement": _0_managedElementManager.ManagedElementMgr_I._d_getManagedElement, "getContainedPotentialTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPs, "getContainedPotentialTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPNames, "getContainedInUseTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPs, "getContainedInUseTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPNames, "getContainedCurrentTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPs, "getContainedCurrentTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPNames, "getContainingTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPs, "getContainingTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPNames, "getAllActiveAlarms": _0_managedElementManager.ManagedElementMgr_I._d_getAllActiveAlarms, "getAllUnacknowledgedActiveAlarms": _0_managedElementManager.ManagedElementMgr_I._d_getAllUnacknowledgedActiveAlarms, "setTPData": _0_managedElementManager.ManagedElementMgr_I._d_setTPData, "getAllCrossConnections": _0_managedElementManager.ManagedElementMgr_I._d_getAllCrossConnections, "createGTP": _0_managedElementManager.ManagedElementMgr_I._d_createGTP, "deleteGTP": _0_managedElementManager.ManagedElementMgr_I._d_deleteGTP, "modifyGTP": _0_managedElementManager.ManagedElementMgr_I._d_modifyGTP, "getGTP": _0_managedElementManager.ManagedElementMgr_I._d_getGTP, "getAllGTPs": _0_managedElementManager.ManagedElementMgr_I._d_getAllGTPs, "getAllGTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getAllGTPNames, "getContainingGTP": _0_managedElementManager.ManagedElementMgr_I._d_getContainingGTP, "setGtpAlarmReportingOn": _0_managedElementManager.ManagedElementMgr_I._d_setGtpAlarmReportingOn, "setGtpAlarmReportingOff": _0_managedElementManager.ManagedElementMgr_I._d_setGtpAlarmReportingOff, "verifyTMDAssignment": _0_managedElementManager.ManagedElementMgr_I._d_verifyTMDAssignment, "getAllFixedCrossConnections": _0_managedElementManager.ManagedElementMgr_I._d_getAllFixedCrossConnections, "getPotentialFixedCCs": _0_managedElementManager.ManagedElementMgr_I._d_getPotentialFixedCCs}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

ManagedElementMgr_I._omni_skeleton = ManagedElementMgr_I
_0_managedElementManager__POA.ManagedElementMgr_I = ManagedElementMgr_I
omniORB.registerSkeleton(ManagedElementMgr_I._NP_RepositoryId, ManagedElementMgr_I)
del ManagedElementMgr_I
__name__ = "managedElementManager"

#
# End of module "managedElementManager"
#
__name__ = "managedElementManager_idl"

_exported_modules = ( "managedElementManager", )

# The end.
