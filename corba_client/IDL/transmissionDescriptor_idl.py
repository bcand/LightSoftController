# Python stubs generated by omniidl from transmissionDescriptor.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

# #include "performance.idl"
import performance_idl
_0_performance = omniORB.openModule("performance")
_0_performance__POA = omniORB.openModule("performance__POA")

# #include "flowDomainFragment.idl"
import flowDomainFragment_idl
_0_flowDomainFragment = omniORB.openModule("flowDomainFragment")
_0_flowDomainFragment__POA = omniORB.openModule("flowDomainFragment__POA")

# #include "topologicalLink.idl"
import topologicalLink_idl
_0_topologicalLink = omniORB.openModule("topologicalLink")
_0_topologicalLink__POA = omniORB.openModule("topologicalLink__POA")

# #include "flowDomain.idl"
import flowDomain_idl
_0_flowDomain = omniORB.openModule("flowDomain")
_0_flowDomain__POA = omniORB.openModule("flowDomain__POA")

#
# Start of module "transmissionDescriptor"
#
__name__ = "transmissionDescriptor"
_0_transmissionDescriptor = omniORB.openModule("transmissionDescriptor", r"transmissionDescriptor.idl")
_0_transmissionDescriptor__POA = omniORB.openModule("transmissionDescriptor__POA", r"transmissionDescriptor.idl")


# enum ServiceCategory_T
_0_transmissionDescriptor.SC_CBR = omniORB.EnumItem("SC_CBR", 0)
_0_transmissionDescriptor.SC_VBRRT = omniORB.EnumItem("SC_VBRRT", 1)
_0_transmissionDescriptor.SC_VBRNRT = omniORB.EnumItem("SC_VBRNRT", 2)
_0_transmissionDescriptor.SC_ABR = omniORB.EnumItem("SC_ABR", 3)
_0_transmissionDescriptor.SC_UBR = omniORB.EnumItem("SC_UBR", 4)
_0_transmissionDescriptor.SC_GFR = omniORB.EnumItem("SC_GFR", 5)
_0_transmissionDescriptor.SC_NA = omniORB.EnumItem("SC_NA", 6)
_0_transmissionDescriptor.ServiceCategory_T = omniORB.Enum("IDL:mtnm.tmforum.org/transmissionDescriptor/ServiceCategory_T:1.0", (_0_transmissionDescriptor.SC_CBR, _0_transmissionDescriptor.SC_VBRRT, _0_transmissionDescriptor.SC_VBRNRT, _0_transmissionDescriptor.SC_ABR, _0_transmissionDescriptor.SC_UBR, _0_transmissionDescriptor.SC_GFR, _0_transmissionDescriptor.SC_NA,))

_0_transmissionDescriptor._d_ServiceCategory_T  = (omniORB.tcInternal.tv_enum, _0_transmissionDescriptor.ServiceCategory_T._NP_RepositoryId, "ServiceCategory_T", _0_transmissionDescriptor.ServiceCategory_T._items)
_0_transmissionDescriptor._tc_ServiceCategory_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_ServiceCategory_T)
omniORB.registerType(_0_transmissionDescriptor.ServiceCategory_T._NP_RepositoryId, _0_transmissionDescriptor._d_ServiceCategory_T, _0_transmissionDescriptor._tc_ServiceCategory_T)

# typedef ... TrafficParameterList_T
class TrafficParameterList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/transmissionDescriptor/TrafficParameterList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_transmissionDescriptor.TrafficParameterList_T = TrafficParameterList_T
_0_transmissionDescriptor._d_TrafficParameterList_T  = omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]
_0_transmissionDescriptor._ad_TrafficParameterList_T = (omniORB.tcInternal.tv_alias, TrafficParameterList_T._NP_RepositoryId, "TrafficParameterList_T", omniORB.typeCodeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]._d)
_0_transmissionDescriptor._tc_TrafficParameterList_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._ad_TrafficParameterList_T)
omniORB.registerType(TrafficParameterList_T._NP_RepositoryId, _0_transmissionDescriptor._ad_TrafficParameterList_T, _0_transmissionDescriptor._tc_TrafficParameterList_T)
del TrafficParameterList_T

# struct TransmissionDescriptor_T
_0_transmissionDescriptor.TransmissionDescriptor_T = omniORB.newEmptyClass()
class TransmissionDescriptor_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptor_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, transmissionParams, additionalTPInfo, containingTMDName, externalRepresentationReference, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.transmissionParams = transmissionParams
        self.additionalTPInfo = additionalTPInfo
        self.containingTMDName = containingTMDName
        self.externalRepresentationReference = externalRepresentationReference
        self.additionalInfo = additionalInfo

_0_transmissionDescriptor.TransmissionDescriptor_T = TransmissionDescriptor_T
_0_transmissionDescriptor._d_TransmissionDescriptor_T  = (omniORB.tcInternal.tv_struct, TransmissionDescriptor_T, TransmissionDescriptor_T._NP_RepositoryId, "TransmissionDescriptor_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalTPInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], "containingTMDName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "externalRepresentationReference", (omniORB.tcInternal.tv_string,0), "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_transmissionDescriptor._tc_TransmissionDescriptor_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_TransmissionDescriptor_T)
omniORB.registerType(TransmissionDescriptor_T._NP_RepositoryId, _0_transmissionDescriptor._d_TransmissionDescriptor_T, _0_transmissionDescriptor._tc_TransmissionDescriptor_T)
del TransmissionDescriptor_T

# struct TMDCreateData_T
_0_transmissionDescriptor.TMDCreateData_T = omniORB.newEmptyClass()
class TMDCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/transmissionDescriptor/TMDCreateData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, transmissionParams, additionalObjectInfo, containingTMDName, externalRepresentationReference, additionalCreationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.transmissionParams = transmissionParams
        self.additionalObjectInfo = additionalObjectInfo
        self.containingTMDName = containingTMDName
        self.externalRepresentationReference = externalRepresentationReference
        self.additionalCreationInfo = additionalCreationInfo

_0_transmissionDescriptor.TMDCreateData_T = TMDCreateData_T
_0_transmissionDescriptor._d_TMDCreateData_T  = (omniORB.tcInternal.tv_struct, TMDCreateData_T, TMDCreateData_T._NP_RepositoryId, "TMDCreateData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalObjectInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], "containingTMDName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "externalRepresentationReference", (omniORB.tcInternal.tv_string,0), "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_transmissionDescriptor._tc_TMDCreateData_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_TMDCreateData_T)
omniORB.registerType(TMDCreateData_T._NP_RepositoryId, _0_transmissionDescriptor._d_TMDCreateData_T, _0_transmissionDescriptor._tc_TMDCreateData_T)
del TMDCreateData_T

# struct TMDModifyData_T
_0_transmissionDescriptor.TMDModifyData_T = omniORB.newEmptyClass()
class TMDModifyData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/transmissionDescriptor/TMDModifyData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, transmissionParams, additionalObjectInfo, containingTMDName, externalRepresentationReference, additionalCreationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.transmissionParams = transmissionParams
        self.additionalObjectInfo = additionalObjectInfo
        self.containingTMDName = containingTMDName
        self.externalRepresentationReference = externalRepresentationReference
        self.additionalCreationInfo = additionalCreationInfo

_0_transmissionDescriptor.TMDModifyData_T = TMDModifyData_T
_0_transmissionDescriptor._d_TMDModifyData_T  = (omniORB.tcInternal.tv_struct, TMDModifyData_T, TMDModifyData_T._NP_RepositoryId, "TMDModifyData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalObjectInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], "containingTMDName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "externalRepresentationReference", (omniORB.tcInternal.tv_string,0), "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_transmissionDescriptor._tc_TMDModifyData_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_TMDModifyData_T)
omniORB.registerType(TMDModifyData_T._NP_RepositoryId, _0_transmissionDescriptor._d_TMDModifyData_T, _0_transmissionDescriptor._tc_TMDModifyData_T)
del TMDModifyData_T

# typedef ... TransmissionDescriptorList_T
class TransmissionDescriptorList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_transmissionDescriptor.TransmissionDescriptorList_T = TransmissionDescriptorList_T
_0_transmissionDescriptor._d_TransmissionDescriptorList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptor_T:1.0"], 0)
_0_transmissionDescriptor._ad_TransmissionDescriptorList_T = (omniORB.tcInternal.tv_alias, TransmissionDescriptorList_T._NP_RepositoryId, "TransmissionDescriptorList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptor_T:1.0"], 0))
_0_transmissionDescriptor._tc_TransmissionDescriptorList_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._ad_TransmissionDescriptorList_T)
omniORB.registerType(TransmissionDescriptorList_T._NP_RepositoryId, _0_transmissionDescriptor._ad_TransmissionDescriptorList_T, _0_transmissionDescriptor._tc_TransmissionDescriptorList_T)
del TransmissionDescriptorList_T

# enum TPorMFDorFDFrQualifier_T
_0_transmissionDescriptor.aTP = omniORB.EnumItem("aTP", 0)
_0_transmissionDescriptor.aMFD = omniORB.EnumItem("aMFD", 1)
_0_transmissionDescriptor.aFDFr = omniORB.EnumItem("aFDFr", 2)
_0_transmissionDescriptor.TPorMFDorFDFrQualifier_T = omniORB.Enum("IDL:mtnm.tmforum.org/transmissionDescriptor/TPorMFDorFDFrQualifier_T:1.0", (_0_transmissionDescriptor.aTP, _0_transmissionDescriptor.aMFD, _0_transmissionDescriptor.aFDFr,))

_0_transmissionDescriptor._d_TPorMFDorFDFrQualifier_T  = (omniORB.tcInternal.tv_enum, _0_transmissionDescriptor.TPorMFDorFDFrQualifier_T._NP_RepositoryId, "TPorMFDorFDFrQualifier_T", _0_transmissionDescriptor.TPorMFDorFDFrQualifier_T._items)
_0_transmissionDescriptor._tc_TPorMFDorFDFrQualifier_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_TPorMFDorFDFrQualifier_T)
omniORB.registerType(_0_transmissionDescriptor.TPorMFDorFDFrQualifier_T._NP_RepositoryId, _0_transmissionDescriptor._d_TPorMFDorFDFrQualifier_T, _0_transmissionDescriptor._tc_TPorMFDorFDFrQualifier_T)

# union TPorMFDorFDFr_T
_0_transmissionDescriptor.TPorMFDorFDFr_T = omniORB.newEmptyClass()
class TPorMFDorFDFr_T (omniORB.Union):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/transmissionDescriptor/TPorMFDorFDFr_T:1.0"

_0_transmissionDescriptor.TPorMFDorFDFr_T = TPorMFDorFDFr_T

TPorMFDorFDFr_T._m_to_d = {"tp": _0_transmissionDescriptor.aTP, "mfd": _0_transmissionDescriptor.aMFD, "fdfr": _0_transmissionDescriptor.aFDFr}
TPorMFDorFDFr_T._d_to_m = {_0_transmissionDescriptor.aTP: "tp", _0_transmissionDescriptor.aMFD: "mfd", _0_transmissionDescriptor.aFDFr: "fdfr"}
TPorMFDorFDFr_T._def_m  = None
TPorMFDorFDFr_T._def_d  = None

_0_transmissionDescriptor._m_TPorMFDorFDFr_T  = ((_0_transmissionDescriptor.aTP, "tp", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"]), (_0_transmissionDescriptor.aMFD, "mfd", omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"]), (_0_transmissionDescriptor.aFDFr, "fdfr", omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"]),)
_0_transmissionDescriptor._d_TPorMFDorFDFr_T  = (omniORB.tcInternal.tv_union, TPorMFDorFDFr_T, TPorMFDorFDFr_T._NP_RepositoryId, "TPorMFDorFDFr_T", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TPorMFDorFDFrQualifier_T:1.0"], -1, _0_transmissionDescriptor._m_TPorMFDorFDFr_T, None, {_0_transmissionDescriptor.aTP: _0_transmissionDescriptor._m_TPorMFDorFDFr_T[0], _0_transmissionDescriptor.aMFD: _0_transmissionDescriptor._m_TPorMFDorFDFr_T[1], _0_transmissionDescriptor.aFDFr: _0_transmissionDescriptor._m_TPorMFDorFDFr_T[2]})
_0_transmissionDescriptor._tc_TPorMFDorFDFr_T = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_TPorMFDorFDFr_T)
omniORB.registerType(TPorMFDorFDFr_T._NP_RepositoryId, _0_transmissionDescriptor._d_TPorMFDorFDFr_T, _0_transmissionDescriptor._tc_TPorMFDorFDFr_T)
del TPorMFDorFDFr_T

# interface TransmissionDescriptorIterator_I
_0_transmissionDescriptor._d_TransmissionDescriptorIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorIterator_I:1.0", "TransmissionDescriptorIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorIterator_I:1.0"] = _0_transmissionDescriptor._d_TransmissionDescriptorIterator_I
_0_transmissionDescriptor.TransmissionDescriptorIterator_I = omniORB.newEmptyClass()
class TransmissionDescriptorIterator_I :
    _NP_RepositoryId = _0_transmissionDescriptor._d_TransmissionDescriptorIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_transmissionDescriptor.TransmissionDescriptorIterator_I = TransmissionDescriptorIterator_I
_0_transmissionDescriptor._tc_TransmissionDescriptorIterator_I = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_TransmissionDescriptorIterator_I)
omniORB.registerType(TransmissionDescriptorIterator_I._NP_RepositoryId, _0_transmissionDescriptor._d_TransmissionDescriptorIterator_I, _0_transmissionDescriptor._tc_TransmissionDescriptorIterator_I)

# TransmissionDescriptorIterator_I operations and attributes
TransmissionDescriptorIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# TransmissionDescriptorIterator_I object reference
class _objref_TransmissionDescriptorIterator_I (CORBA.Object):
    _NP_RepositoryId = TransmissionDescriptorIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_transmissionDescriptor.TransmissionDescriptorIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_transmissionDescriptor.TransmissionDescriptorIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_transmissionDescriptor.TransmissionDescriptorIterator_I._d_destroy, args)

omniORB.registerObjref(TransmissionDescriptorIterator_I._NP_RepositoryId, _objref_TransmissionDescriptorIterator_I)
_0_transmissionDescriptor._objref_TransmissionDescriptorIterator_I = _objref_TransmissionDescriptorIterator_I
del TransmissionDescriptorIterator_I, _objref_TransmissionDescriptorIterator_I

# TransmissionDescriptorIterator_I skeleton
__name__ = "transmissionDescriptor__POA"
class TransmissionDescriptorIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_transmissionDescriptor.TransmissionDescriptorIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_transmissionDescriptor.TransmissionDescriptorIterator_I._d_next_n, "getLength": _0_transmissionDescriptor.TransmissionDescriptorIterator_I._d_getLength, "destroy": _0_transmissionDescriptor.TransmissionDescriptorIterator_I._d_destroy}

TransmissionDescriptorIterator_I._omni_skeleton = TransmissionDescriptorIterator_I
_0_transmissionDescriptor__POA.TransmissionDescriptorIterator_I = TransmissionDescriptorIterator_I
omniORB.registerSkeleton(TransmissionDescriptorIterator_I._NP_RepositoryId, TransmissionDescriptorIterator_I)
del TransmissionDescriptorIterator_I
__name__ = "transmissionDescriptor"

# interface TransmissionDescriptorMgr_I
_0_transmissionDescriptor._d_TransmissionDescriptorMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorMgr_I:1.0", "TransmissionDescriptorMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorMgr_I:1.0"] = _0_transmissionDescriptor._d_TransmissionDescriptorMgr_I
_0_transmissionDescriptor.TransmissionDescriptorMgr_I = omniORB.newEmptyClass()
class TransmissionDescriptorMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_transmissionDescriptor._d_TransmissionDescriptorMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_transmissionDescriptor.TransmissionDescriptorMgr_I = TransmissionDescriptorMgr_I
_0_transmissionDescriptor._tc_TransmissionDescriptorMgr_I = omniORB.tcInternal.createTypeCode(_0_transmissionDescriptor._d_TransmissionDescriptorMgr_I)
omniORB.registerType(TransmissionDescriptorMgr_I._NP_RepositoryId, _0_transmissionDescriptor._d_TransmissionDescriptorMgr_I, _0_transmissionDescriptor._tc_TransmissionDescriptorMgr_I)

# TransmissionDescriptorMgr_I operations and attributes
TransmissionDescriptorMgr_I._d_getAllTransmissionDescriptors = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptorIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_getAllTransmissionDescriptorNames = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_getTransmissionDescriptor = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptor_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_getAssociatedTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_createTransmissionDescriptor = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TMDCreateData_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptor_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_deleteTransmissionDescriptor = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_modifyTransmissionDescriptor = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TMDModifyData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptor_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TransmissionDescriptor_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_validateTMDAssignmentToObject = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), ((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TransmissionDescriptorMgr_I._d_setTMDAssociation = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TPorMFDorFDFr_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionDescriptor/TPorMFDorFDFr_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# TransmissionDescriptorMgr_I object reference
class _objref_TransmissionDescriptorMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = TransmissionDescriptorMgr_I._NP_RepositoryId

    def __init__(self, obj):
        _0_common._objref_Common_I.__init__(self, obj)

    def getAllTransmissionDescriptors(self, *args):
        return self._obj.invoke("getAllTransmissionDescriptors", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getAllTransmissionDescriptors, args)

    def getAllTransmissionDescriptorNames(self, *args):
        return self._obj.invoke("getAllTransmissionDescriptorNames", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getAllTransmissionDescriptorNames, args)

    def getTransmissionDescriptor(self, *args):
        return self._obj.invoke("getTransmissionDescriptor", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getTransmissionDescriptor, args)

    def getAssociatedTPs(self, *args):
        return self._obj.invoke("getAssociatedTPs", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getAssociatedTPs, args)

    def createTransmissionDescriptor(self, *args):
        return self._obj.invoke("createTransmissionDescriptor", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_createTransmissionDescriptor, args)

    def deleteTransmissionDescriptor(self, *args):
        return self._obj.invoke("deleteTransmissionDescriptor", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_deleteTransmissionDescriptor, args)

    def modifyTransmissionDescriptor(self, *args):
        return self._obj.invoke("modifyTransmissionDescriptor", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_modifyTransmissionDescriptor, args)

    def validateTMDAssignmentToObject(self, *args):
        return self._obj.invoke("validateTMDAssignmentToObject", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_validateTMDAssignmentToObject, args)

    def setTMDAssociation(self, *args):
        return self._obj.invoke("setTMDAssociation", _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_setTMDAssociation, args)

omniORB.registerObjref(TransmissionDescriptorMgr_I._NP_RepositoryId, _objref_TransmissionDescriptorMgr_I)
_0_transmissionDescriptor._objref_TransmissionDescriptorMgr_I = _objref_TransmissionDescriptorMgr_I
del TransmissionDescriptorMgr_I, _objref_TransmissionDescriptorMgr_I

# TransmissionDescriptorMgr_I skeleton
__name__ = "transmissionDescriptor__POA"
class TransmissionDescriptorMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_transmissionDescriptor.TransmissionDescriptorMgr_I._NP_RepositoryId


    _omni_op_d = {"getAllTransmissionDescriptors": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getAllTransmissionDescriptors, "getAllTransmissionDescriptorNames": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getAllTransmissionDescriptorNames, "getTransmissionDescriptor": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getTransmissionDescriptor, "getAssociatedTPs": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_getAssociatedTPs, "createTransmissionDescriptor": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_createTransmissionDescriptor, "deleteTransmissionDescriptor": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_deleteTransmissionDescriptor, "modifyTransmissionDescriptor": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_modifyTransmissionDescriptor, "validateTMDAssignmentToObject": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_validateTMDAssignmentToObject, "setTMDAssociation": _0_transmissionDescriptor.TransmissionDescriptorMgr_I._d_setTMDAssociation}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

TransmissionDescriptorMgr_I._omni_skeleton = TransmissionDescriptorMgr_I
_0_transmissionDescriptor__POA.TransmissionDescriptorMgr_I = TransmissionDescriptorMgr_I
omniORB.registerSkeleton(TransmissionDescriptorMgr_I._NP_RepositoryId, TransmissionDescriptorMgr_I)
del TransmissionDescriptorMgr_I
__name__ = "transmissionDescriptor"

#
# End of module "transmissionDescriptor"
#
__name__ = "transmissionDescriptor_idl"

_exported_modules = ( "transmissionDescriptor", )

# The end.
