# Python stubs generated by omniidl from emsMgr.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "mLSNPP.idl"
import mLSNPP_idl
_0_mLSNPP = omniORB.openModule("mLSNPP")
_0_mLSNPP__POA = omniORB.openModule("mLSNPP__POA")

# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

# #include "mLSNPPLink.idl"
import mLSNPPLink_idl
_0_mLSNPPLink = omniORB.openModule("mLSNPPLink")
_0_mLSNPPLink__POA = omniORB.openModule("mLSNPPLink__POA")

# #include "callSNC.idl"
import callSNC_idl
_0_callSNC = omniORB.openModule("callSNC")
_0_callSNC__POA = omniORB.openModule("callSNC__POA")

# #include "managedElement.idl"
import managedElement_idl
_0_managedElement = omniORB.openModule("managedElement")
_0_managedElement__POA = omniORB.openModule("managedElement__POA")

# #include "topologicalLink.idl"
import topologicalLink_idl
_0_topologicalLink = omniORB.openModule("topologicalLink")
_0_topologicalLink__POA = omniORB.openModule("topologicalLink__POA")

# #include "multiLayerSubnetwork.idl"
import multiLayerSubnetwork_idl
_0_multiLayerSubnetwork = omniORB.openModule("multiLayerSubnetwork")
_0_multiLayerSubnetwork__POA = omniORB.openModule("multiLayerSubnetwork__POA")

# #include "OMGidl/CosNotification.idl"
import CosNotification_idl
_0_CosNotification = omniORB.openModule("CosNotification")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA")

# #include "performance.idl"
import performance_idl
_0_performance = omniORB.openModule("performance")
_0_performance__POA = omniORB.openModule("performance__POA")

# #include "notifications.idl"
import notifications_idl
_0_notifications = omniORB.openModule("notifications")
_0_notifications__POA = omniORB.openModule("notifications__POA")

# #include "aSAP.idl"
import aSAP_idl
_0_aSAP = omniORB.openModule("aSAP")
_0_aSAP__POA = omniORB.openModule("aSAP__POA")

#
# Start of module "emsMgr"
#
__name__ = "emsMgr"
_0_emsMgr = omniORB.openModule("emsMgr", r"emsMgr.idl")
_0_emsMgr__POA = omniORB.openModule("emsMgr__POA", r"emsMgr.idl")


# struct EMS_T
_0_emsMgr.EMS_T = omniORB.newEmptyClass()
class EMS_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/emsMgr/EMS_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, emsVersion, type, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.emsVersion = emsVersion
        self.type = type
        self.additionalInfo = additionalInfo

_0_emsMgr.EMS_T = EMS_T
_0_emsMgr._d_EMS_T  = (omniORB.tcInternal.tv_struct, EMS_T, EMS_T._NP_RepositoryId, "EMS_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "emsVersion", (omniORB.tcInternal.tv_string,0), "type", (omniORB.tcInternal.tv_string,0), "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_emsMgr._tc_EMS_T = omniORB.tcInternal.createTypeCode(_0_emsMgr._d_EMS_T)
omniORB.registerType(EMS_T._NP_RepositoryId, _0_emsMgr._d_EMS_T, _0_emsMgr._tc_EMS_T)
del EMS_T

# interface EMSMgr_I
_0_emsMgr._d_EMSMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/emsMgr/EMSMgr_I:1.0", "EMSMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/emsMgr/EMSMgr_I:1.0"] = _0_emsMgr._d_EMSMgr_I
_0_emsMgr.EMSMgr_I = omniORB.newEmptyClass()
class EMSMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_emsMgr._d_EMSMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_emsMgr.EMSMgr_I = EMSMgr_I
_0_emsMgr._tc_EMSMgr_I = omniORB.tcInternal.createTypeCode(_0_emsMgr._d_EMSMgr_I)
omniORB.registerType(EMSMgr_I._NP_RepositoryId, _0_emsMgr._d_EMSMgr_I, _0_emsMgr._tc_EMSMgr_I)

# EMSMgr_I operations and attributes
EMSMgr_I._d_getEMS = ((), (omniORB.typeMapping["IDL:mtnm.tmforum.org/emsMgr/EMS_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLRAs = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllTopLevelSubnetworks = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllTopLevelSubnetworkNames = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLSNPPLinks = ((omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLSNPPLinksWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLSNPPLinksWithMLSNs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLSNPPLinksWithTNAs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/TNAList_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLSNPPs = ((omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLSNPPsWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllMLSNPPsWithTNA = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/TNAList_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllTopLevelTopologicalLinks = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllTopLevelTopologicalLinkNames = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getTopLevelTopologicalLink = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLink_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllEMSAndMEActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/ProbableCauseList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllEMSSystemActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_createTopologicalLink = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TLCreateData_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLink_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_deleteTopologicalLink = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_acknowledgeAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/AlarmAndTCAIDList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/AlarmAndTCAIDList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_unacknowledgeAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/AlarmAndTCAIDList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/AlarmAndTCAIDList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllEMSAndMEUnacknowledgedActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/ProbableCauseList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllEMSSystemUnacknowledgedActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_createASAP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAPCreateModifyData_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAP_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_deleteASAP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_assignASAP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_deassignASAP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_modifyASAP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAPCreateModifyData_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAP_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllASAPs = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAPList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAPIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getAllASAPNames = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getASAP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAP_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getASAPbyResource = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAPList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/aSAP/ASAPIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EMSMgr_I._d_getASAPAssociatedResourceNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# EMSMgr_I object reference
class _objref_EMSMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = EMSMgr_I._NP_RepositoryId

    def __init__(self, obj):
        _0_common._objref_Common_I.__init__(self, obj)

    def getEMS(self, *args):
        return self._obj.invoke("getEMS", _0_emsMgr.EMSMgr_I._d_getEMS, args)

    def getAllMLRAs(self, *args):
        return self._obj.invoke("getAllMLRAs", _0_emsMgr.EMSMgr_I._d_getAllMLRAs, args)

    def getAllTopLevelSubnetworks(self, *args):
        return self._obj.invoke("getAllTopLevelSubnetworks", _0_emsMgr.EMSMgr_I._d_getAllTopLevelSubnetworks, args)

    def getAllTopLevelSubnetworkNames(self, *args):
        return self._obj.invoke("getAllTopLevelSubnetworkNames", _0_emsMgr.EMSMgr_I._d_getAllTopLevelSubnetworkNames, args)

    def getAllMLSNPPLinks(self, *args):
        return self._obj.invoke("getAllMLSNPPLinks", _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinks, args)

    def getAllMLSNPPLinksWithTP(self, *args):
        return self._obj.invoke("getAllMLSNPPLinksWithTP", _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinksWithTP, args)

    def getAllMLSNPPLinksWithMLSNs(self, *args):
        return self._obj.invoke("getAllMLSNPPLinksWithMLSNs", _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinksWithMLSNs, args)

    def getAllMLSNPPLinksWithTNAs(self, *args):
        return self._obj.invoke("getAllMLSNPPLinksWithTNAs", _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinksWithTNAs, args)

    def getAllMLSNPPs(self, *args):
        return self._obj.invoke("getAllMLSNPPs", _0_emsMgr.EMSMgr_I._d_getAllMLSNPPs, args)

    def getAllMLSNPPsWithTP(self, *args):
        return self._obj.invoke("getAllMLSNPPsWithTP", _0_emsMgr.EMSMgr_I._d_getAllMLSNPPsWithTP, args)

    def getAllMLSNPPsWithTNA(self, *args):
        return self._obj.invoke("getAllMLSNPPsWithTNA", _0_emsMgr.EMSMgr_I._d_getAllMLSNPPsWithTNA, args)

    def getAllTopLevelTopologicalLinks(self, *args):
        return self._obj.invoke("getAllTopLevelTopologicalLinks", _0_emsMgr.EMSMgr_I._d_getAllTopLevelTopologicalLinks, args)

    def getAllTopLevelTopologicalLinkNames(self, *args):
        return self._obj.invoke("getAllTopLevelTopologicalLinkNames", _0_emsMgr.EMSMgr_I._d_getAllTopLevelTopologicalLinkNames, args)

    def getTopLevelTopologicalLink(self, *args):
        return self._obj.invoke("getTopLevelTopologicalLink", _0_emsMgr.EMSMgr_I._d_getTopLevelTopologicalLink, args)

    def getAllEMSAndMEActiveAlarms(self, *args):
        return self._obj.invoke("getAllEMSAndMEActiveAlarms", _0_emsMgr.EMSMgr_I._d_getAllEMSAndMEActiveAlarms, args)

    def getAllEMSSystemActiveAlarms(self, *args):
        return self._obj.invoke("getAllEMSSystemActiveAlarms", _0_emsMgr.EMSMgr_I._d_getAllEMSSystemActiveAlarms, args)

    def createTopologicalLink(self, *args):
        return self._obj.invoke("createTopologicalLink", _0_emsMgr.EMSMgr_I._d_createTopologicalLink, args)

    def deleteTopologicalLink(self, *args):
        return self._obj.invoke("deleteTopologicalLink", _0_emsMgr.EMSMgr_I._d_deleteTopologicalLink, args)

    def acknowledgeAlarms(self, *args):
        return self._obj.invoke("acknowledgeAlarms", _0_emsMgr.EMSMgr_I._d_acknowledgeAlarms, args)

    def unacknowledgeAlarms(self, *args):
        return self._obj.invoke("unacknowledgeAlarms", _0_emsMgr.EMSMgr_I._d_unacknowledgeAlarms, args)

    def getAllEMSAndMEUnacknowledgedActiveAlarms(self, *args):
        return self._obj.invoke("getAllEMSAndMEUnacknowledgedActiveAlarms", _0_emsMgr.EMSMgr_I._d_getAllEMSAndMEUnacknowledgedActiveAlarms, args)

    def getAllEMSSystemUnacknowledgedActiveAlarms(self, *args):
        return self._obj.invoke("getAllEMSSystemUnacknowledgedActiveAlarms", _0_emsMgr.EMSMgr_I._d_getAllEMSSystemUnacknowledgedActiveAlarms, args)

    def createASAP(self, *args):
        return self._obj.invoke("createASAP", _0_emsMgr.EMSMgr_I._d_createASAP, args)

    def deleteASAP(self, *args):
        return self._obj.invoke("deleteASAP", _0_emsMgr.EMSMgr_I._d_deleteASAP, args)

    def assignASAP(self, *args):
        return self._obj.invoke("assignASAP", _0_emsMgr.EMSMgr_I._d_assignASAP, args)

    def deassignASAP(self, *args):
        return self._obj.invoke("deassignASAP", _0_emsMgr.EMSMgr_I._d_deassignASAP, args)

    def modifyASAP(self, *args):
        return self._obj.invoke("modifyASAP", _0_emsMgr.EMSMgr_I._d_modifyASAP, args)

    def getAllASAPs(self, *args):
        return self._obj.invoke("getAllASAPs", _0_emsMgr.EMSMgr_I._d_getAllASAPs, args)

    def getAllASAPNames(self, *args):
        return self._obj.invoke("getAllASAPNames", _0_emsMgr.EMSMgr_I._d_getAllASAPNames, args)

    def getASAP(self, *args):
        return self._obj.invoke("getASAP", _0_emsMgr.EMSMgr_I._d_getASAP, args)

    def getASAPbyResource(self, *args):
        return self._obj.invoke("getASAPbyResource", _0_emsMgr.EMSMgr_I._d_getASAPbyResource, args)

    def getASAPAssociatedResourceNames(self, *args):
        return self._obj.invoke("getASAPAssociatedResourceNames", _0_emsMgr.EMSMgr_I._d_getASAPAssociatedResourceNames, args)

omniORB.registerObjref(EMSMgr_I._NP_RepositoryId, _objref_EMSMgr_I)
_0_emsMgr._objref_EMSMgr_I = _objref_EMSMgr_I
del EMSMgr_I, _objref_EMSMgr_I

# EMSMgr_I skeleton
__name__ = "emsMgr__POA"
class EMSMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_emsMgr.EMSMgr_I._NP_RepositoryId


    _omni_op_d = {"getEMS": _0_emsMgr.EMSMgr_I._d_getEMS, "getAllMLRAs": _0_emsMgr.EMSMgr_I._d_getAllMLRAs, "getAllTopLevelSubnetworks": _0_emsMgr.EMSMgr_I._d_getAllTopLevelSubnetworks, "getAllTopLevelSubnetworkNames": _0_emsMgr.EMSMgr_I._d_getAllTopLevelSubnetworkNames, "getAllMLSNPPLinks": _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinks, "getAllMLSNPPLinksWithTP": _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinksWithTP, "getAllMLSNPPLinksWithMLSNs": _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinksWithMLSNs, "getAllMLSNPPLinksWithTNAs": _0_emsMgr.EMSMgr_I._d_getAllMLSNPPLinksWithTNAs, "getAllMLSNPPs": _0_emsMgr.EMSMgr_I._d_getAllMLSNPPs, "getAllMLSNPPsWithTP": _0_emsMgr.EMSMgr_I._d_getAllMLSNPPsWithTP, "getAllMLSNPPsWithTNA": _0_emsMgr.EMSMgr_I._d_getAllMLSNPPsWithTNA, "getAllTopLevelTopologicalLinks": _0_emsMgr.EMSMgr_I._d_getAllTopLevelTopologicalLinks, "getAllTopLevelTopologicalLinkNames": _0_emsMgr.EMSMgr_I._d_getAllTopLevelTopologicalLinkNames, "getTopLevelTopologicalLink": _0_emsMgr.EMSMgr_I._d_getTopLevelTopologicalLink, "getAllEMSAndMEActiveAlarms": _0_emsMgr.EMSMgr_I._d_getAllEMSAndMEActiveAlarms, "getAllEMSSystemActiveAlarms": _0_emsMgr.EMSMgr_I._d_getAllEMSSystemActiveAlarms, "createTopologicalLink": _0_emsMgr.EMSMgr_I._d_createTopologicalLink, "deleteTopologicalLink": _0_emsMgr.EMSMgr_I._d_deleteTopologicalLink, "acknowledgeAlarms": _0_emsMgr.EMSMgr_I._d_acknowledgeAlarms, "unacknowledgeAlarms": _0_emsMgr.EMSMgr_I._d_unacknowledgeAlarms, "getAllEMSAndMEUnacknowledgedActiveAlarms": _0_emsMgr.EMSMgr_I._d_getAllEMSAndMEUnacknowledgedActiveAlarms, "getAllEMSSystemUnacknowledgedActiveAlarms": _0_emsMgr.EMSMgr_I._d_getAllEMSSystemUnacknowledgedActiveAlarms, "createASAP": _0_emsMgr.EMSMgr_I._d_createASAP, "deleteASAP": _0_emsMgr.EMSMgr_I._d_deleteASAP, "assignASAP": _0_emsMgr.EMSMgr_I._d_assignASAP, "deassignASAP": _0_emsMgr.EMSMgr_I._d_deassignASAP, "modifyASAP": _0_emsMgr.EMSMgr_I._d_modifyASAP, "getAllASAPs": _0_emsMgr.EMSMgr_I._d_getAllASAPs, "getAllASAPNames": _0_emsMgr.EMSMgr_I._d_getAllASAPNames, "getASAP": _0_emsMgr.EMSMgr_I._d_getASAP, "getASAPbyResource": _0_emsMgr.EMSMgr_I._d_getASAPbyResource, "getASAPAssociatedResourceNames": _0_emsMgr.EMSMgr_I._d_getASAPAssociatedResourceNames}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

EMSMgr_I._omni_skeleton = EMSMgr_I
_0_emsMgr__POA.EMSMgr_I = EMSMgr_I
omniORB.registerSkeleton(EMSMgr_I._NP_RepositoryId, EMSMgr_I)
del EMSMgr_I
__name__ = "emsMgr"

#
# End of module "emsMgr"
#
__name__ = "emsMgr_idl"

_exported_modules = ( "emsMgr", )

# The end.
