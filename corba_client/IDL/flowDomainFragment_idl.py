# Python stubs generated by omniidl from flowDomainFragment.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

# #include "performance.idl"
import performance_idl
_0_performance = omniORB.openModule("performance")
_0_performance__POA = omniORB.openModule("performance__POA")

#
# Start of module "flowDomainFragment"
#
__name__ = "flowDomainFragment"
_0_flowDomainFragment = omniORB.openModule("flowDomainFragment", r"flowDomainFragment.idl")
_0_flowDomainFragment__POA = omniORB.openModule("flowDomainFragment__POA", r"flowDomainFragment.idl")


# typedef ... FDFrType_T
class FDFrType_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/FDFrType_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomainFragment.FDFrType_T = FDFrType_T
_0_flowDomainFragment._d_FDFrType_T  = (omniORB.tcInternal.tv_string,0)
_0_flowDomainFragment._ad_FDFrType_T = (omniORB.tcInternal.tv_alias, FDFrType_T._NP_RepositoryId, "FDFrType_T", (omniORB.tcInternal.tv_string,0))
_0_flowDomainFragment._tc_FDFrType_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._ad_FDFrType_T)
omniORB.registerType(FDFrType_T._NP_RepositoryId, _0_flowDomainFragment._ad_FDFrType_T, _0_flowDomainFragment._tc_FDFrType_T)
del FDFrType_T

# struct MatrixFlowDomainFragment_T
_0_flowDomainFragment.MatrixFlowDomainFragment_T = omniORB.newEmptyClass()
class MatrixFlowDomainFragment_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragment_T:1.0"

    def __init__(self, direction, transmissionParams, aEnd, zEnd, flexible, active, mfdfrType, additionalInfo):
        self.direction = direction
        self.transmissionParams = transmissionParams
        self.aEnd = aEnd
        self.zEnd = zEnd
        self.flexible = flexible
        self.active = active
        self.mfdfrType = mfdfrType
        self.additionalInfo = additionalInfo

_0_flowDomainFragment.MatrixFlowDomainFragment_T = MatrixFlowDomainFragment_T
_0_flowDomainFragment._d_MatrixFlowDomainFragment_T  = (omniORB.tcInternal.tv_struct, MatrixFlowDomainFragment_T, MatrixFlowDomainFragment_T._NP_RepositoryId, "MatrixFlowDomainFragment_T", "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameters_T:1.0"], "aEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "zEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "flexible", omniORB.tcInternal.tv_boolean, "active", omniORB.tcInternal.tv_boolean, "mfdfrType", omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrType_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomainFragment._tc_MatrixFlowDomainFragment_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._d_MatrixFlowDomainFragment_T)
omniORB.registerType(MatrixFlowDomainFragment_T._NP_RepositoryId, _0_flowDomainFragment._d_MatrixFlowDomainFragment_T, _0_flowDomainFragment._tc_MatrixFlowDomainFragment_T)
del MatrixFlowDomainFragment_T

# typedef ... MatrixFlowDomainFragmentList_T
class MatrixFlowDomainFragmentList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragmentList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomainFragment.MatrixFlowDomainFragmentList_T = MatrixFlowDomainFragmentList_T
_0_flowDomainFragment._d_MatrixFlowDomainFragmentList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragment_T:1.0"], 0)
_0_flowDomainFragment._ad_MatrixFlowDomainFragmentList_T = (omniORB.tcInternal.tv_alias, MatrixFlowDomainFragmentList_T._NP_RepositoryId, "MatrixFlowDomainFragmentList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragment_T:1.0"], 0))
_0_flowDomainFragment._tc_MatrixFlowDomainFragmentList_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._ad_MatrixFlowDomainFragmentList_T)
omniORB.registerType(MatrixFlowDomainFragmentList_T._NP_RepositoryId, _0_flowDomainFragment._ad_MatrixFlowDomainFragmentList_T, _0_flowDomainFragment._tc_MatrixFlowDomainFragmentList_T)
del MatrixFlowDomainFragmentList_T

# typedef ... FDFrRoute_T
class FDFrRoute_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/FDFrRoute_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomainFragment.FDFrRoute_T = FDFrRoute_T
_0_flowDomainFragment._d_FDFrRoute_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragment_T:1.0"], 0)
_0_flowDomainFragment._ad_FDFrRoute_T = (omniORB.tcInternal.tv_alias, FDFrRoute_T._NP_RepositoryId, "FDFrRoute_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragment_T:1.0"], 0))
_0_flowDomainFragment._tc_FDFrRoute_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._ad_FDFrRoute_T)
omniORB.registerType(FDFrRoute_T._NP_RepositoryId, _0_flowDomainFragment._ad_FDFrRoute_T, _0_flowDomainFragment._tc_FDFrRoute_T)
del FDFrRoute_T

# struct FlowDomainFragment_T
_0_flowDomainFragment.FlowDomainFragment_T = omniORB.newEmptyClass()
class FlowDomainFragment_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, direction, transmissionParams, aEnd, zEnd, networkAccessDomain, flexible, administrativeState, fdfrState, fdfrType, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.direction = direction
        self.transmissionParams = transmissionParams
        self.aEnd = aEnd
        self.zEnd = zEnd
        self.networkAccessDomain = networkAccessDomain
        self.flexible = flexible
        self.administrativeState = administrativeState
        self.fdfrState = fdfrState
        self.fdfrType = fdfrType
        self.additionalInfo = additionalInfo

_0_flowDomainFragment.FlowDomainFragment_T = FlowDomainFragment_T
_0_flowDomainFragment._d_FlowDomainFragment_T  = (omniORB.tcInternal.tv_struct, FlowDomainFragment_T, FlowDomainFragment_T._NP_RepositoryId, "FlowDomainFragment_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameters_T:1.0"], "aEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], "zEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "flexible", omniORB.tcInternal.tv_boolean, "administrativeState", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/AdministrativeState_T:1.0"], "fdfrState", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCState_T:1.0"], "fdfrType", omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrType_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomainFragment._tc_FlowDomainFragment_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._d_FlowDomainFragment_T)
omniORB.registerType(FlowDomainFragment_T._NP_RepositoryId, _0_flowDomainFragment._d_FlowDomainFragment_T, _0_flowDomainFragment._tc_FlowDomainFragment_T)
del FlowDomainFragment_T

# typedef ... FDFrList_T
class FDFrList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/FDFrList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomainFragment.FDFrList_T = FDFrList_T
_0_flowDomainFragment._d_FDFrList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"], 0)
_0_flowDomainFragment._ad_FDFrList_T = (omniORB.tcInternal.tv_alias, FDFrList_T._NP_RepositoryId, "FDFrList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"], 0))
_0_flowDomainFragment._tc_FDFrList_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._ad_FDFrList_T)
omniORB.registerType(FDFrList_T._NP_RepositoryId, _0_flowDomainFragment._ad_FDFrList_T, _0_flowDomainFragment._tc_FDFrList_T)
del FDFrList_T

# interface MFDFrIterator_I
_0_flowDomainFragment._d_MFDFrIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/flowDomainFragment/MFDFrIterator_I:1.0", "MFDFrIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MFDFrIterator_I:1.0"] = _0_flowDomainFragment._d_MFDFrIterator_I
_0_flowDomainFragment.MFDFrIterator_I = omniORB.newEmptyClass()
class MFDFrIterator_I :
    _NP_RepositoryId = _0_flowDomainFragment._d_MFDFrIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_flowDomainFragment.MFDFrIterator_I = MFDFrIterator_I
_0_flowDomainFragment._tc_MFDFrIterator_I = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._d_MFDFrIterator_I)
omniORB.registerType(MFDFrIterator_I._NP_RepositoryId, _0_flowDomainFragment._d_MFDFrIterator_I, _0_flowDomainFragment._tc_MFDFrIterator_I)

# MFDFrIterator_I operations and attributes
MFDFrIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragmentList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MFDFrIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MFDFrIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# MFDFrIterator_I object reference
class _objref_MFDFrIterator_I (CORBA.Object):
    _NP_RepositoryId = MFDFrIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_flowDomainFragment.MFDFrIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_flowDomainFragment.MFDFrIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_flowDomainFragment.MFDFrIterator_I._d_destroy, args)

omniORB.registerObjref(MFDFrIterator_I._NP_RepositoryId, _objref_MFDFrIterator_I)
_0_flowDomainFragment._objref_MFDFrIterator_I = _objref_MFDFrIterator_I
del MFDFrIterator_I, _objref_MFDFrIterator_I

# MFDFrIterator_I skeleton
__name__ = "flowDomainFragment__POA"
class MFDFrIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_flowDomainFragment.MFDFrIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_flowDomainFragment.MFDFrIterator_I._d_next_n, "getLength": _0_flowDomainFragment.MFDFrIterator_I._d_getLength, "destroy": _0_flowDomainFragment.MFDFrIterator_I._d_destroy}

MFDFrIterator_I._omni_skeleton = MFDFrIterator_I
_0_flowDomainFragment__POA.MFDFrIterator_I = MFDFrIterator_I
omniORB.registerSkeleton(MFDFrIterator_I._NP_RepositoryId, MFDFrIterator_I)
del MFDFrIterator_I
__name__ = "flowDomainFragment"

# interface FDFrIterator_I
_0_flowDomainFragment._d_FDFrIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/flowDomainFragment/FDFrIterator_I:1.0", "FDFrIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrIterator_I:1.0"] = _0_flowDomainFragment._d_FDFrIterator_I
_0_flowDomainFragment.FDFrIterator_I = omniORB.newEmptyClass()
class FDFrIterator_I :
    _NP_RepositoryId = _0_flowDomainFragment._d_FDFrIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_flowDomainFragment.FDFrIterator_I = FDFrIterator_I
_0_flowDomainFragment._tc_FDFrIterator_I = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._d_FDFrIterator_I)
omniORB.registerType(FDFrIterator_I._NP_RepositoryId, _0_flowDomainFragment._d_FDFrIterator_I, _0_flowDomainFragment._tc_FDFrIterator_I)

# FDFrIterator_I operations and attributes
FDFrIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FDFrIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FDFrIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# FDFrIterator_I object reference
class _objref_FDFrIterator_I (CORBA.Object):
    _NP_RepositoryId = FDFrIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_flowDomainFragment.FDFrIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_flowDomainFragment.FDFrIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_flowDomainFragment.FDFrIterator_I._d_destroy, args)

omniORB.registerObjref(FDFrIterator_I._NP_RepositoryId, _objref_FDFrIterator_I)
_0_flowDomainFragment._objref_FDFrIterator_I = _objref_FDFrIterator_I
del FDFrIterator_I, _objref_FDFrIterator_I

# FDFrIterator_I skeleton
__name__ = "flowDomainFragment__POA"
class FDFrIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_flowDomainFragment.FDFrIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_flowDomainFragment.FDFrIterator_I._d_next_n, "getLength": _0_flowDomainFragment.FDFrIterator_I._d_getLength, "destroy": _0_flowDomainFragment.FDFrIterator_I._d_destroy}

FDFrIterator_I._omni_skeleton = FDFrIterator_I
_0_flowDomainFragment__POA.FDFrIterator_I = FDFrIterator_I
omniORB.registerSkeleton(FDFrIterator_I._NP_RepositoryId, FDFrIterator_I)
del FDFrIterator_I
__name__ = "flowDomainFragment"

# struct FDFrCreateData_T
_0_flowDomainFragment.FDFrCreateData_T = omniORB.newEmptyClass()
class FDFrCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/FDFrCreateData_T:1.0"

    def __init__(self, name, userLabel, forceUniqueness, owner, networkAccessDomain, direction, administrativeState, transmissionParams, fullRoute, fdfrType, additionalCreationInfo):
        self.name = name
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.direction = direction
        self.administrativeState = administrativeState
        self.transmissionParams = transmissionParams
        self.fullRoute = fullRoute
        self.fdfrType = fdfrType
        self.additionalCreationInfo = additionalCreationInfo

_0_flowDomainFragment.FDFrCreateData_T = FDFrCreateData_T
_0_flowDomainFragment._d_FDFrCreateData_T  = (omniORB.tcInternal.tv_struct, FDFrCreateData_T, FDFrCreateData_T._NP_RepositoryId, "FDFrCreateData_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"], "administrativeState", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/AdministrativeState_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameters_T:1.0"], "fullRoute", omniORB.tcInternal.tv_boolean, "fdfrType", omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrType_T:1.0"], "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomainFragment._tc_FDFrCreateData_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._d_FDFrCreateData_T)
omniORB.registerType(FDFrCreateData_T._NP_RepositoryId, _0_flowDomainFragment._d_FDFrCreateData_T, _0_flowDomainFragment._tc_FDFrCreateData_T)
del FDFrCreateData_T

# struct FDFrModifyData_T
_0_flowDomainFragment.FDFrModifyData_T = omniORB.newEmptyClass()
class FDFrModifyData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomainFragment/FDFrModifyData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, networkAccessDomain, administrativeState, transmissionParams, tpNamesToRemove, aEndTPNames, zEndTPNames, internalTPNames, additionalModificationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.administrativeState = administrativeState
        self.transmissionParams = transmissionParams
        self.tpNamesToRemove = tpNamesToRemove
        self.aEndTPNames = aEndTPNames
        self.zEndTPNames = zEndTPNames
        self.internalTPNames = internalTPNames
        self.additionalModificationInfo = additionalModificationInfo

_0_flowDomainFragment.FDFrModifyData_T = FDFrModifyData_T
_0_flowDomainFragment._d_FDFrModifyData_T  = (omniORB.tcInternal.tv_struct, FDFrModifyData_T, FDFrModifyData_T._NP_RepositoryId, "FDFrModifyData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "administrativeState", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/AdministrativeState_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameters_T:1.0"], "tpNamesToRemove", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "aEndTPNames", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "zEndTPNames", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "internalTPNames", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "additionalModificationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomainFragment._tc_FDFrModifyData_T = omniORB.tcInternal.createTypeCode(_0_flowDomainFragment._d_FDFrModifyData_T)
omniORB.registerType(FDFrModifyData_T._NP_RepositoryId, _0_flowDomainFragment._d_FDFrModifyData_T, _0_flowDomainFragment._tc_FDFrModifyData_T)
del FDFrModifyData_T

#
# End of module "flowDomainFragment"
#
__name__ = "flowDomainFragment_idl"

_exported_modules = ( "flowDomainFragment", )

# The end.
