# Python stubs generated by omniidl from DsNotifyLogAdmin.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")

# #include "CosEventChannelAdmin.idl"
import CosEventChannelAdmin_idl
_0_CosEventChannelAdmin = omniORB.openModule("CosEventChannelAdmin")
_0_CosEventChannelAdmin__POA = omniORB.openModule("CosEventChannelAdmin__POA")

# #include "TimeBase.idl"
import TimeBase_idl
_0_TimeBase = omniORB.openModule("TimeBase")
_0_TimeBase__POA = omniORB.openModule("TimeBase__POA")

# #include "DsLogAdmin.idl"
import DsLogAdmin_idl
_0_DsLogAdmin = omniORB.openModule("DsLogAdmin")
_0_DsLogAdmin__POA = omniORB.openModule("DsLogAdmin__POA")

# #include "DsEventLogAdmin.idl"
import DsEventLogAdmin_idl
_0_DsEventLogAdmin = omniORB.openModule("DsEventLogAdmin")
_0_DsEventLogAdmin__POA = omniORB.openModule("DsEventLogAdmin__POA")

# #include "CosNotification.idl"
import CosNotification_idl
_0_CosNotification = omniORB.openModule("CosNotification")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA")

# #include "CosNotifyComm.idl"
import CosNotifyComm_idl
_0_CosNotifyComm = omniORB.openModule("CosNotifyComm")
_0_CosNotifyComm__POA = omniORB.openModule("CosNotifyComm__POA")

# #include "orb.idl"
import orb_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "CosNotifyFilter.idl"
import CosNotifyFilter_idl
_0_CosNotifyFilter = omniORB.openModule("CosNotifyFilter")
_0_CosNotifyFilter__POA = omniORB.openModule("CosNotifyFilter__POA")

# #include "CosNotifyChannelAdmin.idl"
import CosNotifyChannelAdmin_idl
_0_CosNotifyChannelAdmin = omniORB.openModule("CosNotifyChannelAdmin")
_0_CosNotifyChannelAdmin__POA = omniORB.openModule("CosNotifyChannelAdmin__POA")

#
# Start of module "DsNotifyLogAdmin"
#
__name__ = "DsNotifyLogAdmin"
_0_DsNotifyLogAdmin = omniORB.openModule("DsNotifyLogAdmin", r"DsNotifyLogAdmin.idl")
_0_DsNotifyLogAdmin__POA = omniORB.openModule("DsNotifyLogAdmin__POA", r"DsNotifyLogAdmin.idl")


# interface NotifyLog
_0_DsNotifyLogAdmin._d_NotifyLog = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsNotifyLogAdmin/NotifyLog:1.0", "NotifyLog")
omniORB.typeMapping["IDL:omg.org/DsNotifyLogAdmin/NotifyLog:1.0"] = _0_DsNotifyLogAdmin._d_NotifyLog
_0_DsNotifyLogAdmin.NotifyLog = omniORB.newEmptyClass()
class NotifyLog (_0_DsEventLogAdmin.EventLog, _0_CosNotifyChannelAdmin.EventChannel):
    _NP_RepositoryId = _0_DsNotifyLogAdmin._d_NotifyLog[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DsNotifyLogAdmin.NotifyLog = NotifyLog
_0_DsNotifyLogAdmin._tc_NotifyLog = omniORB.tcInternal.createTypeCode(_0_DsNotifyLogAdmin._d_NotifyLog)
omniORB.registerType(NotifyLog._NP_RepositoryId, _0_DsNotifyLogAdmin._d_NotifyLog, _0_DsNotifyLogAdmin._tc_NotifyLog)

# NotifyLog operations and attributes
NotifyLog._d_get_filter = ((), (omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/Filter:1.0"], ), None)
NotifyLog._d_set_filter = ((omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/Filter:1.0"], ), (), None)

# NotifyLog object reference
class _objref_NotifyLog (_0_DsEventLogAdmin._objref_EventLog, _0_CosNotifyChannelAdmin._objref_EventChannel):
    _NP_RepositoryId = NotifyLog._NP_RepositoryId

    def __init__(self, obj):
        _0_DsEventLogAdmin._objref_EventLog.__init__(self, obj)
        _0_CosNotifyChannelAdmin._objref_EventChannel.__init__(self, obj)

    def get_filter(self, *args):
        return self._obj.invoke("get_filter", _0_DsNotifyLogAdmin.NotifyLog._d_get_filter, args)

    def set_filter(self, *args):
        return self._obj.invoke("set_filter", _0_DsNotifyLogAdmin.NotifyLog._d_set_filter, args)

omniORB.registerObjref(NotifyLog._NP_RepositoryId, _objref_NotifyLog)
_0_DsNotifyLogAdmin._objref_NotifyLog = _objref_NotifyLog
del NotifyLog, _objref_NotifyLog

# NotifyLog skeleton
__name__ = "DsNotifyLogAdmin__POA"
class NotifyLog (_0_DsEventLogAdmin__POA.EventLog, _0_CosNotifyChannelAdmin__POA.EventChannel):
    _NP_RepositoryId = _0_DsNotifyLogAdmin.NotifyLog._NP_RepositoryId


    _omni_op_d = {"get_filter": _0_DsNotifyLogAdmin.NotifyLog._d_get_filter, "set_filter": _0_DsNotifyLogAdmin.NotifyLog._d_set_filter}
    _omni_op_d.update(_0_DsEventLogAdmin__POA.EventLog._omni_op_d)
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.EventChannel._omni_op_d)

NotifyLog._omni_skeleton = NotifyLog
_0_DsNotifyLogAdmin__POA.NotifyLog = NotifyLog
omniORB.registerSkeleton(NotifyLog._NP_RepositoryId, NotifyLog)
del NotifyLog
__name__ = "DsNotifyLogAdmin"

# interface NotifyLogFactory
_0_DsNotifyLogAdmin._d_NotifyLogFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsNotifyLogAdmin/NotifyLogFactory:1.0", "NotifyLogFactory")
omniORB.typeMapping["IDL:omg.org/DsNotifyLogAdmin/NotifyLogFactory:1.0"] = _0_DsNotifyLogAdmin._d_NotifyLogFactory
_0_DsNotifyLogAdmin.NotifyLogFactory = omniORB.newEmptyClass()
class NotifyLogFactory (_0_DsLogAdmin.LogMgr, _0_CosNotifyChannelAdmin.ConsumerAdmin):
    _NP_RepositoryId = _0_DsNotifyLogAdmin._d_NotifyLogFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DsNotifyLogAdmin.NotifyLogFactory = NotifyLogFactory
_0_DsNotifyLogAdmin._tc_NotifyLogFactory = omniORB.tcInternal.createTypeCode(_0_DsNotifyLogAdmin._d_NotifyLogFactory)
omniORB.registerType(NotifyLogFactory._NP_RepositoryId, _0_DsNotifyLogAdmin._d_NotifyLogFactory, _0_DsNotifyLogAdmin._tc_NotifyLogFactory)

# NotifyLogFactory operations and attributes
NotifyLogFactory._d_create = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogFullActionType:1.0"], omniORB.tcInternal.tv_ulonglong, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/CapacityAlarmThresholdList:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotification/AdminProperties:1.0"]), (omniORB.typeMapping["IDL:omg.org/DsNotifyLogAdmin/NotifyLog:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"]), {_0_DsLogAdmin.InvalidLogFullAction._NP_RepositoryId: _0_DsLogAdmin._d_InvalidLogFullAction, _0_DsLogAdmin.InvalidThreshold._NP_RepositoryId: _0_DsLogAdmin._d_InvalidThreshold, _0_CosNotification.UnsupportedQoS._NP_RepositoryId: _0_CosNotification._d_UnsupportedQoS, _0_CosNotification.UnsupportedAdmin._NP_RepositoryId: _0_CosNotification._d_UnsupportedAdmin})
NotifyLogFactory._d_create_with_id = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogFullActionType:1.0"], omniORB.tcInternal.tv_ulonglong, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/CapacityAlarmThresholdList:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotification/AdminProperties:1.0"]), (omniORB.typeMapping["IDL:omg.org/DsNotifyLogAdmin/NotifyLog:1.0"], ), {_0_DsLogAdmin.LogIdAlreadyExists._NP_RepositoryId: _0_DsLogAdmin._d_LogIdAlreadyExists, _0_DsLogAdmin.InvalidLogFullAction._NP_RepositoryId: _0_DsLogAdmin._d_InvalidLogFullAction, _0_DsLogAdmin.InvalidThreshold._NP_RepositoryId: _0_DsLogAdmin._d_InvalidThreshold, _0_CosNotification.UnsupportedQoS._NP_RepositoryId: _0_CosNotification._d_UnsupportedQoS, _0_CosNotification.UnsupportedAdmin._NP_RepositoryId: _0_CosNotification._d_UnsupportedAdmin})

# NotifyLogFactory object reference
class _objref_NotifyLogFactory (_0_DsLogAdmin._objref_LogMgr, _0_CosNotifyChannelAdmin._objref_ConsumerAdmin):
    _NP_RepositoryId = NotifyLogFactory._NP_RepositoryId

    def __init__(self, obj):
        _0_DsLogAdmin._objref_LogMgr.__init__(self, obj)
        _0_CosNotifyChannelAdmin._objref_ConsumerAdmin.__init__(self, obj)

    def create(self, *args):
        return self._obj.invoke("create", _0_DsNotifyLogAdmin.NotifyLogFactory._d_create, args)

    def create_with_id(self, *args):
        return self._obj.invoke("create_with_id", _0_DsNotifyLogAdmin.NotifyLogFactory._d_create_with_id, args)

omniORB.registerObjref(NotifyLogFactory._NP_RepositoryId, _objref_NotifyLogFactory)
_0_DsNotifyLogAdmin._objref_NotifyLogFactory = _objref_NotifyLogFactory
del NotifyLogFactory, _objref_NotifyLogFactory

# NotifyLogFactory skeleton
__name__ = "DsNotifyLogAdmin__POA"
class NotifyLogFactory (_0_DsLogAdmin__POA.LogMgr, _0_CosNotifyChannelAdmin__POA.ConsumerAdmin):
    _NP_RepositoryId = _0_DsNotifyLogAdmin.NotifyLogFactory._NP_RepositoryId


    _omni_op_d = {"create": _0_DsNotifyLogAdmin.NotifyLogFactory._d_create, "create_with_id": _0_DsNotifyLogAdmin.NotifyLogFactory._d_create_with_id}
    _omni_op_d.update(_0_DsLogAdmin__POA.LogMgr._omni_op_d)
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ConsumerAdmin._omni_op_d)

NotifyLogFactory._omni_skeleton = NotifyLogFactory
_0_DsNotifyLogAdmin__POA.NotifyLogFactory = NotifyLogFactory
omniORB.registerSkeleton(NotifyLogFactory._NP_RepositoryId, NotifyLogFactory)
del NotifyLogFactory
__name__ = "DsNotifyLogAdmin"

#
# End of module "DsNotifyLogAdmin"
#
__name__ = "DsNotifyLogAdmin_idl"

_exported_modules = ( "DsNotifyLogAdmin", )

# The end.
