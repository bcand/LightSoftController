# Python stubs generated by omniidl from orb.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "CORBA"
#
__name__ = "CORBA"
_0_CORBA = omniORB.openModule("CORBA", r"orb.idl")
_0_CORBA__POA = omniORB.openModule("CORBA__POA", r"orb.idl")


# interface NamedValue
_0_CORBA._d_NamedValue = (omniORB.tcInternal.tv_objref, "IDL:CORBA/NamedValue:1.0", "NamedValue")
omniORB.typeMapping["IDL:CORBA/NamedValue:1.0"] = _0_CORBA._d_NamedValue
_0_CORBA.NamedValue = omniORB.newEmptyClass()
class NamedValue :
    _NP_RepositoryId = _0_CORBA._d_NamedValue[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.NamedValue = NamedValue
_0_CORBA._tc_NamedValue = omniORB.tcInternal.createTypeCode(_0_CORBA._d_NamedValue)
omniORB.registerType(NamedValue._NP_RepositoryId, _0_CORBA._d_NamedValue, _0_CORBA._tc_NamedValue)

# NamedValue object reference
class _objref_NamedValue (CORBA.Object):
    _NP_RepositoryId = NamedValue._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(NamedValue._NP_RepositoryId, _objref_NamedValue)
_0_CORBA._objref_NamedValue = _objref_NamedValue
del NamedValue, _objref_NamedValue

# NamedValue skeleton
__name__ = "CORBA__POA"
class NamedValue (PortableServer.Servant):
    _NP_RepositoryId = _0_CORBA.NamedValue._NP_RepositoryId


    _omni_op_d = {}

NamedValue._omni_skeleton = NamedValue
_0_CORBA__POA.NamedValue = NamedValue
omniORB.registerSkeleton(NamedValue._NP_RepositoryId, NamedValue)
del NamedValue
__name__ = "CORBA"

#
# End of module "CORBA"
#
__name__ = "orb_idl"

_exported_modules = ( "CORBA", )

# The end.
