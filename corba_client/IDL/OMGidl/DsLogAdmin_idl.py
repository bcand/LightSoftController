# Python stubs generated by omniidl from DsLogAdmin.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "TimeBase.idl"
import TimeBase_idl
_0_TimeBase = omniORB.openModule("TimeBase")
_0_TimeBase__POA = omniORB.openModule("TimeBase__POA")

#
# Start of module "DsLogAdmin"
#
__name__ = "DsLogAdmin"
_0_DsLogAdmin = omniORB.openModule("DsLogAdmin", r"DsLogAdmin.idl")
_0_DsLogAdmin__POA = omniORB.openModule("DsLogAdmin__POA", r"DsLogAdmin.idl")


# exception InvalidParam
_0_DsLogAdmin.InvalidParam = omniORB.newEmptyClass()
class InvalidParam (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidParam:1.0"

    def __init__(self, details):
        CORBA.UserException.__init__(self, details)
        self.details = details

_0_DsLogAdmin.InvalidParam = InvalidParam
_0_DsLogAdmin._d_InvalidParam  = (omniORB.tcInternal.tv_except, InvalidParam, InvalidParam._NP_RepositoryId, "InvalidParam", "details", (omniORB.tcInternal.tv_string,0))
_0_DsLogAdmin._tc_InvalidParam = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidParam)
omniORB.registerType(InvalidParam._NP_RepositoryId, _0_DsLogAdmin._d_InvalidParam, _0_DsLogAdmin._tc_InvalidParam)
del InvalidParam

# exception InvalidThreshold
_0_DsLogAdmin.InvalidThreshold = omniORB.newEmptyClass()
class InvalidThreshold (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidThreshold:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidThreshold = InvalidThreshold
_0_DsLogAdmin._d_InvalidThreshold  = (omniORB.tcInternal.tv_except, InvalidThreshold, InvalidThreshold._NP_RepositoryId, "InvalidThreshold")
_0_DsLogAdmin._tc_InvalidThreshold = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidThreshold)
omniORB.registerType(InvalidThreshold._NP_RepositoryId, _0_DsLogAdmin._d_InvalidThreshold, _0_DsLogAdmin._tc_InvalidThreshold)
del InvalidThreshold

# exception InvalidTime
_0_DsLogAdmin.InvalidTime = omniORB.newEmptyClass()
class InvalidTime (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidTime:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidTime = InvalidTime
_0_DsLogAdmin._d_InvalidTime  = (omniORB.tcInternal.tv_except, InvalidTime, InvalidTime._NP_RepositoryId, "InvalidTime")
_0_DsLogAdmin._tc_InvalidTime = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidTime)
omniORB.registerType(InvalidTime._NP_RepositoryId, _0_DsLogAdmin._d_InvalidTime, _0_DsLogAdmin._tc_InvalidTime)
del InvalidTime

# exception InvalidTimeInterval
_0_DsLogAdmin.InvalidTimeInterval = omniORB.newEmptyClass()
class InvalidTimeInterval (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidTimeInterval:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidTimeInterval = InvalidTimeInterval
_0_DsLogAdmin._d_InvalidTimeInterval  = (omniORB.tcInternal.tv_except, InvalidTimeInterval, InvalidTimeInterval._NP_RepositoryId, "InvalidTimeInterval")
_0_DsLogAdmin._tc_InvalidTimeInterval = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidTimeInterval)
omniORB.registerType(InvalidTimeInterval._NP_RepositoryId, _0_DsLogAdmin._d_InvalidTimeInterval, _0_DsLogAdmin._tc_InvalidTimeInterval)
del InvalidTimeInterval

# exception InvalidMask
_0_DsLogAdmin.InvalidMask = omniORB.newEmptyClass()
class InvalidMask (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidMask:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidMask = InvalidMask
_0_DsLogAdmin._d_InvalidMask  = (omniORB.tcInternal.tv_except, InvalidMask, InvalidMask._NP_RepositoryId, "InvalidMask")
_0_DsLogAdmin._tc_InvalidMask = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidMask)
omniORB.registerType(InvalidMask._NP_RepositoryId, _0_DsLogAdmin._d_InvalidMask, _0_DsLogAdmin._tc_InvalidMask)
del InvalidMask

# exception LogIdAlreadyExists
_0_DsLogAdmin.LogIdAlreadyExists = omniORB.newEmptyClass()
class LogIdAlreadyExists (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogIdAlreadyExists:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.LogIdAlreadyExists = LogIdAlreadyExists
_0_DsLogAdmin._d_LogIdAlreadyExists  = (omniORB.tcInternal.tv_except, LogIdAlreadyExists, LogIdAlreadyExists._NP_RepositoryId, "LogIdAlreadyExists")
_0_DsLogAdmin._tc_LogIdAlreadyExists = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_LogIdAlreadyExists)
omniORB.registerType(LogIdAlreadyExists._NP_RepositoryId, _0_DsLogAdmin._d_LogIdAlreadyExists, _0_DsLogAdmin._tc_LogIdAlreadyExists)
del LogIdAlreadyExists

# exception InvalidGrammar
_0_DsLogAdmin.InvalidGrammar = omniORB.newEmptyClass()
class InvalidGrammar (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidGrammar:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidGrammar = InvalidGrammar
_0_DsLogAdmin._d_InvalidGrammar  = (omniORB.tcInternal.tv_except, InvalidGrammar, InvalidGrammar._NP_RepositoryId, "InvalidGrammar")
_0_DsLogAdmin._tc_InvalidGrammar = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidGrammar)
omniORB.registerType(InvalidGrammar._NP_RepositoryId, _0_DsLogAdmin._d_InvalidGrammar, _0_DsLogAdmin._tc_InvalidGrammar)
del InvalidGrammar

# exception InvalidConstraint
_0_DsLogAdmin.InvalidConstraint = omniORB.newEmptyClass()
class InvalidConstraint (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidConstraint:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidConstraint = InvalidConstraint
_0_DsLogAdmin._d_InvalidConstraint  = (omniORB.tcInternal.tv_except, InvalidConstraint, InvalidConstraint._NP_RepositoryId, "InvalidConstraint")
_0_DsLogAdmin._tc_InvalidConstraint = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidConstraint)
omniORB.registerType(InvalidConstraint._NP_RepositoryId, _0_DsLogAdmin._d_InvalidConstraint, _0_DsLogAdmin._tc_InvalidConstraint)
del InvalidConstraint

# exception LogFull
_0_DsLogAdmin.LogFull = omniORB.newEmptyClass()
class LogFull (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogFull:1.0"

    def __init__(self, n_records_written):
        CORBA.UserException.__init__(self, n_records_written)
        self.n_records_written = n_records_written

_0_DsLogAdmin.LogFull = LogFull
_0_DsLogAdmin._d_LogFull  = (omniORB.tcInternal.tv_except, LogFull, LogFull._NP_RepositoryId, "LogFull", "n_records_written", omniORB.tcInternal.tv_short)
_0_DsLogAdmin._tc_LogFull = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_LogFull)
omniORB.registerType(LogFull._NP_RepositoryId, _0_DsLogAdmin._d_LogFull, _0_DsLogAdmin._tc_LogFull)
del LogFull

# exception LogOffDuty
_0_DsLogAdmin.LogOffDuty = omniORB.newEmptyClass()
class LogOffDuty (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogOffDuty:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.LogOffDuty = LogOffDuty
_0_DsLogAdmin._d_LogOffDuty  = (omniORB.tcInternal.tv_except, LogOffDuty, LogOffDuty._NP_RepositoryId, "LogOffDuty")
_0_DsLogAdmin._tc_LogOffDuty = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_LogOffDuty)
omniORB.registerType(LogOffDuty._NP_RepositoryId, _0_DsLogAdmin._d_LogOffDuty, _0_DsLogAdmin._tc_LogOffDuty)
del LogOffDuty

# exception LogLocked
_0_DsLogAdmin.LogLocked = omniORB.newEmptyClass()
class LogLocked (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogLocked:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.LogLocked = LogLocked
_0_DsLogAdmin._d_LogLocked  = (omniORB.tcInternal.tv_except, LogLocked, LogLocked._NP_RepositoryId, "LogLocked")
_0_DsLogAdmin._tc_LogLocked = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_LogLocked)
omniORB.registerType(LogLocked._NP_RepositoryId, _0_DsLogAdmin._d_LogLocked, _0_DsLogAdmin._tc_LogLocked)
del LogLocked

# exception LogDisabled
_0_DsLogAdmin.LogDisabled = omniORB.newEmptyClass()
class LogDisabled (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogDisabled:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.LogDisabled = LogDisabled
_0_DsLogAdmin._d_LogDisabled  = (omniORB.tcInternal.tv_except, LogDisabled, LogDisabled._NP_RepositoryId, "LogDisabled")
_0_DsLogAdmin._tc_LogDisabled = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_LogDisabled)
omniORB.registerType(LogDisabled._NP_RepositoryId, _0_DsLogAdmin._d_LogDisabled, _0_DsLogAdmin._tc_LogDisabled)
del LogDisabled

# exception InvalidRecordId
_0_DsLogAdmin.InvalidRecordId = omniORB.newEmptyClass()
class InvalidRecordId (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidRecordId:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidRecordId = InvalidRecordId
_0_DsLogAdmin._d_InvalidRecordId  = (omniORB.tcInternal.tv_except, InvalidRecordId, InvalidRecordId._NP_RepositoryId, "InvalidRecordId")
_0_DsLogAdmin._tc_InvalidRecordId = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidRecordId)
omniORB.registerType(InvalidRecordId._NP_RepositoryId, _0_DsLogAdmin._d_InvalidRecordId, _0_DsLogAdmin._tc_InvalidRecordId)
del InvalidRecordId

# exception InvalidAttribute
_0_DsLogAdmin.InvalidAttribute = omniORB.newEmptyClass()
class InvalidAttribute (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidAttribute:1.0"

    def __init__(self, attr_name, value):
        CORBA.UserException.__init__(self, attr_name, value)
        self.attr_name = attr_name
        self.value = value

_0_DsLogAdmin.InvalidAttribute = InvalidAttribute
_0_DsLogAdmin._d_InvalidAttribute  = (omniORB.tcInternal.tv_except, InvalidAttribute, InvalidAttribute._NP_RepositoryId, "InvalidAttribute", "attr_name", (omniORB.tcInternal.tv_string,0), "value", omniORB.tcInternal.tv_any)
_0_DsLogAdmin._tc_InvalidAttribute = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidAttribute)
omniORB.registerType(InvalidAttribute._NP_RepositoryId, _0_DsLogAdmin._d_InvalidAttribute, _0_DsLogAdmin._tc_InvalidAttribute)
del InvalidAttribute

# exception InvalidLogFullAction
_0_DsLogAdmin.InvalidLogFullAction = omniORB.newEmptyClass()
class InvalidLogFullAction (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/InvalidLogFullAction:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_DsLogAdmin.InvalidLogFullAction = InvalidLogFullAction
_0_DsLogAdmin._d_InvalidLogFullAction  = (omniORB.tcInternal.tv_except, InvalidLogFullAction, InvalidLogFullAction._NP_RepositoryId, "InvalidLogFullAction")
_0_DsLogAdmin._tc_InvalidLogFullAction = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_InvalidLogFullAction)
omniORB.registerType(InvalidLogFullAction._NP_RepositoryId, _0_DsLogAdmin._d_InvalidLogFullAction, _0_DsLogAdmin._tc_InvalidLogFullAction)
del InvalidLogFullAction

# typedef ... LogId
class LogId:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.LogId = LogId
_0_DsLogAdmin._d_LogId  = omniORB.tcInternal.tv_ulong
_0_DsLogAdmin._ad_LogId = (omniORB.tcInternal.tv_alias, LogId._NP_RepositoryId, "LogId", omniORB.tcInternal.tv_ulong)
_0_DsLogAdmin._tc_LogId = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_LogId)
omniORB.registerType(LogId._NP_RepositoryId, _0_DsLogAdmin._ad_LogId, _0_DsLogAdmin._tc_LogId)
del LogId

# typedef ... RecordId
class RecordId:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/RecordId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.RecordId = RecordId
_0_DsLogAdmin._d_RecordId  = omniORB.tcInternal.tv_ulonglong
_0_DsLogAdmin._ad_RecordId = (omniORB.tcInternal.tv_alias, RecordId._NP_RepositoryId, "RecordId", omniORB.tcInternal.tv_ulonglong)
_0_DsLogAdmin._tc_RecordId = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_RecordId)
omniORB.registerType(RecordId._NP_RepositoryId, _0_DsLogAdmin._ad_RecordId, _0_DsLogAdmin._tc_RecordId)
del RecordId

# typedef ... RecordIdList
class RecordIdList:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/RecordIdList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.RecordIdList = RecordIdList
_0_DsLogAdmin._d_RecordIdList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordId:1.0"], 0)
_0_DsLogAdmin._ad_RecordIdList = (omniORB.tcInternal.tv_alias, RecordIdList._NP_RepositoryId, "RecordIdList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordId:1.0"], 0))
_0_DsLogAdmin._tc_RecordIdList = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_RecordIdList)
omniORB.registerType(RecordIdList._NP_RepositoryId, _0_DsLogAdmin._ad_RecordIdList, _0_DsLogAdmin._tc_RecordIdList)
del RecordIdList
_0_DsLogAdmin.default_grammar = "EXTENDED_TCL"

# typedef ... Constraint
class Constraint:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/Constraint:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.Constraint = Constraint
_0_DsLogAdmin._d_Constraint  = (omniORB.tcInternal.tv_string,0)
_0_DsLogAdmin._ad_Constraint = (omniORB.tcInternal.tv_alias, Constraint._NP_RepositoryId, "Constraint", (omniORB.tcInternal.tv_string,0))
_0_DsLogAdmin._tc_Constraint = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_Constraint)
omniORB.registerType(Constraint._NP_RepositoryId, _0_DsLogAdmin._ad_Constraint, _0_DsLogAdmin._tc_Constraint)
del Constraint

# typedef ... TimeT
class TimeT:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/TimeT:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.TimeT = TimeT
_0_DsLogAdmin._d_TimeT  = omniORB.typeMapping["IDL:omg.org/TimeBase/TimeT:1.0"]
_0_DsLogAdmin._ad_TimeT = (omniORB.tcInternal.tv_alias, TimeT._NP_RepositoryId, "TimeT", omniORB.typeCodeMapping["IDL:omg.org/TimeBase/TimeT:1.0"]._d)
_0_DsLogAdmin._tc_TimeT = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_TimeT)
omniORB.registerType(TimeT._NP_RepositoryId, _0_DsLogAdmin._ad_TimeT, _0_DsLogAdmin._tc_TimeT)
del TimeT

# struct NVPair
_0_DsLogAdmin.NVPair = omniORB.newEmptyClass()
class NVPair (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/NVPair:1.0"

    def __init__(self, name, value):
        self.name = name
        self.value = value

_0_DsLogAdmin.NVPair = NVPair
_0_DsLogAdmin._d_NVPair  = (omniORB.tcInternal.tv_struct, NVPair, NVPair._NP_RepositoryId, "NVPair", "name", (omniORB.tcInternal.tv_string,0), "value", omniORB.tcInternal.tv_any)
_0_DsLogAdmin._tc_NVPair = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_NVPair)
omniORB.registerType(NVPair._NP_RepositoryId, _0_DsLogAdmin._d_NVPair, _0_DsLogAdmin._tc_NVPair)
del NVPair

# typedef ... NVList
class NVList:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/NVList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.NVList = NVList
_0_DsLogAdmin._d_NVList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/NVPair:1.0"], 0)
_0_DsLogAdmin._ad_NVList = (omniORB.tcInternal.tv_alias, NVList._NP_RepositoryId, "NVList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/NVPair:1.0"], 0))
_0_DsLogAdmin._tc_NVList = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_NVList)
omniORB.registerType(NVList._NP_RepositoryId, _0_DsLogAdmin._ad_NVList, _0_DsLogAdmin._tc_NVList)
del NVList

# struct TimeInterval
_0_DsLogAdmin.TimeInterval = omniORB.newEmptyClass()
class TimeInterval (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/TimeInterval:1.0"

    def __init__(self, start, stop):
        self.start = start
        self.stop = stop

_0_DsLogAdmin.TimeInterval = TimeInterval
_0_DsLogAdmin._d_TimeInterval  = (omniORB.tcInternal.tv_struct, TimeInterval, TimeInterval._NP_RepositoryId, "TimeInterval", "start", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/TimeT:1.0"], "stop", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/TimeT:1.0"])
_0_DsLogAdmin._tc_TimeInterval = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_TimeInterval)
omniORB.registerType(TimeInterval._NP_RepositoryId, _0_DsLogAdmin._d_TimeInterval, _0_DsLogAdmin._tc_TimeInterval)
del TimeInterval

# struct LogRecord
_0_DsLogAdmin.LogRecord = omniORB.newEmptyClass()
class LogRecord (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogRecord:1.0"

    def __init__(self, id, time, attr_list, info):
        self.id = id
        self.time = time
        self.attr_list = attr_list
        self.info = info

_0_DsLogAdmin.LogRecord = LogRecord
_0_DsLogAdmin._d_LogRecord  = (omniORB.tcInternal.tv_struct, LogRecord, LogRecord._NP_RepositoryId, "LogRecord", "id", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordId:1.0"], "time", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/TimeT:1.0"], "attr_list", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/NVList:1.0"], "info", omniORB.tcInternal.tv_any)
_0_DsLogAdmin._tc_LogRecord = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_LogRecord)
omniORB.registerType(LogRecord._NP_RepositoryId, _0_DsLogAdmin._d_LogRecord, _0_DsLogAdmin._tc_LogRecord)
del LogRecord

# typedef ... RecordList
class RecordList:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/RecordList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.RecordList = RecordList
_0_DsLogAdmin._d_RecordList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogRecord:1.0"], 0)
_0_DsLogAdmin._ad_RecordList = (omniORB.tcInternal.tv_alias, RecordList._NP_RepositoryId, "RecordList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogRecord:1.0"], 0))
_0_DsLogAdmin._tc_RecordList = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_RecordList)
omniORB.registerType(RecordList._NP_RepositoryId, _0_DsLogAdmin._ad_RecordList, _0_DsLogAdmin._tc_RecordList)
del RecordList

# typedef ... Anys
class Anys:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/Anys:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.Anys = Anys
_0_DsLogAdmin._d_Anys  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_any, 0)
_0_DsLogAdmin._ad_Anys = (omniORB.tcInternal.tv_alias, Anys._NP_RepositoryId, "Anys", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_any, 0))
_0_DsLogAdmin._tc_Anys = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_Anys)
omniORB.registerType(Anys._NP_RepositoryId, _0_DsLogAdmin._ad_Anys, _0_DsLogAdmin._tc_Anys)
del Anys

# interface Iterator
_0_DsLogAdmin._d_Iterator = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsLogAdmin/Iterator:1.0", "Iterator")
omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Iterator:1.0"] = _0_DsLogAdmin._d_Iterator
_0_DsLogAdmin.Iterator = omniORB.newEmptyClass()
class Iterator :
    _NP_RepositoryId = _0_DsLogAdmin._d_Iterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DsLogAdmin.Iterator = Iterator
_0_DsLogAdmin._tc_Iterator = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_Iterator)
omniORB.registerType(Iterator._NP_RepositoryId, _0_DsLogAdmin._d_Iterator, _0_DsLogAdmin._tc_Iterator)

# Iterator operations and attributes
Iterator._d_get = ((omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordList:1.0"], ), {_0_DsLogAdmin.InvalidParam._NP_RepositoryId: _0_DsLogAdmin._d_InvalidParam})
Iterator._d_destroy = ((), (), None)

# Iterator object reference
class _objref_Iterator (CORBA.Object):
    _NP_RepositoryId = Iterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def get(self, *args):
        return self._obj.invoke("get", _0_DsLogAdmin.Iterator._d_get, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_DsLogAdmin.Iterator._d_destroy, args)

omniORB.registerObjref(Iterator._NP_RepositoryId, _objref_Iterator)
_0_DsLogAdmin._objref_Iterator = _objref_Iterator
del Iterator, _objref_Iterator

# Iterator skeleton
__name__ = "DsLogAdmin__POA"
class Iterator (PortableServer.Servant):
    _NP_RepositoryId = _0_DsLogAdmin.Iterator._NP_RepositoryId


    _omni_op_d = {"get": _0_DsLogAdmin.Iterator._d_get, "destroy": _0_DsLogAdmin.Iterator._d_destroy}

Iterator._omni_skeleton = Iterator
_0_DsLogAdmin__POA.Iterator = Iterator
omniORB.registerSkeleton(Iterator._NP_RepositoryId, Iterator)
del Iterator
__name__ = "DsLogAdmin"

# struct AvailabilityStatus
_0_DsLogAdmin.AvailabilityStatus = omniORB.newEmptyClass()
class AvailabilityStatus (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/AvailabilityStatus:1.0"

    def __init__(self, off_duty, log_full):
        self.off_duty = off_duty
        self.log_full = log_full

_0_DsLogAdmin.AvailabilityStatus = AvailabilityStatus
_0_DsLogAdmin._d_AvailabilityStatus  = (omniORB.tcInternal.tv_struct, AvailabilityStatus, AvailabilityStatus._NP_RepositoryId, "AvailabilityStatus", "off_duty", omniORB.tcInternal.tv_boolean, "log_full", omniORB.tcInternal.tv_boolean)
_0_DsLogAdmin._tc_AvailabilityStatus = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_AvailabilityStatus)
omniORB.registerType(AvailabilityStatus._NP_RepositoryId, _0_DsLogAdmin._d_AvailabilityStatus, _0_DsLogAdmin._tc_AvailabilityStatus)
del AvailabilityStatus

# typedef ... LogFullActionType
class LogFullActionType:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogFullActionType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.LogFullActionType = LogFullActionType
_0_DsLogAdmin._d_LogFullActionType  = omniORB.tcInternal.tv_ushort
_0_DsLogAdmin._ad_LogFullActionType = (omniORB.tcInternal.tv_alias, LogFullActionType._NP_RepositoryId, "LogFullActionType", omniORB.tcInternal.tv_ushort)
_0_DsLogAdmin._tc_LogFullActionType = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_LogFullActionType)
omniORB.registerType(LogFullActionType._NP_RepositoryId, _0_DsLogAdmin._ad_LogFullActionType, _0_DsLogAdmin._tc_LogFullActionType)
del LogFullActionType
_0_DsLogAdmin.wrap = 0
_0_DsLogAdmin.halt = 1

# struct Time24
_0_DsLogAdmin.Time24 = omniORB.newEmptyClass()
class Time24 (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/Time24:1.0"

    def __init__(self, hour, minute):
        self.hour = hour
        self.minute = minute

_0_DsLogAdmin.Time24 = Time24
_0_DsLogAdmin._d_Time24  = (omniORB.tcInternal.tv_struct, Time24, Time24._NP_RepositoryId, "Time24", "hour", omniORB.tcInternal.tv_ushort, "minute", omniORB.tcInternal.tv_ushort)
_0_DsLogAdmin._tc_Time24 = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_Time24)
omniORB.registerType(Time24._NP_RepositoryId, _0_DsLogAdmin._d_Time24, _0_DsLogAdmin._tc_Time24)
del Time24

# struct Time24Interval
_0_DsLogAdmin.Time24Interval = omniORB.newEmptyClass()
class Time24Interval (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/Time24Interval:1.0"

    def __init__(self, start, stop):
        self.start = start
        self.stop = stop

_0_DsLogAdmin.Time24Interval = Time24Interval
_0_DsLogAdmin._d_Time24Interval  = (omniORB.tcInternal.tv_struct, Time24Interval, Time24Interval._NP_RepositoryId, "Time24Interval", "start", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Time24:1.0"], "stop", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Time24:1.0"])
_0_DsLogAdmin._tc_Time24Interval = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_Time24Interval)
omniORB.registerType(Time24Interval._NP_RepositoryId, _0_DsLogAdmin._d_Time24Interval, _0_DsLogAdmin._tc_Time24Interval)
del Time24Interval

# typedef ... IntervalsOfDay
class IntervalsOfDay:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/IntervalsOfDay:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.IntervalsOfDay = IntervalsOfDay
_0_DsLogAdmin._d_IntervalsOfDay  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Time24Interval:1.0"], 0)
_0_DsLogAdmin._ad_IntervalsOfDay = (omniORB.tcInternal.tv_alias, IntervalsOfDay._NP_RepositoryId, "IntervalsOfDay", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Time24Interval:1.0"], 0))
_0_DsLogAdmin._tc_IntervalsOfDay = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_IntervalsOfDay)
omniORB.registerType(IntervalsOfDay._NP_RepositoryId, _0_DsLogAdmin._ad_IntervalsOfDay, _0_DsLogAdmin._tc_IntervalsOfDay)
del IntervalsOfDay
_0_DsLogAdmin.Sunday = 1
_0_DsLogAdmin.Monday = 2
_0_DsLogAdmin.Tuesday = 4
_0_DsLogAdmin.Wednesday = 8
_0_DsLogAdmin.Thursday = 16
_0_DsLogAdmin.Friday = 32
_0_DsLogAdmin.Saturday = 64

# typedef ... DaysOfWeek
class DaysOfWeek:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/DaysOfWeek:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.DaysOfWeek = DaysOfWeek
_0_DsLogAdmin._d_DaysOfWeek  = omniORB.tcInternal.tv_ushort
_0_DsLogAdmin._ad_DaysOfWeek = (omniORB.tcInternal.tv_alias, DaysOfWeek._NP_RepositoryId, "DaysOfWeek", omniORB.tcInternal.tv_ushort)
_0_DsLogAdmin._tc_DaysOfWeek = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_DaysOfWeek)
omniORB.registerType(DaysOfWeek._NP_RepositoryId, _0_DsLogAdmin._ad_DaysOfWeek, _0_DsLogAdmin._tc_DaysOfWeek)
del DaysOfWeek

# struct WeekMaskItem
_0_DsLogAdmin.WeekMaskItem = omniORB.newEmptyClass()
class WeekMaskItem (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/WeekMaskItem:1.0"

    def __init__(self, days, intervals):
        self.days = days
        self.intervals = intervals

_0_DsLogAdmin.WeekMaskItem = WeekMaskItem
_0_DsLogAdmin._d_WeekMaskItem  = (omniORB.tcInternal.tv_struct, WeekMaskItem, WeekMaskItem._NP_RepositoryId, "WeekMaskItem", "days", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/DaysOfWeek:1.0"], "intervals", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/IntervalsOfDay:1.0"])
_0_DsLogAdmin._tc_WeekMaskItem = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_WeekMaskItem)
omniORB.registerType(WeekMaskItem._NP_RepositoryId, _0_DsLogAdmin._d_WeekMaskItem, _0_DsLogAdmin._tc_WeekMaskItem)
del WeekMaskItem

# typedef ... WeekMask
class WeekMask:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/WeekMask:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.WeekMask = WeekMask
_0_DsLogAdmin._d_WeekMask  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/WeekMaskItem:1.0"], 0)
_0_DsLogAdmin._ad_WeekMask = (omniORB.tcInternal.tv_alias, WeekMask._NP_RepositoryId, "WeekMask", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/WeekMaskItem:1.0"], 0))
_0_DsLogAdmin._tc_WeekMask = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_WeekMask)
omniORB.registerType(WeekMask._NP_RepositoryId, _0_DsLogAdmin._ad_WeekMask, _0_DsLogAdmin._tc_WeekMask)
del WeekMask

# typedef ... Threshold
class Threshold:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/Threshold:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.Threshold = Threshold
_0_DsLogAdmin._d_Threshold  = omniORB.tcInternal.tv_ushort
_0_DsLogAdmin._ad_Threshold = (omniORB.tcInternal.tv_alias, Threshold._NP_RepositoryId, "Threshold", omniORB.tcInternal.tv_ushort)
_0_DsLogAdmin._tc_Threshold = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_Threshold)
omniORB.registerType(Threshold._NP_RepositoryId, _0_DsLogAdmin._ad_Threshold, _0_DsLogAdmin._tc_Threshold)
del Threshold

# typedef ... CapacityAlarmThresholdList
class CapacityAlarmThresholdList:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/CapacityAlarmThresholdList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.CapacityAlarmThresholdList = CapacityAlarmThresholdList
_0_DsLogAdmin._d_CapacityAlarmThresholdList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Threshold:1.0"], 0)
_0_DsLogAdmin._ad_CapacityAlarmThresholdList = (omniORB.tcInternal.tv_alias, CapacityAlarmThresholdList._NP_RepositoryId, "CapacityAlarmThresholdList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Threshold:1.0"], 0))
_0_DsLogAdmin._tc_CapacityAlarmThresholdList = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_CapacityAlarmThresholdList)
omniORB.registerType(CapacityAlarmThresholdList._NP_RepositoryId, _0_DsLogAdmin._ad_CapacityAlarmThresholdList, _0_DsLogAdmin._tc_CapacityAlarmThresholdList)
del CapacityAlarmThresholdList

# forward interface LogMgr;
_0_DsLogAdmin._d_LogMgr = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsLogAdmin/LogMgr:1.0", "LogMgr")
omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogMgr:1.0"] = _0_DsLogAdmin._d_LogMgr

# enum OperationalState
_0_DsLogAdmin.disabled = omniORB.EnumItem("disabled", 0)
_0_DsLogAdmin.enabled = omniORB.EnumItem("enabled", 1)
_0_DsLogAdmin.OperationalState = omniORB.Enum("IDL:omg.org/DsLogAdmin/OperationalState:1.0", (_0_DsLogAdmin.disabled, _0_DsLogAdmin.enabled,))

_0_DsLogAdmin._d_OperationalState  = (omniORB.tcInternal.tv_enum, _0_DsLogAdmin.OperationalState._NP_RepositoryId, "OperationalState", _0_DsLogAdmin.OperationalState._items)
_0_DsLogAdmin._tc_OperationalState = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_OperationalState)
omniORB.registerType(_0_DsLogAdmin.OperationalState._NP_RepositoryId, _0_DsLogAdmin._d_OperationalState, _0_DsLogAdmin._tc_OperationalState)

# enum AdministrativeState
_0_DsLogAdmin.locked = omniORB.EnumItem("locked", 0)
_0_DsLogAdmin.unlocked = omniORB.EnumItem("unlocked", 1)
_0_DsLogAdmin.AdministrativeState = omniORB.Enum("IDL:omg.org/DsLogAdmin/AdministrativeState:1.0", (_0_DsLogAdmin.locked, _0_DsLogAdmin.unlocked,))

_0_DsLogAdmin._d_AdministrativeState  = (omniORB.tcInternal.tv_enum, _0_DsLogAdmin.AdministrativeState._NP_RepositoryId, "AdministrativeState", _0_DsLogAdmin.AdministrativeState._items)
_0_DsLogAdmin._tc_AdministrativeState = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_AdministrativeState)
omniORB.registerType(_0_DsLogAdmin.AdministrativeState._NP_RepositoryId, _0_DsLogAdmin._d_AdministrativeState, _0_DsLogAdmin._tc_AdministrativeState)

# enum ForwardingState
_0_DsLogAdmin.on = omniORB.EnumItem("on", 0)
_0_DsLogAdmin.off = omniORB.EnumItem("off", 1)
_0_DsLogAdmin.ForwardingState = omniORB.Enum("IDL:omg.org/DsLogAdmin/ForwardingState:1.0", (_0_DsLogAdmin.on, _0_DsLogAdmin.off,))

_0_DsLogAdmin._d_ForwardingState  = (omniORB.tcInternal.tv_enum, _0_DsLogAdmin.ForwardingState._NP_RepositoryId, "ForwardingState", _0_DsLogAdmin.ForwardingState._items)
_0_DsLogAdmin._tc_ForwardingState = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_ForwardingState)
omniORB.registerType(_0_DsLogAdmin.ForwardingState._NP_RepositoryId, _0_DsLogAdmin._d_ForwardingState, _0_DsLogAdmin._tc_ForwardingState)

# typedef ... QoSType
class QoSType:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/QoSType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.QoSType = QoSType
_0_DsLogAdmin._d_QoSType  = omniORB.tcInternal.tv_ushort
_0_DsLogAdmin._ad_QoSType = (omniORB.tcInternal.tv_alias, QoSType._NP_RepositoryId, "QoSType", omniORB.tcInternal.tv_ushort)
_0_DsLogAdmin._tc_QoSType = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_QoSType)
omniORB.registerType(QoSType._NP_RepositoryId, _0_DsLogAdmin._ad_QoSType, _0_DsLogAdmin._tc_QoSType)
del QoSType

# typedef ... QoSList
class QoSList:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/QoSList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.QoSList = QoSList
_0_DsLogAdmin._d_QoSList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/QoSType:1.0"], 0)
_0_DsLogAdmin._ad_QoSList = (omniORB.tcInternal.tv_alias, QoSList._NP_RepositoryId, "QoSList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/QoSType:1.0"], 0))
_0_DsLogAdmin._tc_QoSList = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_QoSList)
omniORB.registerType(QoSList._NP_RepositoryId, _0_DsLogAdmin._ad_QoSList, _0_DsLogAdmin._tc_QoSList)
del QoSList

# exception UnsupportedQoS
_0_DsLogAdmin.UnsupportedQoS = omniORB.newEmptyClass()
class UnsupportedQoS (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/UnsupportedQoS:1.0"

    def __init__(self, denied):
        CORBA.UserException.__init__(self, denied)
        self.denied = denied

_0_DsLogAdmin.UnsupportedQoS = UnsupportedQoS
_0_DsLogAdmin._d_UnsupportedQoS  = (omniORB.tcInternal.tv_except, UnsupportedQoS, UnsupportedQoS._NP_RepositoryId, "UnsupportedQoS", "denied", omniORB.typeMapping["IDL:omg.org/DsLogAdmin/QoSList:1.0"])
_0_DsLogAdmin._tc_UnsupportedQoS = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_UnsupportedQoS)
omniORB.registerType(UnsupportedQoS._NP_RepositoryId, _0_DsLogAdmin._d_UnsupportedQoS, _0_DsLogAdmin._tc_UnsupportedQoS)
del UnsupportedQoS
_0_DsLogAdmin.QoSNone = 0
_0_DsLogAdmin.QoSFlush = 1
_0_DsLogAdmin.QoSReliability = 2

# interface Log
_0_DsLogAdmin._d_Log = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsLogAdmin/Log:1.0", "Log")
omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Log:1.0"] = _0_DsLogAdmin._d_Log
_0_DsLogAdmin.Log = omniORB.newEmptyClass()
class Log :
    _NP_RepositoryId = _0_DsLogAdmin._d_Log[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DsLogAdmin.Log = Log
_0_DsLogAdmin._tc_Log = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_Log)
omniORB.registerType(Log._NP_RepositoryId, _0_DsLogAdmin._d_Log, _0_DsLogAdmin._tc_Log)

# Log operations and attributes
Log._d_my_factory = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogMgr:1.0"], ), None)
Log._d_id = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"], ), None)
Log._d_get_log_qos = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/QoSList:1.0"], ), None)
Log._d_set_log_qos = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/QoSList:1.0"], ), (), {_0_DsLogAdmin.UnsupportedQoS._NP_RepositoryId: _0_DsLogAdmin._d_UnsupportedQoS})
Log._d_get_max_record_life = ((), (omniORB.tcInternal.tv_ulong, ), None)
Log._d_set_max_record_life = ((omniORB.tcInternal.tv_ulong, ), (), None)
Log._d_get_max_size = ((), (omniORB.tcInternal.tv_ulonglong, ), None)
Log._d_set_max_size = ((omniORB.tcInternal.tv_ulonglong, ), (), {_0_DsLogAdmin.InvalidParam._NP_RepositoryId: _0_DsLogAdmin._d_InvalidParam})
Log._d_get_current_size = ((), (omniORB.tcInternal.tv_ulonglong, ), None)
Log._d_get_n_records = ((), (omniORB.tcInternal.tv_ulonglong, ), None)
Log._d_get_log_full_action = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogFullActionType:1.0"], ), None)
Log._d_set_log_full_action = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogFullActionType:1.0"], ), (), {_0_DsLogAdmin.InvalidLogFullAction._NP_RepositoryId: _0_DsLogAdmin._d_InvalidLogFullAction})
Log._d_get_administrative_state = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/AdministrativeState:1.0"], ), None)
Log._d_set_administrative_state = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/AdministrativeState:1.0"], ), (), None)
Log._d_get_forwarding_state = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/ForwardingState:1.0"], ), None)
Log._d_set_forwarding_state = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/ForwardingState:1.0"], ), (), None)
Log._d_get_operational_state = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/OperationalState:1.0"], ), None)
Log._d_get_interval = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/TimeInterval:1.0"], ), None)
Log._d_set_interval = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/TimeInterval:1.0"], ), (), {_0_DsLogAdmin.InvalidTime._NP_RepositoryId: _0_DsLogAdmin._d_InvalidTime, _0_DsLogAdmin.InvalidTimeInterval._NP_RepositoryId: _0_DsLogAdmin._d_InvalidTimeInterval})
Log._d_get_availability_status = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/AvailabilityStatus:1.0"], ), None)
Log._d_get_capacity_alarm_thresholds = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/CapacityAlarmThresholdList:1.0"], ), None)
Log._d_set_capacity_alarm_thresholds = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/CapacityAlarmThresholdList:1.0"], ), (), {_0_DsLogAdmin.InvalidThreshold._NP_RepositoryId: _0_DsLogAdmin._d_InvalidThreshold})
Log._d_get_week_mask = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/WeekMask:1.0"], ), None)
Log._d_set_week_mask = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/WeekMask:1.0"], ), (), {_0_DsLogAdmin.InvalidTime._NP_RepositoryId: _0_DsLogAdmin._d_InvalidTime, _0_DsLogAdmin.InvalidTimeInterval._NP_RepositoryId: _0_DsLogAdmin._d_InvalidTimeInterval, _0_DsLogAdmin.InvalidMask._NP_RepositoryId: _0_DsLogAdmin._d_InvalidMask})
Log._d_query = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Constraint:1.0"]), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordList:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Iterator:1.0"]), {_0_DsLogAdmin.InvalidGrammar._NP_RepositoryId: _0_DsLogAdmin._d_InvalidGrammar, _0_DsLogAdmin.InvalidConstraint._NP_RepositoryId: _0_DsLogAdmin._d_InvalidConstraint})
Log._d_retrieve = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/TimeT:1.0"], omniORB.tcInternal.tv_long), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordList:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Iterator:1.0"]), None)
Log._d_match = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Constraint:1.0"]), (omniORB.tcInternal.tv_ulong, ), {_0_DsLogAdmin.InvalidGrammar._NP_RepositoryId: _0_DsLogAdmin._d_InvalidGrammar, _0_DsLogAdmin.InvalidConstraint._NP_RepositoryId: _0_DsLogAdmin._d_InvalidConstraint})
Log._d_delete_records = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Constraint:1.0"]), (omniORB.tcInternal.tv_ulong, ), {_0_DsLogAdmin.InvalidGrammar._NP_RepositoryId: _0_DsLogAdmin._d_InvalidGrammar, _0_DsLogAdmin.InvalidConstraint._NP_RepositoryId: _0_DsLogAdmin._d_InvalidConstraint})
Log._d_delete_records_by_id = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordIdList:1.0"], ), (omniORB.tcInternal.tv_ulong, ), None)
Log._d_write_records = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Anys:1.0"], ), (), {_0_DsLogAdmin.LogFull._NP_RepositoryId: _0_DsLogAdmin._d_LogFull, _0_DsLogAdmin.LogOffDuty._NP_RepositoryId: _0_DsLogAdmin._d_LogOffDuty, _0_DsLogAdmin.LogLocked._NP_RepositoryId: _0_DsLogAdmin._d_LogLocked, _0_DsLogAdmin.LogDisabled._NP_RepositoryId: _0_DsLogAdmin._d_LogDisabled})
Log._d_set_record_attribute = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordId:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/NVList:1.0"]), (), {_0_DsLogAdmin.InvalidRecordId._NP_RepositoryId: _0_DsLogAdmin._d_InvalidRecordId, _0_DsLogAdmin.InvalidAttribute._NP_RepositoryId: _0_DsLogAdmin._d_InvalidAttribute})
Log._d_set_records_attribute = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Constraint:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/NVList:1.0"]), (omniORB.tcInternal.tv_ulong, ), {_0_DsLogAdmin.InvalidGrammar._NP_RepositoryId: _0_DsLogAdmin._d_InvalidGrammar, _0_DsLogAdmin.InvalidConstraint._NP_RepositoryId: _0_DsLogAdmin._d_InvalidConstraint, _0_DsLogAdmin.InvalidAttribute._NP_RepositoryId: _0_DsLogAdmin._d_InvalidAttribute})
Log._d_get_record_attribute = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/RecordId:1.0"], ), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/NVList:1.0"], ), {_0_DsLogAdmin.InvalidRecordId._NP_RepositoryId: _0_DsLogAdmin._d_InvalidRecordId})
Log._d_copy = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Log:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"]), None)
Log._d_copy_with_id = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"], ), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Log:1.0"], ), {_0_DsLogAdmin.LogIdAlreadyExists._NP_RepositoryId: _0_DsLogAdmin._d_LogIdAlreadyExists})
Log._d_flush = ((), (), {_0_DsLogAdmin.UnsupportedQoS._NP_RepositoryId: _0_DsLogAdmin._d_UnsupportedQoS})

# Log object reference
class _objref_Log (CORBA.Object):
    _NP_RepositoryId = Log._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def my_factory(self, *args):
        return self._obj.invoke("my_factory", _0_DsLogAdmin.Log._d_my_factory, args)

    def id(self, *args):
        return self._obj.invoke("id", _0_DsLogAdmin.Log._d_id, args)

    def get_log_qos(self, *args):
        return self._obj.invoke("get_log_qos", _0_DsLogAdmin.Log._d_get_log_qos, args)

    def set_log_qos(self, *args):
        return self._obj.invoke("set_log_qos", _0_DsLogAdmin.Log._d_set_log_qos, args)

    def get_max_record_life(self, *args):
        return self._obj.invoke("get_max_record_life", _0_DsLogAdmin.Log._d_get_max_record_life, args)

    def set_max_record_life(self, *args):
        return self._obj.invoke("set_max_record_life", _0_DsLogAdmin.Log._d_set_max_record_life, args)

    def get_max_size(self, *args):
        return self._obj.invoke("get_max_size", _0_DsLogAdmin.Log._d_get_max_size, args)

    def set_max_size(self, *args):
        return self._obj.invoke("set_max_size", _0_DsLogAdmin.Log._d_set_max_size, args)

    def get_current_size(self, *args):
        return self._obj.invoke("get_current_size", _0_DsLogAdmin.Log._d_get_current_size, args)

    def get_n_records(self, *args):
        return self._obj.invoke("get_n_records", _0_DsLogAdmin.Log._d_get_n_records, args)

    def get_log_full_action(self, *args):
        return self._obj.invoke("get_log_full_action", _0_DsLogAdmin.Log._d_get_log_full_action, args)

    def set_log_full_action(self, *args):
        return self._obj.invoke("set_log_full_action", _0_DsLogAdmin.Log._d_set_log_full_action, args)

    def get_administrative_state(self, *args):
        return self._obj.invoke("get_administrative_state", _0_DsLogAdmin.Log._d_get_administrative_state, args)

    def set_administrative_state(self, *args):
        return self._obj.invoke("set_administrative_state", _0_DsLogAdmin.Log._d_set_administrative_state, args)

    def get_forwarding_state(self, *args):
        return self._obj.invoke("get_forwarding_state", _0_DsLogAdmin.Log._d_get_forwarding_state, args)

    def set_forwarding_state(self, *args):
        return self._obj.invoke("set_forwarding_state", _0_DsLogAdmin.Log._d_set_forwarding_state, args)

    def get_operational_state(self, *args):
        return self._obj.invoke("get_operational_state", _0_DsLogAdmin.Log._d_get_operational_state, args)

    def get_interval(self, *args):
        return self._obj.invoke("get_interval", _0_DsLogAdmin.Log._d_get_interval, args)

    def set_interval(self, *args):
        return self._obj.invoke("set_interval", _0_DsLogAdmin.Log._d_set_interval, args)

    def get_availability_status(self, *args):
        return self._obj.invoke("get_availability_status", _0_DsLogAdmin.Log._d_get_availability_status, args)

    def get_capacity_alarm_thresholds(self, *args):
        return self._obj.invoke("get_capacity_alarm_thresholds", _0_DsLogAdmin.Log._d_get_capacity_alarm_thresholds, args)

    def set_capacity_alarm_thresholds(self, *args):
        return self._obj.invoke("set_capacity_alarm_thresholds", _0_DsLogAdmin.Log._d_set_capacity_alarm_thresholds, args)

    def get_week_mask(self, *args):
        return self._obj.invoke("get_week_mask", _0_DsLogAdmin.Log._d_get_week_mask, args)

    def set_week_mask(self, *args):
        return self._obj.invoke("set_week_mask", _0_DsLogAdmin.Log._d_set_week_mask, args)

    def query(self, *args):
        return self._obj.invoke("query", _0_DsLogAdmin.Log._d_query, args)

    def retrieve(self, *args):
        return self._obj.invoke("retrieve", _0_DsLogAdmin.Log._d_retrieve, args)

    def match(self, *args):
        return self._obj.invoke("match", _0_DsLogAdmin.Log._d_match, args)

    def delete_records(self, *args):
        return self._obj.invoke("delete_records", _0_DsLogAdmin.Log._d_delete_records, args)

    def delete_records_by_id(self, *args):
        return self._obj.invoke("delete_records_by_id", _0_DsLogAdmin.Log._d_delete_records_by_id, args)

    def write_records(self, *args):
        return self._obj.invoke("write_records", _0_DsLogAdmin.Log._d_write_records, args)

    def set_record_attribute(self, *args):
        return self._obj.invoke("set_record_attribute", _0_DsLogAdmin.Log._d_set_record_attribute, args)

    def set_records_attribute(self, *args):
        return self._obj.invoke("set_records_attribute", _0_DsLogAdmin.Log._d_set_records_attribute, args)

    def get_record_attribute(self, *args):
        return self._obj.invoke("get_record_attribute", _0_DsLogAdmin.Log._d_get_record_attribute, args)

    def copy(self, *args):
        return self._obj.invoke("copy", _0_DsLogAdmin.Log._d_copy, args)

    def copy_with_id(self, *args):
        return self._obj.invoke("copy_with_id", _0_DsLogAdmin.Log._d_copy_with_id, args)

    def flush(self, *args):
        return self._obj.invoke("flush", _0_DsLogAdmin.Log._d_flush, args)

omniORB.registerObjref(Log._NP_RepositoryId, _objref_Log)
_0_DsLogAdmin._objref_Log = _objref_Log
del Log, _objref_Log

# Log skeleton
__name__ = "DsLogAdmin__POA"
class Log (PortableServer.Servant):
    _NP_RepositoryId = _0_DsLogAdmin.Log._NP_RepositoryId


    _omni_op_d = {"my_factory": _0_DsLogAdmin.Log._d_my_factory, "id": _0_DsLogAdmin.Log._d_id, "get_log_qos": _0_DsLogAdmin.Log._d_get_log_qos, "set_log_qos": _0_DsLogAdmin.Log._d_set_log_qos, "get_max_record_life": _0_DsLogAdmin.Log._d_get_max_record_life, "set_max_record_life": _0_DsLogAdmin.Log._d_set_max_record_life, "get_max_size": _0_DsLogAdmin.Log._d_get_max_size, "set_max_size": _0_DsLogAdmin.Log._d_set_max_size, "get_current_size": _0_DsLogAdmin.Log._d_get_current_size, "get_n_records": _0_DsLogAdmin.Log._d_get_n_records, "get_log_full_action": _0_DsLogAdmin.Log._d_get_log_full_action, "set_log_full_action": _0_DsLogAdmin.Log._d_set_log_full_action, "get_administrative_state": _0_DsLogAdmin.Log._d_get_administrative_state, "set_administrative_state": _0_DsLogAdmin.Log._d_set_administrative_state, "get_forwarding_state": _0_DsLogAdmin.Log._d_get_forwarding_state, "set_forwarding_state": _0_DsLogAdmin.Log._d_set_forwarding_state, "get_operational_state": _0_DsLogAdmin.Log._d_get_operational_state, "get_interval": _0_DsLogAdmin.Log._d_get_interval, "set_interval": _0_DsLogAdmin.Log._d_set_interval, "get_availability_status": _0_DsLogAdmin.Log._d_get_availability_status, "get_capacity_alarm_thresholds": _0_DsLogAdmin.Log._d_get_capacity_alarm_thresholds, "set_capacity_alarm_thresholds": _0_DsLogAdmin.Log._d_set_capacity_alarm_thresholds, "get_week_mask": _0_DsLogAdmin.Log._d_get_week_mask, "set_week_mask": _0_DsLogAdmin.Log._d_set_week_mask, "query": _0_DsLogAdmin.Log._d_query, "retrieve": _0_DsLogAdmin.Log._d_retrieve, "match": _0_DsLogAdmin.Log._d_match, "delete_records": _0_DsLogAdmin.Log._d_delete_records, "delete_records_by_id": _0_DsLogAdmin.Log._d_delete_records_by_id, "write_records": _0_DsLogAdmin.Log._d_write_records, "set_record_attribute": _0_DsLogAdmin.Log._d_set_record_attribute, "set_records_attribute": _0_DsLogAdmin.Log._d_set_records_attribute, "get_record_attribute": _0_DsLogAdmin.Log._d_get_record_attribute, "copy": _0_DsLogAdmin.Log._d_copy, "copy_with_id": _0_DsLogAdmin.Log._d_copy_with_id, "flush": _0_DsLogAdmin.Log._d_flush}

Log._omni_skeleton = Log
_0_DsLogAdmin__POA.Log = Log
omniORB.registerSkeleton(Log._NP_RepositoryId, Log)
del Log
__name__ = "DsLogAdmin"

# interface BasicLog
_0_DsLogAdmin._d_BasicLog = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsLogAdmin/BasicLog:1.0", "BasicLog")
omniORB.typeMapping["IDL:omg.org/DsLogAdmin/BasicLog:1.0"] = _0_DsLogAdmin._d_BasicLog
_0_DsLogAdmin.BasicLog = omniORB.newEmptyClass()
class BasicLog (_0_DsLogAdmin.Log):
    _NP_RepositoryId = _0_DsLogAdmin._d_BasicLog[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DsLogAdmin.BasicLog = BasicLog
_0_DsLogAdmin._tc_BasicLog = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_BasicLog)
omniORB.registerType(BasicLog._NP_RepositoryId, _0_DsLogAdmin._d_BasicLog, _0_DsLogAdmin._tc_BasicLog)

# BasicLog operations and attributes
BasicLog._d_destroy = ((), (), None)

# BasicLog object reference
class _objref_BasicLog (_0_DsLogAdmin._objref_Log):
    _NP_RepositoryId = BasicLog._NP_RepositoryId

    def __init__(self, obj):
        _0_DsLogAdmin._objref_Log.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_DsLogAdmin.BasicLog._d_destroy, args)

omniORB.registerObjref(BasicLog._NP_RepositoryId, _objref_BasicLog)
_0_DsLogAdmin._objref_BasicLog = _objref_BasicLog
del BasicLog, _objref_BasicLog

# BasicLog skeleton
__name__ = "DsLogAdmin__POA"
class BasicLog (_0_DsLogAdmin__POA.Log):
    _NP_RepositoryId = _0_DsLogAdmin.BasicLog._NP_RepositoryId


    _omni_op_d = {"destroy": _0_DsLogAdmin.BasicLog._d_destroy}
    _omni_op_d.update(_0_DsLogAdmin__POA.Log._omni_op_d)

BasicLog._omni_skeleton = BasicLog
_0_DsLogAdmin__POA.BasicLog = BasicLog
omniORB.registerSkeleton(BasicLog._NP_RepositoryId, BasicLog)
del BasicLog
__name__ = "DsLogAdmin"

# typedef ... LogList
class LogList:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.LogList = LogList
_0_DsLogAdmin._d_LogList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Log:1.0"], 0)
_0_DsLogAdmin._ad_LogList = (omniORB.tcInternal.tv_alias, LogList._NP_RepositoryId, "LogList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Log:1.0"], 0))
_0_DsLogAdmin._tc_LogList = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_LogList)
omniORB.registerType(LogList._NP_RepositoryId, _0_DsLogAdmin._ad_LogList, _0_DsLogAdmin._tc_LogList)
del LogList

# typedef ... LogIdList
class LogIdList:
    _NP_RepositoryId = "IDL:omg.org/DsLogAdmin/LogIdList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_DsLogAdmin.LogIdList = LogIdList
_0_DsLogAdmin._d_LogIdList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"], 0)
_0_DsLogAdmin._ad_LogIdList = (omniORB.tcInternal.tv_alias, LogIdList._NP_RepositoryId, "LogIdList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"], 0))
_0_DsLogAdmin._tc_LogIdList = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._ad_LogIdList)
omniORB.registerType(LogIdList._NP_RepositoryId, _0_DsLogAdmin._ad_LogIdList, _0_DsLogAdmin._tc_LogIdList)
del LogIdList

# interface LogMgr
_0_DsLogAdmin._d_LogMgr = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsLogAdmin/LogMgr:1.0", "LogMgr")
omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogMgr:1.0"] = _0_DsLogAdmin._d_LogMgr
_0_DsLogAdmin.LogMgr = omniORB.newEmptyClass()
class LogMgr :
    _NP_RepositoryId = _0_DsLogAdmin._d_LogMgr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DsLogAdmin.LogMgr = LogMgr
_0_DsLogAdmin._tc_LogMgr = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_LogMgr)
omniORB.registerType(LogMgr._NP_RepositoryId, _0_DsLogAdmin._d_LogMgr, _0_DsLogAdmin._tc_LogMgr)

# LogMgr operations and attributes
LogMgr._d_list_logs = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogList:1.0"], ), None)
LogMgr._d_find_log = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"], ), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/Log:1.0"], ), None)
LogMgr._d_list_logs_by_id = ((), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogIdList:1.0"], ), None)

# LogMgr object reference
class _objref_LogMgr (CORBA.Object):
    _NP_RepositoryId = LogMgr._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def list_logs(self, *args):
        return self._obj.invoke("list_logs", _0_DsLogAdmin.LogMgr._d_list_logs, args)

    def find_log(self, *args):
        return self._obj.invoke("find_log", _0_DsLogAdmin.LogMgr._d_find_log, args)

    def list_logs_by_id(self, *args):
        return self._obj.invoke("list_logs_by_id", _0_DsLogAdmin.LogMgr._d_list_logs_by_id, args)

omniORB.registerObjref(LogMgr._NP_RepositoryId, _objref_LogMgr)
_0_DsLogAdmin._objref_LogMgr = _objref_LogMgr
del LogMgr, _objref_LogMgr

# LogMgr skeleton
__name__ = "DsLogAdmin__POA"
class LogMgr (PortableServer.Servant):
    _NP_RepositoryId = _0_DsLogAdmin.LogMgr._NP_RepositoryId


    _omni_op_d = {"list_logs": _0_DsLogAdmin.LogMgr._d_list_logs, "find_log": _0_DsLogAdmin.LogMgr._d_find_log, "list_logs_by_id": _0_DsLogAdmin.LogMgr._d_list_logs_by_id}

LogMgr._omni_skeleton = LogMgr
_0_DsLogAdmin__POA.LogMgr = LogMgr
omniORB.registerSkeleton(LogMgr._NP_RepositoryId, LogMgr)
del LogMgr
__name__ = "DsLogAdmin"

# interface BasicLogFactory
_0_DsLogAdmin._d_BasicLogFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/DsLogAdmin/BasicLogFactory:1.0", "BasicLogFactory")
omniORB.typeMapping["IDL:omg.org/DsLogAdmin/BasicLogFactory:1.0"] = _0_DsLogAdmin._d_BasicLogFactory
_0_DsLogAdmin.BasicLogFactory = omniORB.newEmptyClass()
class BasicLogFactory (_0_DsLogAdmin.LogMgr):
    _NP_RepositoryId = _0_DsLogAdmin._d_BasicLogFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DsLogAdmin.BasicLogFactory = BasicLogFactory
_0_DsLogAdmin._tc_BasicLogFactory = omniORB.tcInternal.createTypeCode(_0_DsLogAdmin._d_BasicLogFactory)
omniORB.registerType(BasicLogFactory._NP_RepositoryId, _0_DsLogAdmin._d_BasicLogFactory, _0_DsLogAdmin._tc_BasicLogFactory)

# BasicLogFactory operations and attributes
BasicLogFactory._d_create = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogFullActionType:1.0"], omniORB.tcInternal.tv_ulonglong), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/BasicLog:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"]), {_0_DsLogAdmin.InvalidLogFullAction._NP_RepositoryId: _0_DsLogAdmin._d_InvalidLogFullAction})
BasicLogFactory._d_create_with_id = ((omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogId:1.0"], omniORB.typeMapping["IDL:omg.org/DsLogAdmin/LogFullActionType:1.0"], omniORB.tcInternal.tv_ulonglong), (omniORB.typeMapping["IDL:omg.org/DsLogAdmin/BasicLog:1.0"], ), {_0_DsLogAdmin.LogIdAlreadyExists._NP_RepositoryId: _0_DsLogAdmin._d_LogIdAlreadyExists, _0_DsLogAdmin.InvalidLogFullAction._NP_RepositoryId: _0_DsLogAdmin._d_InvalidLogFullAction})

# BasicLogFactory object reference
class _objref_BasicLogFactory (_0_DsLogAdmin._objref_LogMgr):
    _NP_RepositoryId = BasicLogFactory._NP_RepositoryId

    def __init__(self, obj):
        _0_DsLogAdmin._objref_LogMgr.__init__(self, obj)

    def create(self, *args):
        return self._obj.invoke("create", _0_DsLogAdmin.BasicLogFactory._d_create, args)

    def create_with_id(self, *args):
        return self._obj.invoke("create_with_id", _0_DsLogAdmin.BasicLogFactory._d_create_with_id, args)

omniORB.registerObjref(BasicLogFactory._NP_RepositoryId, _objref_BasicLogFactory)
_0_DsLogAdmin._objref_BasicLogFactory = _objref_BasicLogFactory
del BasicLogFactory, _objref_BasicLogFactory

# BasicLogFactory skeleton
__name__ = "DsLogAdmin__POA"
class BasicLogFactory (_0_DsLogAdmin__POA.LogMgr):
    _NP_RepositoryId = _0_DsLogAdmin.BasicLogFactory._NP_RepositoryId


    _omni_op_d = {"create": _0_DsLogAdmin.BasicLogFactory._d_create, "create_with_id": _0_DsLogAdmin.BasicLogFactory._d_create_with_id}
    _omni_op_d.update(_0_DsLogAdmin__POA.LogMgr._omni_op_d)

BasicLogFactory._omni_skeleton = BasicLogFactory
_0_DsLogAdmin__POA.BasicLogFactory = BasicLogFactory
omniORB.registerSkeleton(BasicLogFactory._NP_RepositoryId, BasicLogFactory)
del BasicLogFactory
__name__ = "DsLogAdmin"

#
# End of module "DsLogAdmin"
#
__name__ = "DsLogAdmin_idl"

_exported_modules = ( "DsLogAdmin", )

# The end.
