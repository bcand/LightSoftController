# Python stubs generated by omniidl from multiLayerSubnetwork.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "mLSNPP.idl"
import mLSNPP_idl
_0_mLSNPP = omniORB.openModule("mLSNPP")
_0_mLSNPP__POA = omniORB.openModule("mLSNPP__POA")

# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

# #include "mLSNPPLink.idl"
import mLSNPPLink_idl
_0_mLSNPPLink = omniORB.openModule("mLSNPPLink")
_0_mLSNPPLink__POA = omniORB.openModule("mLSNPPLink__POA")

# #include "callSNC.idl"
import callSNC_idl
_0_callSNC = omniORB.openModule("callSNC")
_0_callSNC__POA = omniORB.openModule("callSNC__POA")

# #include "managedElement.idl"
import managedElement_idl
_0_managedElement = omniORB.openModule("managedElement")
_0_managedElement__POA = omniORB.openModule("managedElement__POA")

# #include "topologicalLink.idl"
import topologicalLink_idl
_0_topologicalLink = omniORB.openModule("topologicalLink")
_0_topologicalLink__POA = omniORB.openModule("topologicalLink__POA")

#
# Start of module "multiLayerSubnetwork"
#
__name__ = "multiLayerSubnetwork"
_0_multiLayerSubnetwork = omniORB.openModule("multiLayerSubnetwork", r"multiLayerSubnetwork.idl")
_0_multiLayerSubnetwork__POA = omniORB.openModule("multiLayerSubnetwork__POA", r"multiLayerSubnetwork.idl")


# enum Topology_T
_0_multiLayerSubnetwork.TOPO_SINGLETON = omniORB.EnumItem("TOPO_SINGLETON", 0)
_0_multiLayerSubnetwork.TOPO_CHAIN = omniORB.EnumItem("TOPO_CHAIN", 1)
_0_multiLayerSubnetwork.TOPO_PSR = omniORB.EnumItem("TOPO_PSR", 2)
_0_multiLayerSubnetwork.TOPO_OPEN_PSR = omniORB.EnumItem("TOPO_OPEN_PSR", 3)
_0_multiLayerSubnetwork.TOPO_SPRING = omniORB.EnumItem("TOPO_SPRING", 4)
_0_multiLayerSubnetwork.TOPO_OPEN_SPRING = omniORB.EnumItem("TOPO_OPEN_SPRING", 5)
_0_multiLayerSubnetwork.TOPO_MESH = omniORB.EnumItem("TOPO_MESH", 6)
_0_multiLayerSubnetwork.Topology_T = omniORB.Enum("IDL:mtnm.tmforum.org/multiLayerSubnetwork/Topology_T:1.0", (_0_multiLayerSubnetwork.TOPO_SINGLETON, _0_multiLayerSubnetwork.TOPO_CHAIN, _0_multiLayerSubnetwork.TOPO_PSR, _0_multiLayerSubnetwork.TOPO_OPEN_PSR, _0_multiLayerSubnetwork.TOPO_SPRING, _0_multiLayerSubnetwork.TOPO_OPEN_SPRING, _0_multiLayerSubnetwork.TOPO_MESH,))

_0_multiLayerSubnetwork._d_Topology_T  = (omniORB.tcInternal.tv_enum, _0_multiLayerSubnetwork.Topology_T._NP_RepositoryId, "Topology_T", _0_multiLayerSubnetwork.Topology_T._items)
_0_multiLayerSubnetwork._tc_Topology_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_Topology_T)
omniORB.registerType(_0_multiLayerSubnetwork.Topology_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_Topology_T, _0_multiLayerSubnetwork._tc_Topology_T)

# enum EMSFreedomLevel_T
_0_multiLayerSubnetwork.EMSFL_CC_AT_SNC_LAYER = omniORB.EnumItem("EMSFL_CC_AT_SNC_LAYER", 0)
_0_multiLayerSubnetwork.EMSFL_TERMINATE_AND_MAP = omniORB.EnumItem("EMSFL_TERMINATE_AND_MAP", 1)
_0_multiLayerSubnetwork.EMSFL_HIGHER_ORDER_SNCS = omniORB.EnumItem("EMSFL_HIGHER_ORDER_SNCS", 2)
_0_multiLayerSubnetwork.EMSFL_RECONFIGURATION = omniORB.EnumItem("EMSFL_RECONFIGURATION", 3)
_0_multiLayerSubnetwork.EMSFreedomLevel_T = omniORB.Enum("IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0", (_0_multiLayerSubnetwork.EMSFL_CC_AT_SNC_LAYER, _0_multiLayerSubnetwork.EMSFL_TERMINATE_AND_MAP, _0_multiLayerSubnetwork.EMSFL_HIGHER_ORDER_SNCS, _0_multiLayerSubnetwork.EMSFL_RECONFIGURATION,))

_0_multiLayerSubnetwork._d_EMSFreedomLevel_T  = (omniORB.tcInternal.tv_enum, _0_multiLayerSubnetwork.EMSFreedomLevel_T._NP_RepositoryId, "EMSFreedomLevel_T", _0_multiLayerSubnetwork.EMSFreedomLevel_T._items)
_0_multiLayerSubnetwork._tc_EMSFreedomLevel_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_EMSFreedomLevel_T)
omniORB.registerType(_0_multiLayerSubnetwork.EMSFreedomLevel_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_EMSFreedomLevel_T, _0_multiLayerSubnetwork._tc_EMSFreedomLevel_T)

# struct MultiLayerSubnetwork_T
_0_multiLayerSubnetwork.MultiLayerSubnetwork_T = omniORB.newEmptyClass()
class MultiLayerSubnetwork_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, subnetworkType, supportedRates, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.subnetworkType = subnetworkType
        self.supportedRates = supportedRates
        self.additionalInfo = additionalInfo

_0_multiLayerSubnetwork.MultiLayerSubnetwork_T = MultiLayerSubnetwork_T
_0_multiLayerSubnetwork._d_MultiLayerSubnetwork_T  = (omniORB.tcInternal.tv_struct, MultiLayerSubnetwork_T, MultiLayerSubnetwork_T._NP_RepositoryId, "MultiLayerSubnetwork_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "subnetworkType", omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/Topology_T:1.0"], "supportedRates", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_multiLayerSubnetwork._tc_MultiLayerSubnetwork_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_MultiLayerSubnetwork_T)
omniORB.registerType(MultiLayerSubnetwork_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_MultiLayerSubnetwork_T, _0_multiLayerSubnetwork._tc_MultiLayerSubnetwork_T)
del MultiLayerSubnetwork_T

# typedef ... SubnetworkList_T
class SubnetworkList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_multiLayerSubnetwork.SubnetworkList_T = SubnetworkList_T
_0_multiLayerSubnetwork._d_SubnetworkList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"], 0)
_0_multiLayerSubnetwork._ad_SubnetworkList_T = (omniORB.tcInternal.tv_alias, SubnetworkList_T._NP_RepositoryId, "SubnetworkList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"], 0))
_0_multiLayerSubnetwork._tc_SubnetworkList_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._ad_SubnetworkList_T)
omniORB.registerType(SubnetworkList_T._NP_RepositoryId, _0_multiLayerSubnetwork._ad_SubnetworkList_T, _0_multiLayerSubnetwork._tc_SubnetworkList_T)
del SubnetworkList_T

# typedef ... RAIDList_T
class RAIDList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/RAIDList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_multiLayerSubnetwork.RAIDList_T = RAIDList_T
_0_multiLayerSubnetwork._d_RAIDList_T  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_multiLayerSubnetwork._ad_RAIDList_T = (omniORB.tcInternal.tv_alias, RAIDList_T._NP_RepositoryId, "RAIDList_T", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_multiLayerSubnetwork._tc_RAIDList_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._ad_RAIDList_T)
omniORB.registerType(RAIDList_T._NP_RepositoryId, _0_multiLayerSubnetwork._ad_RAIDList_T, _0_multiLayerSubnetwork._tc_RAIDList_T)
del RAIDList_T

# struct RouteAndRouteType_T
_0_multiLayerSubnetwork.RouteAndRouteType_T = omniORB.newEmptyClass()
class RouteAndRouteType_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/RouteAndRouteType_T:1.0"

    def __init__(self, rAIDList, routeType, RouteDescription):
        self.rAIDList = rAIDList
        self.routeType = routeType
        self.RouteDescription = RouteDescription

_0_multiLayerSubnetwork.RouteAndRouteType_T = RouteAndRouteType_T
_0_multiLayerSubnetwork._d_RouteAndRouteType_T  = (omniORB.tcInternal.tv_struct, RouteAndRouteType_T, RouteAndRouteType_T._NP_RepositoryId, "RouteAndRouteType_T", "rAIDList", omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/RAIDList_T:1.0"], "routeType", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/RouteType_T:1.0"], "RouteDescription", (omniORB.tcInternal.tv_string,0))
_0_multiLayerSubnetwork._tc_RouteAndRouteType_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_RouteAndRouteType_T)
omniORB.registerType(RouteAndRouteType_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_RouteAndRouteType_T, _0_multiLayerSubnetwork._tc_RouteAndRouteType_T)
del RouteAndRouteType_T

# typedef ... RoutePerRouteType_T
class RoutePerRouteType_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/RoutePerRouteType_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_multiLayerSubnetwork.RoutePerRouteType_T = RoutePerRouteType_T
_0_multiLayerSubnetwork._d_RoutePerRouteType_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/RouteAndRouteType_T:1.0"], 0)
_0_multiLayerSubnetwork._ad_RoutePerRouteType_T = (omniORB.tcInternal.tv_alias, RoutePerRouteType_T._NP_RepositoryId, "RoutePerRouteType_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/RouteAndRouteType_T:1.0"], 0))
_0_multiLayerSubnetwork._tc_RoutePerRouteType_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._ad_RoutePerRouteType_T)
omniORB.registerType(RoutePerRouteType_T._NP_RepositoryId, _0_multiLayerSubnetwork._ad_RoutePerRouteType_T, _0_multiLayerSubnetwork._tc_RoutePerRouteType_T)
del RoutePerRouteType_T

# struct TPPoolCreateData_T
_0_multiLayerSubnetwork.TPPoolCreateData_T = omniORB.newEmptyClass()
class TPPoolCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/TPPoolCreateData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, containingMLSN, containedMembers, transmissionParams, descriptionOfUse, additionalCreationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.containingMLSN = containingMLSN
        self.containedMembers = containedMembers
        self.transmissionParams = transmissionParams
        self.descriptionOfUse = descriptionOfUse
        self.additionalCreationInfo = additionalCreationInfo

_0_multiLayerSubnetwork.TPPoolCreateData_T = TPPoolCreateData_T
_0_multiLayerSubnetwork._d_TPPoolCreateData_T  = (omniORB.tcInternal.tv_struct, TPPoolCreateData_T, TPPoolCreateData_T._NP_RepositoryId, "TPPoolCreateData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "containingMLSN", omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"], "containedMembers", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "descriptionOfUse", (omniORB.tcInternal.tv_string,0), "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_multiLayerSubnetwork._tc_TPPoolCreateData_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_TPPoolCreateData_T)
omniORB.registerType(TPPoolCreateData_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_TPPoolCreateData_T, _0_multiLayerSubnetwork._tc_TPPoolCreateData_T)
del TPPoolCreateData_T

# interface SubnetworkIterator_I
_0_multiLayerSubnetwork._d_SubnetworkIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkIterator_I:1.0", "SubnetworkIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkIterator_I:1.0"] = _0_multiLayerSubnetwork._d_SubnetworkIterator_I
_0_multiLayerSubnetwork.SubnetworkIterator_I = omniORB.newEmptyClass()
class SubnetworkIterator_I :
    _NP_RepositoryId = _0_multiLayerSubnetwork._d_SubnetworkIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_multiLayerSubnetwork.SubnetworkIterator_I = SubnetworkIterator_I
_0_multiLayerSubnetwork._tc_SubnetworkIterator_I = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_SubnetworkIterator_I)
omniORB.registerType(SubnetworkIterator_I._NP_RepositoryId, _0_multiLayerSubnetwork._d_SubnetworkIterator_I, _0_multiLayerSubnetwork._tc_SubnetworkIterator_I)

# SubnetworkIterator_I operations and attributes
SubnetworkIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
SubnetworkIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
SubnetworkIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# SubnetworkIterator_I object reference
class _objref_SubnetworkIterator_I (CORBA.Object):
    _NP_RepositoryId = SubnetworkIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_multiLayerSubnetwork.SubnetworkIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_multiLayerSubnetwork.SubnetworkIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_multiLayerSubnetwork.SubnetworkIterator_I._d_destroy, args)

omniORB.registerObjref(SubnetworkIterator_I._NP_RepositoryId, _objref_SubnetworkIterator_I)
_0_multiLayerSubnetwork._objref_SubnetworkIterator_I = _objref_SubnetworkIterator_I
del SubnetworkIterator_I, _objref_SubnetworkIterator_I

# SubnetworkIterator_I skeleton
__name__ = "multiLayerSubnetwork__POA"
class SubnetworkIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_multiLayerSubnetwork.SubnetworkIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_multiLayerSubnetwork.SubnetworkIterator_I._d_next_n, "getLength": _0_multiLayerSubnetwork.SubnetworkIterator_I._d_getLength, "destroy": _0_multiLayerSubnetwork.SubnetworkIterator_I._d_destroy}

SubnetworkIterator_I._omni_skeleton = SubnetworkIterator_I
_0_multiLayerSubnetwork__POA.SubnetworkIterator_I = SubnetworkIterator_I
omniORB.registerSkeleton(SubnetworkIterator_I._NP_RepositoryId, SubnetworkIterator_I)
del SubnetworkIterator_I
__name__ = "multiLayerSubnetwork"

# interface MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetworkMgr_I:1.0", "MultiLayerSubnetworkMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetworkMgr_I:1.0"] = _0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I = omniORB.newEmptyClass()
class MultiLayerSubnetworkMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I = MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork._tc_MultiLayerSubnetworkMgr_I = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I)
omniORB.registerType(MultiLayerSubnetworkMgr_I._NP_RepositoryId, _0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I, _0_multiLayerSubnetwork._tc_MultiLayerSubnetworkMgr_I)

# MultiLayerSubnetworkMgr_I operations and attributes
MultiLayerSubnetworkMgr_I._d_getAllManagedElements = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllManagedElementNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getMultiLayerSubnetwork = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinkNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getTopologicalLink = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLink_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllEdgePoints = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllEdgePointNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAssociatedTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getTPGroupingRelationships = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionsWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNamesWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getRouteAndTopologicalLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getSNCsByUserLabel = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_createSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_activateSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_createAndActivateSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_deactivateSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_deleteSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"]), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_deactivateAndDeleteSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_checkValidSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.tcInternal.tv_boolean, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTPPools = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTPPoolNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionsWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionNamesWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_createModifiedSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCModifyData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ProtectionEffort_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_swapSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCState_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_modifySNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCModifyData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ProtectionEffort_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getBackupRoutes = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_switchRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCState_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_addRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteDescriptor_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_removeRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_setIntendedRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_setRoutesAdminState = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteNameAndAdminStateList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteNameAndAdminStateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCState_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getIntendedRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_createTPPool = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/TPPoolCreateData_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_deleteTPPool = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_modifyTPPool = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getTPPool = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong, (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubordinateMLSNs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubordinateRAidsWithConnection = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/RouteType_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/RoutePerRouteType_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getMLSNPPLink = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MultiLayerSNPPLink_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllMLSNPPLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllInternalMLSNPPLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllEdgeMLSNPPLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllMLSNPPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/MLSNPPIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsWithME = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCsWithME = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCsWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllCallIdsWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallIdList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllCallIdsWithSNPPOrTNAName = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallIdList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getCallAndTopLevelConnectionsAndSNCs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCs_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getCallAndTopLevelConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnections_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_establishCall = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateDataList_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCs_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_modifyCall = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallModifyData_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/Call_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_releaseCall = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getCall = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/Call_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_addConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateDataList_T:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_removeConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getConnectionsAndRouteDetails = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/RouteType_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/SNCAndRouteList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_modifyDiversityAndCorouting = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/Diversity_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/RouteGroupInfoList_T:1.0"], omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnections_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# MultiLayerSubnetworkMgr_I object reference
class _objref_MultiLayerSubnetworkMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = MultiLayerSubnetworkMgr_I._NP_RepositoryId

    def __init__(self, obj):
        _0_common._objref_Common_I.__init__(self, obj)

    def getAllManagedElements(self, *args):
        return self._obj.invoke("getAllManagedElements", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElements, args)

    def getAllManagedElementNames(self, *args):
        return self._obj.invoke("getAllManagedElementNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElementNames, args)

    def getMultiLayerSubnetwork(self, *args):
        return self._obj.invoke("getMultiLayerSubnetwork", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getMultiLayerSubnetwork, args)

    def getAllTopologicalLinks(self, *args):
        return self._obj.invoke("getAllTopologicalLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinks, args)

    def getAllTopologicalLinkNames(self, *args):
        return self._obj.invoke("getAllTopologicalLinkNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinkNames, args)

    def getTopologicalLink(self, *args):
        return self._obj.invoke("getTopologicalLink", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTopologicalLink, args)

    def getAllEdgePoints(self, *args):
        return self._obj.invoke("getAllEdgePoints", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePoints, args)

    def getAllEdgePointNames(self, *args):
        return self._obj.invoke("getAllEdgePointNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePointNames, args)

    def getAssociatedTP(self, *args):
        return self._obj.invoke("getAssociatedTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAssociatedTP, args)

    def getTPGroupingRelationships(self, *args):
        return self._obj.invoke("getTPGroupingRelationships", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTPGroupingRelationships, args)

    def getAllSubnetworkConnections(self, *args):
        return self._obj.invoke("getAllSubnetworkConnections", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnections, args)

    def getAllSubnetworkConnectionNames(self, *args):
        return self._obj.invoke("getAllSubnetworkConnectionNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNames, args)

    def getAllSubnetworkConnectionsWithTP(self, *args):
        return self._obj.invoke("getAllSubnetworkConnectionsWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionsWithTP, args)

    def getAllSubnetworkConnectionNamesWithTP(self, *args):
        return self._obj.invoke("getAllSubnetworkConnectionNamesWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNamesWithTP, args)

    def getRoute(self, *args):
        return self._obj.invoke("getRoute", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRoute, args)

    def getRouteAndTopologicalLinks(self, *args):
        return self._obj.invoke("getRouteAndTopologicalLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRouteAndTopologicalLinks, args)

    def getSNC(self, *args):
        return self._obj.invoke("getSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNC, args)

    def getSNCsByUserLabel(self, *args):
        return self._obj.invoke("getSNCsByUserLabel", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByUserLabel, args)

    def createSNC(self, *args):
        return self._obj.invoke("createSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createSNC, args)

    def activateSNC(self, *args):
        return self._obj.invoke("activateSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_activateSNC, args)

    def createAndActivateSNC(self, *args):
        return self._obj.invoke("createAndActivateSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createAndActivateSNC, args)

    def deactivateSNC(self, *args):
        return self._obj.invoke("deactivateSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateSNC, args)

    def deleteSNC(self, *args):
        return self._obj.invoke("deleteSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deleteSNC, args)

    def deactivateAndDeleteSNC(self, *args):
        return self._obj.invoke("deactivateAndDeleteSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateAndDeleteSNC, args)

    def checkValidSNC(self, *args):
        return self._obj.invoke("checkValidSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_checkValidSNC, args)

    def getAllTPPools(self, *args):
        return self._obj.invoke("getAllTPPools", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPools, args)

    def getAllTPPoolNames(self, *args):
        return self._obj.invoke("getAllTPPoolNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPoolNames, args)

    def getAllFixedSubnetworkConnections(self, *args):
        return self._obj.invoke("getAllFixedSubnetworkConnections", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnections, args)

    def getAllFixedSubnetworkConnectionNames(self, *args):
        return self._obj.invoke("getAllFixedSubnetworkConnectionNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionNames, args)

    def getAllFixedSubnetworkConnectionsWithTP(self, *args):
        return self._obj.invoke("getAllFixedSubnetworkConnectionsWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionsWithTP, args)

    def getAllFixedSubnetworkConnectionNamesWithTP(self, *args):
        return self._obj.invoke("getAllFixedSubnetworkConnectionNamesWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionNamesWithTP, args)

    def createModifiedSNC(self, *args):
        return self._obj.invoke("createModifiedSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createModifiedSNC, args)

    def swapSNC(self, *args):
        return self._obj.invoke("swapSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_swapSNC, args)

    def modifySNC(self, *args):
        return self._obj.invoke("modifySNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifySNC, args)

    def getBackupRoutes(self, *args):
        return self._obj.invoke("getBackupRoutes", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getBackupRoutes, args)

    def switchRoute(self, *args):
        return self._obj.invoke("switchRoute", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_switchRoute, args)

    def addRoute(self, *args):
        return self._obj.invoke("addRoute", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_addRoute, args)

    def removeRoute(self, *args):
        return self._obj.invoke("removeRoute", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_removeRoute, args)

    def setIntendedRoute(self, *args):
        return self._obj.invoke("setIntendedRoute", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_setIntendedRoute, args)

    def setRoutesAdminState(self, *args):
        return self._obj.invoke("setRoutesAdminState", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_setRoutesAdminState, args)

    def getIntendedRoute(self, *args):
        return self._obj.invoke("getIntendedRoute", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getIntendedRoute, args)

    def createTPPool(self, *args):
        return self._obj.invoke("createTPPool", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createTPPool, args)

    def deleteTPPool(self, *args):
        return self._obj.invoke("deleteTPPool", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deleteTPPool, args)

    def modifyTPPool(self, *args):
        return self._obj.invoke("modifyTPPool", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifyTPPool, args)

    def getTPPool(self, *args):
        return self._obj.invoke("getTPPool", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTPPool, args)

    def getAllSubordinateMLSNs(self, *args):
        return self._obj.invoke("getAllSubordinateMLSNs", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubordinateMLSNs, args)

    def getAllSubordinateRAidsWithConnection(self, *args):
        return self._obj.invoke("getAllSubordinateRAidsWithConnection", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubordinateRAidsWithConnection, args)

    def getMLSNPPLink(self, *args):
        return self._obj.invoke("getMLSNPPLink", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getMLSNPPLink, args)

    def getAllMLSNPPLinks(self, *args):
        return self._obj.invoke("getAllMLSNPPLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllMLSNPPLinks, args)

    def getAllInternalMLSNPPLinks(self, *args):
        return self._obj.invoke("getAllInternalMLSNPPLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllInternalMLSNPPLinks, args)

    def getAllEdgeMLSNPPLinks(self, *args):
        return self._obj.invoke("getAllEdgeMLSNPPLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgeMLSNPPLinks, args)

    def getAllMLSNPPs(self, *args):
        return self._obj.invoke("getAllMLSNPPs", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllMLSNPPs, args)

    def getAllCallsAndTopLevelConnections(self, *args):
        return self._obj.invoke("getAllCallsAndTopLevelConnections", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnections, args)

    def getAllCallsAndTopLevelConnectionsAndSNCs(self, *args):
        return self._obj.invoke("getAllCallsAndTopLevelConnectionsAndSNCs", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCs, args)

    def getAllCallsAndTopLevelConnectionsWithME(self, *args):
        return self._obj.invoke("getAllCallsAndTopLevelConnectionsWithME", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsWithME, args)

    def getAllCallsAndTopLevelConnectionsAndSNCsWithME(self, *args):
        return self._obj.invoke("getAllCallsAndTopLevelConnectionsAndSNCsWithME", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCsWithME, args)

    def getAllCallsAndTopLevelConnectionsAndSNCsWithTP(self, *args):
        return self._obj.invoke("getAllCallsAndTopLevelConnectionsAndSNCsWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCsWithTP, args)

    def getAllCallIdsWithTP(self, *args):
        return self._obj.invoke("getAllCallIdsWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallIdsWithTP, args)

    def getAllCallIdsWithSNPPOrTNAName(self, *args):
        return self._obj.invoke("getAllCallIdsWithSNPPOrTNAName", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallIdsWithSNPPOrTNAName, args)

    def getCallAndTopLevelConnectionsAndSNCs(self, *args):
        return self._obj.invoke("getCallAndTopLevelConnectionsAndSNCs", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getCallAndTopLevelConnectionsAndSNCs, args)

    def getCallAndTopLevelConnections(self, *args):
        return self._obj.invoke("getCallAndTopLevelConnections", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getCallAndTopLevelConnections, args)

    def establishCall(self, *args):
        return self._obj.invoke("establishCall", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_establishCall, args)

    def modifyCall(self, *args):
        return self._obj.invoke("modifyCall", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifyCall, args)

    def releaseCall(self, *args):
        return self._obj.invoke("releaseCall", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_releaseCall, args)

    def getCall(self, *args):
        return self._obj.invoke("getCall", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getCall, args)

    def addConnections(self, *args):
        return self._obj.invoke("addConnections", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_addConnections, args)

    def removeConnections(self, *args):
        return self._obj.invoke("removeConnections", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_removeConnections, args)

    def getConnectionsAndRouteDetails(self, *args):
        return self._obj.invoke("getConnectionsAndRouteDetails", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getConnectionsAndRouteDetails, args)

    def modifyDiversityAndCorouting(self, *args):
        return self._obj.invoke("modifyDiversityAndCorouting", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifyDiversityAndCorouting, args)

omniORB.registerObjref(MultiLayerSubnetworkMgr_I._NP_RepositoryId, _objref_MultiLayerSubnetworkMgr_I)
_0_multiLayerSubnetwork._objref_MultiLayerSubnetworkMgr_I = _objref_MultiLayerSubnetworkMgr_I
del MultiLayerSubnetworkMgr_I, _objref_MultiLayerSubnetworkMgr_I

# MultiLayerSubnetworkMgr_I skeleton
__name__ = "multiLayerSubnetwork__POA"
class MultiLayerSubnetworkMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._NP_RepositoryId


    _omni_op_d = {"getAllManagedElements": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElements, "getAllManagedElementNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElementNames, "getMultiLayerSubnetwork": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getMultiLayerSubnetwork, "getAllTopologicalLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinks, "getAllTopologicalLinkNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinkNames, "getTopologicalLink": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTopologicalLink, "getAllEdgePoints": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePoints, "getAllEdgePointNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePointNames, "getAssociatedTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAssociatedTP, "getTPGroupingRelationships": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTPGroupingRelationships, "getAllSubnetworkConnections": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnections, "getAllSubnetworkConnectionNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNames, "getAllSubnetworkConnectionsWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionsWithTP, "getAllSubnetworkConnectionNamesWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNamesWithTP, "getRoute": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRoute, "getRouteAndTopologicalLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRouteAndTopologicalLinks, "getSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNC, "getSNCsByUserLabel": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByUserLabel, "createSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createSNC, "activateSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_activateSNC, "createAndActivateSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createAndActivateSNC, "deactivateSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateSNC, "deleteSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deleteSNC, "deactivateAndDeleteSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateAndDeleteSNC, "checkValidSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_checkValidSNC, "getAllTPPools": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPools, "getAllTPPoolNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPoolNames, "getAllFixedSubnetworkConnections": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnections, "getAllFixedSubnetworkConnectionNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionNames, "getAllFixedSubnetworkConnectionsWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionsWithTP, "getAllFixedSubnetworkConnectionNamesWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllFixedSubnetworkConnectionNamesWithTP, "createModifiedSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createModifiedSNC, "swapSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_swapSNC, "modifySNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifySNC, "getBackupRoutes": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getBackupRoutes, "switchRoute": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_switchRoute, "addRoute": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_addRoute, "removeRoute": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_removeRoute, "setIntendedRoute": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_setIntendedRoute, "setRoutesAdminState": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_setRoutesAdminState, "getIntendedRoute": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getIntendedRoute, "createTPPool": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createTPPool, "deleteTPPool": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deleteTPPool, "modifyTPPool": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifyTPPool, "getTPPool": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTPPool, "getAllSubordinateMLSNs": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubordinateMLSNs, "getAllSubordinateRAidsWithConnection": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubordinateRAidsWithConnection, "getMLSNPPLink": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getMLSNPPLink, "getAllMLSNPPLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllMLSNPPLinks, "getAllInternalMLSNPPLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllInternalMLSNPPLinks, "getAllEdgeMLSNPPLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgeMLSNPPLinks, "getAllMLSNPPs": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllMLSNPPs, "getAllCallsAndTopLevelConnections": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnections, "getAllCallsAndTopLevelConnectionsAndSNCs": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCs, "getAllCallsAndTopLevelConnectionsWithME": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsWithME, "getAllCallsAndTopLevelConnectionsAndSNCsWithME": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCsWithME, "getAllCallsAndTopLevelConnectionsAndSNCsWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallsAndTopLevelConnectionsAndSNCsWithTP, "getAllCallIdsWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallIdsWithTP, "getAllCallIdsWithSNPPOrTNAName": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllCallIdsWithSNPPOrTNAName, "getCallAndTopLevelConnectionsAndSNCs": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getCallAndTopLevelConnectionsAndSNCs, "getCallAndTopLevelConnections": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getCallAndTopLevelConnections, "establishCall": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_establishCall, "modifyCall": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifyCall, "releaseCall": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_releaseCall, "getCall": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getCall, "addConnections": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_addConnections, "removeConnections": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_removeConnections, "getConnectionsAndRouteDetails": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getConnectionsAndRouteDetails, "modifyDiversityAndCorouting": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifyDiversityAndCorouting}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

MultiLayerSubnetworkMgr_I._omni_skeleton = MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork__POA.MultiLayerSubnetworkMgr_I = MultiLayerSubnetworkMgr_I
omniORB.registerSkeleton(MultiLayerSubnetworkMgr_I._NP_RepositoryId, MultiLayerSubnetworkMgr_I)
del MultiLayerSubnetworkMgr_I
__name__ = "multiLayerSubnetwork"

#
# End of module "multiLayerSubnetwork"
#
__name__ = "multiLayerSubnetwork_idl"

_exported_modules = ( "multiLayerSubnetwork", )

# The end.
