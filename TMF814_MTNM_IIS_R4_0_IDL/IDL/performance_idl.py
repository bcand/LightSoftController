# Python stubs generated by omniidl from performance.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

#
# Start of module "performance"
#
__name__ = "performance"
_0_performance = omniORB.openModule("performance", r"performance.idl")
_0_performance__POA = omniORB.openModule("performance__POA", r"performance.idl")


# typedef ... Destination_T
class Destination_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/Destination_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.Destination_T = Destination_T
_0_performance._d_Destination_T  = (omniORB.tcInternal.tv_string,0)
_0_performance._ad_Destination_T = (omniORB.tcInternal.tv_alias, Destination_T._NP_RepositoryId, "Destination_T", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_Destination_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_Destination_T)
omniORB.registerType(Destination_T._NP_RepositoryId, _0_performance._ad_Destination_T, _0_performance._tc_Destination_T)
del Destination_T

# typedef ... Granularity_T
class Granularity_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/Granularity_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.Granularity_T = Granularity_T
_0_performance._d_Granularity_T  = (omniORB.tcInternal.tv_string,0)
_0_performance._ad_Granularity_T = (omniORB.tcInternal.tv_alias, Granularity_T._NP_RepositoryId, "Granularity_T", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_Granularity_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_Granularity_T)
omniORB.registerType(Granularity_T._NP_RepositoryId, _0_performance._ad_Granularity_T, _0_performance._tc_Granularity_T)
del Granularity_T

# typedef ... GranularityList_T
class GranularityList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/GranularityList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.GranularityList_T = GranularityList_T
_0_performance._d_GranularityList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/Granularity_T:1.0"], 0)
_0_performance._ad_GranularityList_T = (omniORB.tcInternal.tv_alias, GranularityList_T._NP_RepositoryId, "GranularityList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/Granularity_T:1.0"], 0))
_0_performance._tc_GranularityList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_GranularityList_T)
omniORB.registerType(GranularityList_T._NP_RepositoryId, _0_performance._ad_GranularityList_T, _0_performance._tc_GranularityList_T)
del GranularityList_T

# typedef ... PMLocation_T
class PMLocation_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMLocation_T = PMLocation_T
_0_performance._d_PMLocation_T  = (omniORB.tcInternal.tv_string,0)
_0_performance._ad_PMLocation_T = (omniORB.tcInternal.tv_alias, PMLocation_T._NP_RepositoryId, "PMLocation_T", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_PMLocation_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMLocation_T)
omniORB.registerType(PMLocation_T._NP_RepositoryId, _0_performance._ad_PMLocation_T, _0_performance._tc_PMLocation_T)
del PMLocation_T

# typedef ... PMLocationList_T
class PMLocationList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMLocationList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMLocationList_T = PMLocationList_T
_0_performance._d_PMLocationList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0"], 0)
_0_performance._ad_PMLocationList_T = (omniORB.tcInternal.tv_alias, PMLocationList_T._NP_RepositoryId, "PMLocationList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0"], 0))
_0_performance._tc_PMLocationList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMLocationList_T)
omniORB.registerType(PMLocationList_T._NP_RepositoryId, _0_performance._ad_PMLocationList_T, _0_performance._tc_PMLocationList_T)
del PMLocationList_T

# typedef ... PMParameterName_T
class PMParameterName_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMParameterName_T = PMParameterName_T
_0_performance._d_PMParameterName_T  = (omniORB.tcInternal.tv_string,0)
_0_performance._ad_PMParameterName_T = (omniORB.tcInternal.tv_alias, PMParameterName_T._NP_RepositoryId, "PMParameterName_T", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_PMParameterName_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMParameterName_T)
omniORB.registerType(PMParameterName_T._NP_RepositoryId, _0_performance._ad_PMParameterName_T, _0_performance._tc_PMParameterName_T)
del PMParameterName_T

# typedef ... PMParameterNameList_T
class PMParameterNameList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMParameterNameList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMParameterNameList_T = PMParameterNameList_T
_0_performance._d_PMParameterNameList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"], 0)
_0_performance._ad_PMParameterNameList_T = (omniORB.tcInternal.tv_alias, PMParameterNameList_T._NP_RepositoryId, "PMParameterNameList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"], 0))
_0_performance._tc_PMParameterNameList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMParameterNameList_T)
omniORB.registerType(PMParameterNameList_T._NP_RepositoryId, _0_performance._ad_PMParameterNameList_T, _0_performance._tc_PMParameterNameList_T)
del PMParameterNameList_T

# struct PMParameter_T
_0_performance.PMParameter_T = omniORB.newEmptyClass()
class PMParameter_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMParameter_T:1.0"

    def __init__(self, pmParameterName, pmLocation):
        self.pmParameterName = pmParameterName
        self.pmLocation = pmLocation

_0_performance.PMParameter_T = PMParameter_T
_0_performance._d_PMParameter_T  = (omniORB.tcInternal.tv_struct, PMParameter_T, PMParameter_T._NP_RepositoryId, "PMParameter_T", "pmParameterName", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"], "pmLocation", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0"])
_0_performance._tc_PMParameter_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMParameter_T)
omniORB.registerType(PMParameter_T._NP_RepositoryId, _0_performance._d_PMParameter_T, _0_performance._tc_PMParameter_T)
del PMParameter_T

# typedef ... PMParameterList_T
class PMParameterList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMParameterList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMParameterList_T = PMParameterList_T
_0_performance._d_PMParameterList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameter_T:1.0"], 0)
_0_performance._ad_PMParameterList_T = (omniORB.tcInternal.tv_alias, PMParameterList_T._NP_RepositoryId, "PMParameterList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameter_T:1.0"], 0))
_0_performance._tc_PMParameterList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMParameterList_T)
omniORB.registerType(PMParameterList_T._NP_RepositoryId, _0_performance._ad_PMParameterList_T, _0_performance._tc_PMParameterList_T)
del PMParameterList_T

# enum PMThresholdType_T
_0_performance.TWM_HIGHEST = omniORB.EnumItem("TWM_HIGHEST", 0)
_0_performance.TWM_HIGH = omniORB.EnumItem("TWM_HIGH", 1)
_0_performance.TWM_LOW = omniORB.EnumItem("TWM_LOW", 2)
_0_performance.TWM_LOWEST = omniORB.EnumItem("TWM_LOWEST", 3)
_0_performance.PMThresholdType_T = omniORB.Enum("IDL:mtnm.tmforum.org/performance/PMThresholdType_T:1.0", (_0_performance.TWM_HIGHEST, _0_performance.TWM_HIGH, _0_performance.TWM_LOW, _0_performance.TWM_LOWEST,))

_0_performance._d_PMThresholdType_T  = (omniORB.tcInternal.tv_enum, _0_performance.PMThresholdType_T._NP_RepositoryId, "PMThresholdType_T", _0_performance.PMThresholdType_T._items)
_0_performance._tc_PMThresholdType_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMThresholdType_T)
omniORB.registerType(_0_performance.PMThresholdType_T._NP_RepositoryId, _0_performance._d_PMThresholdType_T, _0_performance._tc_PMThresholdType_T)

# struct PMThresholdValue_T
_0_performance.PMThresholdValue_T = omniORB.newEmptyClass()
class PMThresholdValue_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMThresholdValue_T:1.0"

    def __init__(self, pmParameterName, pmLocation, thresholdType, triggerFlag, value, unit):
        self.pmParameterName = pmParameterName
        self.pmLocation = pmLocation
        self.thresholdType = thresholdType
        self.triggerFlag = triggerFlag
        self.value = value
        self.unit = unit

_0_performance.PMThresholdValue_T = PMThresholdValue_T
_0_performance._d_PMThresholdValue_T  = (omniORB.tcInternal.tv_struct, PMThresholdValue_T, PMThresholdValue_T._NP_RepositoryId, "PMThresholdValue_T", "pmParameterName", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"], "pmLocation", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0"], "thresholdType", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThresholdType_T:1.0"], "triggerFlag", omniORB.tcInternal.tv_boolean, "value", omniORB.tcInternal.tv_float, "unit", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_PMThresholdValue_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMThresholdValue_T)
omniORB.registerType(PMThresholdValue_T._NP_RepositoryId, _0_performance._d_PMThresholdValue_T, _0_performance._tc_PMThresholdValue_T)
del PMThresholdValue_T

# typedef ... PMThresholdValueList_T
class PMThresholdValueList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMThresholdValueList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMThresholdValueList_T = PMThresholdValueList_T
_0_performance._d_PMThresholdValueList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThresholdValue_T:1.0"], 0)
_0_performance._ad_PMThresholdValueList_T = (omniORB.tcInternal.tv_alias, PMThresholdValueList_T._NP_RepositoryId, "PMThresholdValueList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThresholdValue_T:1.0"], 0))
_0_performance._tc_PMThresholdValueList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMThresholdValueList_T)
omniORB.registerType(PMThresholdValueList_T._NP_RepositoryId, _0_performance._ad_PMThresholdValueList_T, _0_performance._tc_PMThresholdValueList_T)
del PMThresholdValueList_T

# struct TCAParameter_T
_0_performance.TCAParameter_T = omniORB.newEmptyClass()
class TCAParameter_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/TCAParameter_T:1.0"

    def __init__(self, pmParameterName, granularity, pmLocation, thresholdType, triggerFlag, value, unit):
        self.pmParameterName = pmParameterName
        self.granularity = granularity
        self.pmLocation = pmLocation
        self.thresholdType = thresholdType
        self.triggerFlag = triggerFlag
        self.value = value
        self.unit = unit

_0_performance.TCAParameter_T = TCAParameter_T
_0_performance._d_TCAParameter_T  = (omniORB.tcInternal.tv_struct, TCAParameter_T, TCAParameter_T._NP_RepositoryId, "TCAParameter_T", "pmParameterName", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"], "granularity", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/Granularity_T:1.0"], "pmLocation", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0"], "thresholdType", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThresholdType_T:1.0"], "triggerFlag", omniORB.tcInternal.tv_boolean, "value", omniORB.tcInternal.tv_float, "unit", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_TCAParameter_T = omniORB.tcInternal.createTypeCode(_0_performance._d_TCAParameter_T)
omniORB.registerType(TCAParameter_T._NP_RepositoryId, _0_performance._d_TCAParameter_T, _0_performance._tc_TCAParameter_T)
del TCAParameter_T

# typedef ... TCAParameterList_T
class TCAParameterList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/TCAParameterList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.TCAParameterList_T = TCAParameterList_T
_0_performance._d_TCAParameterList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameter_T:1.0"], 0)
_0_performance._ad_TCAParameterList_T = (omniORB.tcInternal.tv_alias, TCAParameterList_T._NP_RepositoryId, "TCAParameterList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameter_T:1.0"], 0))
_0_performance._tc_TCAParameterList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_TCAParameterList_T)
omniORB.registerType(TCAParameterList_T._NP_RepositoryId, _0_performance._ad_TCAParameterList_T, _0_performance._tc_TCAParameterList_T)
del TCAParameterList_T

# struct TCAParameterProfile_T
_0_performance.TCAParameterProfile_T = omniORB.newEmptyClass()
class TCAParameterProfile_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/TCAParameterProfile_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, additionalInfo, layerRate, tcaParameterList):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.additionalInfo = additionalInfo
        self.layerRate = layerRate
        self.tcaParameterList = tcaParameterList

_0_performance.TCAParameterProfile_T = TCAParameterProfile_T
_0_performance._d_TCAParameterProfile_T  = (omniORB.tcInternal.tv_struct, TCAParameterProfile_T, TCAParameterProfile_T._NP_RepositoryId, "TCAParameterProfile_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], "layerRate", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], "tcaParameterList", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterList_T:1.0"])
_0_performance._tc_TCAParameterProfile_T = omniORB.tcInternal.createTypeCode(_0_performance._d_TCAParameterProfile_T)
omniORB.registerType(TCAParameterProfile_T._NP_RepositoryId, _0_performance._d_TCAParameterProfile_T, _0_performance._tc_TCAParameterProfile_T)
del TCAParameterProfile_T

# typedef ... TCAParameterProfileList_T
class TCAParameterProfileList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/TCAParameterProfileList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.TCAParameterProfileList_T = TCAParameterProfileList_T
_0_performance._d_TCAParameterProfileList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfile_T:1.0"], 0)
_0_performance._ad_TCAParameterProfileList_T = (omniORB.tcInternal.tv_alias, TCAParameterProfileList_T._NP_RepositoryId, "TCAParameterProfileList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfile_T:1.0"], 0))
_0_performance._tc_TCAParameterProfileList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_TCAParameterProfileList_T)
omniORB.registerType(TCAParameterProfileList_T._NP_RepositoryId, _0_performance._ad_TCAParameterProfileList_T, _0_performance._tc_TCAParameterProfileList_T)
del TCAParameterProfileList_T

# struct PMMeasurement_T
_0_performance.PMMeasurement_T = omniORB.newEmptyClass()
class PMMeasurement_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMMeasurement_T:1.0"

    def __init__(self, pmParameterName, pmLocation, value, unit, intervalStatus):
        self.pmParameterName = pmParameterName
        self.pmLocation = pmLocation
        self.value = value
        self.unit = unit
        self.intervalStatus = intervalStatus

_0_performance.PMMeasurement_T = PMMeasurement_T
_0_performance._d_PMMeasurement_T  = (omniORB.tcInternal.tv_struct, PMMeasurement_T, PMMeasurement_T._NP_RepositoryId, "PMMeasurement_T", "pmParameterName", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"], "pmLocation", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0"], "value", omniORB.tcInternal.tv_float, "unit", (omniORB.tcInternal.tv_string,0), "intervalStatus", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_PMMeasurement_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMMeasurement_T)
omniORB.registerType(PMMeasurement_T._NP_RepositoryId, _0_performance._d_PMMeasurement_T, _0_performance._tc_PMMeasurement_T)
del PMMeasurement_T

# typedef ... PMMeasurementList_T
class PMMeasurementList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMMeasurementList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMMeasurementList_T = PMMeasurementList_T
_0_performance._d_PMMeasurementList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMMeasurement_T:1.0"], 0)
_0_performance._ad_PMMeasurementList_T = (omniORB.tcInternal.tv_alias, PMMeasurementList_T._NP_RepositoryId, "PMMeasurementList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMMeasurement_T:1.0"], 0))
_0_performance._tc_PMMeasurementList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMMeasurementList_T)
omniORB.registerType(PMMeasurementList_T._NP_RepositoryId, _0_performance._ad_PMMeasurementList_T, _0_performance._tc_PMMeasurementList_T)
del PMMeasurementList_T

# struct PMData_T
_0_performance.PMData_T = omniORB.newEmptyClass()
class PMData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMData_T:1.0"

    def __init__(self, tpName, layerRate, granularity, retrievalTime, pmMeasurementList):
        self.tpName = tpName
        self.layerRate = layerRate
        self.granularity = granularity
        self.retrievalTime = retrievalTime
        self.pmMeasurementList = pmMeasurementList

_0_performance.PMData_T = PMData_T
_0_performance._d_PMData_T  = (omniORB.tcInternal.tv_struct, PMData_T, PMData_T._NP_RepositoryId, "PMData_T", "tpName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "layerRate", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], "granularity", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/Granularity_T:1.0"], "retrievalTime", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], "pmMeasurementList", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMMeasurementList_T:1.0"])
_0_performance._tc_PMData_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMData_T)
omniORB.registerType(PMData_T._NP_RepositoryId, _0_performance._d_PMData_T, _0_performance._tc_PMData_T)
del PMData_T

# typedef ... PMDataList_T
class PMDataList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMDataList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMDataList_T = PMDataList_T
_0_performance._d_PMDataList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMData_T:1.0"], 0)
_0_performance._ad_PMDataList_T = (omniORB.tcInternal.tv_alias, PMDataList_T._NP_RepositoryId, "PMDataList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMData_T:1.0"], 0))
_0_performance._tc_PMDataList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMDataList_T)
omniORB.registerType(PMDataList_T._NP_RepositoryId, _0_performance._ad_PMDataList_T, _0_performance._tc_PMDataList_T)
del PMDataList_T

# struct PMTPSelect_T
_0_performance.PMTPSelect_T = omniORB.newEmptyClass()
class PMTPSelect_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMTPSelect_T:1.0"

    def __init__(self, name, layerRateList, pMLocationList, granularityList):
        self.name = name
        self.layerRateList = layerRateList
        self.pMLocationList = pMLocationList
        self.granularityList = granularityList

_0_performance.PMTPSelect_T = PMTPSelect_T
_0_performance._d_PMTPSelect_T  = (omniORB.tcInternal.tv_struct, PMTPSelect_T, PMTPSelect_T._NP_RepositoryId, "PMTPSelect_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "layerRateList", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], "pMLocationList", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMLocationList_T:1.0"], "granularityList", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/GranularityList_T:1.0"])
_0_performance._tc_PMTPSelect_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMTPSelect_T)
omniORB.registerType(PMTPSelect_T._NP_RepositoryId, _0_performance._d_PMTPSelect_T, _0_performance._tc_PMTPSelect_T)
del PMTPSelect_T

# typedef ... PMTPSelectList_T
class PMTPSelectList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMTPSelectList_T = PMTPSelectList_T
_0_performance._d_PMTPSelectList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelect_T:1.0"], 0)
_0_performance._ad_PMTPSelectList_T = (omniORB.tcInternal.tv_alias, PMTPSelectList_T._NP_RepositoryId, "PMTPSelectList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelect_T:1.0"], 0))
_0_performance._tc_PMTPSelectList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMTPSelectList_T)
omniORB.registerType(PMTPSelectList_T._NP_RepositoryId, _0_performance._ad_PMTPSelectList_T, _0_performance._tc_PMTPSelectList_T)
del PMTPSelectList_T

# struct HoldingTime_T
_0_performance.HoldingTime_T = omniORB.newEmptyClass()
class HoldingTime_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/HoldingTime_T:1.0"

    def __init__(self, storeTime24hr, storeTime15min):
        self.storeTime24hr = storeTime24hr
        self.storeTime15min = storeTime15min

_0_performance.HoldingTime_T = HoldingTime_T
_0_performance._d_HoldingTime_T  = (omniORB.tcInternal.tv_struct, HoldingTime_T, HoldingTime_T._NP_RepositoryId, "HoldingTime_T", "storeTime24hr", omniORB.tcInternal.tv_short, "storeTime15min", omniORB.tcInternal.tv_short)
_0_performance._tc_HoldingTime_T = omniORB.tcInternal.createTypeCode(_0_performance._d_HoldingTime_T)
omniORB.registerType(HoldingTime_T._NP_RepositoryId, _0_performance._d_HoldingTime_T, _0_performance._tc_HoldingTime_T)
del HoldingTime_T

# struct TCAParameters_T
_0_performance.TCAParameters_T = omniORB.newEmptyClass()
class TCAParameters_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/TCAParameters_T:1.0"

    def __init__(self, layerRate, granularity, tcaTypeValues):
        self.layerRate = layerRate
        self.granularity = granularity
        self.tcaTypeValues = tcaTypeValues

_0_performance.TCAParameters_T = TCAParameters_T
_0_performance._d_TCAParameters_T  = (omniORB.tcInternal.tv_struct, TCAParameters_T, TCAParameters_T._NP_RepositoryId, "TCAParameters_T", "layerRate", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], "granularity", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/Granularity_T:1.0"], "tcaTypeValues", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThresholdValueList_T:1.0"])
_0_performance._tc_TCAParameters_T = omniORB.tcInternal.createTypeCode(_0_performance._d_TCAParameters_T)
omniORB.registerType(TCAParameters_T._NP_RepositoryId, _0_performance._d_TCAParameters_T, _0_performance._tc_TCAParameters_T)
del TCAParameters_T

# enum AdministrativeState_T
_0_performance.AS_Locked = omniORB.EnumItem("AS_Locked", 0)
_0_performance.AS_Unlocked = omniORB.EnumItem("AS_Unlocked", 1)
_0_performance.AdministrativeState_T = omniORB.Enum("IDL:mtnm.tmforum.org/performance/AdministrativeState_T:1.0", (_0_performance.AS_Locked, _0_performance.AS_Unlocked,))

_0_performance._d_AdministrativeState_T  = (omniORB.tcInternal.tv_enum, _0_performance.AdministrativeState_T._NP_RepositoryId, "AdministrativeState_T", _0_performance.AdministrativeState_T._items)
_0_performance._tc_AdministrativeState_T = omniORB.tcInternal.createTypeCode(_0_performance._d_AdministrativeState_T)
omniORB.registerType(_0_performance.AdministrativeState_T._NP_RepositoryId, _0_performance._d_AdministrativeState_T, _0_performance._tc_AdministrativeState_T)

# struct PMThreshold_T
_0_performance.PMThreshold_T = omniORB.newEmptyClass()
class PMThreshold_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMThreshold_T:1.0"

    def __init__(self, thresholdType, triggerFlag, value, unit):
        self.thresholdType = thresholdType
        self.triggerFlag = triggerFlag
        self.value = value
        self.unit = unit

_0_performance.PMThreshold_T = PMThreshold_T
_0_performance._d_PMThreshold_T  = (omniORB.tcInternal.tv_struct, PMThreshold_T, PMThreshold_T._NP_RepositoryId, "PMThreshold_T", "thresholdType", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThresholdType_T:1.0"], "triggerFlag", omniORB.tcInternal.tv_boolean, "value", omniORB.tcInternal.tv_float, "unit", (omniORB.tcInternal.tv_string,0))
_0_performance._tc_PMThreshold_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMThreshold_T)
omniORB.registerType(PMThreshold_T._NP_RepositoryId, _0_performance._d_PMThreshold_T, _0_performance._tc_PMThreshold_T)
del PMThreshold_T

# typedef ... PMThresholdList_T
class PMThresholdList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMThresholdList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMThresholdList_T = PMThresholdList_T
_0_performance._d_PMThresholdList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThreshold_T:1.0"], 0)
_0_performance._ad_PMThresholdList_T = (omniORB.tcInternal.tv_alias, PMThresholdList_T._NP_RepositoryId, "PMThresholdList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThreshold_T:1.0"], 0))
_0_performance._tc_PMThresholdList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMThresholdList_T)
omniORB.registerType(PMThresholdList_T._NP_RepositoryId, _0_performance._ad_PMThresholdList_T, _0_performance._tc_PMThresholdList_T)
del PMThresholdList_T

# struct PMParameterWithThresholds_T
_0_performance.PMParameterWithThresholds_T = omniORB.newEmptyClass()
class PMParameterWithThresholds_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMParameterWithThresholds_T:1.0"

    def __init__(self, pmParameterName, pmThresholdList):
        self.pmParameterName = pmParameterName
        self.pmThresholdList = pmThresholdList

_0_performance.PMParameterWithThresholds_T = PMParameterWithThresholds_T
_0_performance._d_PMParameterWithThresholds_T  = (omniORB.tcInternal.tv_struct, PMParameterWithThresholds_T, PMParameterWithThresholds_T._NP_RepositoryId, "PMParameterWithThresholds_T", "pmParameterName", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterName_T:1.0"], "pmThresholdList", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMThresholdList_T:1.0"])
_0_performance._tc_PMParameterWithThresholds_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMParameterWithThresholds_T)
omniORB.registerType(PMParameterWithThresholds_T._NP_RepositoryId, _0_performance._d_PMParameterWithThresholds_T, _0_performance._tc_PMParameterWithThresholds_T)
del PMParameterWithThresholds_T

# typedef ... PMParameterWithThresholdsList_T
class PMParameterWithThresholdsList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMParameterWithThresholdsList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMParameterWithThresholdsList_T = PMParameterWithThresholdsList_T
_0_performance._d_PMParameterWithThresholdsList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterWithThresholds_T:1.0"], 0)
_0_performance._ad_PMParameterWithThresholdsList_T = (omniORB.tcInternal.tv_alias, PMParameterWithThresholdsList_T._NP_RepositoryId, "PMParameterWithThresholdsList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterWithThresholds_T:1.0"], 0))
_0_performance._tc_PMParameterWithThresholdsList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMParameterWithThresholdsList_T)
omniORB.registerType(PMParameterWithThresholdsList_T._NP_RepositoryId, _0_performance._ad_PMParameterWithThresholdsList_T, _0_performance._tc_PMParameterWithThresholdsList_T)
del PMParameterWithThresholdsList_T

# struct PMP_T
_0_performance.PMP_T = omniORB.newEmptyClass()
class PMP_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMP_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, pmParameterWithThresholdsList, monitoringState, supervisionState, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.pmParameterWithThresholdsList = pmParameterWithThresholdsList
        self.monitoringState = monitoringState
        self.supervisionState = supervisionState
        self.additionalInfo = additionalInfo

_0_performance.PMP_T = PMP_T
_0_performance._d_PMP_T  = (omniORB.tcInternal.tv_struct, PMP_T, PMP_T._NP_RepositoryId, "PMP_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "pmParameterWithThresholdsList", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterWithThresholdsList_T:1.0"], "monitoringState", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/AdministrativeState_T:1.0"], "supervisionState", omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/AdministrativeState_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_performance._tc_PMP_T = omniORB.tcInternal.createTypeCode(_0_performance._d_PMP_T)
omniORB.registerType(PMP_T._NP_RepositoryId, _0_performance._d_PMP_T, _0_performance._tc_PMP_T)
del PMP_T

# typedef ... PMPList_T
class PMPList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/performance/PMPList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_performance.PMPList_T = PMPList_T
_0_performance._d_PMPList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMP_T:1.0"], 0)
_0_performance._ad_PMPList_T = (omniORB.tcInternal.tv_alias, PMPList_T._NP_RepositoryId, "PMPList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMP_T:1.0"], 0))
_0_performance._tc_PMPList_T = omniORB.tcInternal.createTypeCode(_0_performance._ad_PMPList_T)
omniORB.registerType(PMPList_T._NP_RepositoryId, _0_performance._ad_PMPList_T, _0_performance._tc_PMPList_T)
del PMPList_T

# interface PMDataIterator_I
_0_performance._d_PMDataIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/performance/PMDataIterator_I:1.0", "PMDataIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMDataIterator_I:1.0"] = _0_performance._d_PMDataIterator_I
_0_performance.PMDataIterator_I = omniORB.newEmptyClass()
class PMDataIterator_I :
    _NP_RepositoryId = _0_performance._d_PMDataIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_performance.PMDataIterator_I = PMDataIterator_I
_0_performance._tc_PMDataIterator_I = omniORB.tcInternal.createTypeCode(_0_performance._d_PMDataIterator_I)
omniORB.registerType(PMDataIterator_I._NP_RepositoryId, _0_performance._d_PMDataIterator_I, _0_performance._tc_PMDataIterator_I)

# PMDataIterator_I operations and attributes
PMDataIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMDataList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PMDataIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PMDataIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# PMDataIterator_I object reference
class _objref_PMDataIterator_I (CORBA.Object):
    _NP_RepositoryId = PMDataIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_performance.PMDataIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_performance.PMDataIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_performance.PMDataIterator_I._d_destroy, args)

omniORB.registerObjref(PMDataIterator_I._NP_RepositoryId, _objref_PMDataIterator_I)
_0_performance._objref_PMDataIterator_I = _objref_PMDataIterator_I
del PMDataIterator_I, _objref_PMDataIterator_I

# PMDataIterator_I skeleton
__name__ = "performance__POA"
class PMDataIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_performance.PMDataIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_performance.PMDataIterator_I._d_next_n, "getLength": _0_performance.PMDataIterator_I._d_getLength, "destroy": _0_performance.PMDataIterator_I._d_destroy}

PMDataIterator_I._omni_skeleton = PMDataIterator_I
_0_performance__POA.PMDataIterator_I = PMDataIterator_I
omniORB.registerSkeleton(PMDataIterator_I._NP_RepositoryId, PMDataIterator_I)
del PMDataIterator_I
__name__ = "performance"

# interface PMPIterator_I
_0_performance._d_PMPIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/performance/PMPIterator_I:1.0", "PMPIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMPIterator_I:1.0"] = _0_performance._d_PMPIterator_I
_0_performance.PMPIterator_I = omniORB.newEmptyClass()
class PMPIterator_I :
    _NP_RepositoryId = _0_performance._d_PMPIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_performance.PMPIterator_I = PMPIterator_I
_0_performance._tc_PMPIterator_I = omniORB.tcInternal.createTypeCode(_0_performance._d_PMPIterator_I)
omniORB.registerType(PMPIterator_I._NP_RepositoryId, _0_performance._d_PMPIterator_I, _0_performance._tc_PMPIterator_I)

# PMPIterator_I operations and attributes
PMPIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMPList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PMPIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PMPIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# PMPIterator_I object reference
class _objref_PMPIterator_I (CORBA.Object):
    _NP_RepositoryId = PMPIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_performance.PMPIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_performance.PMPIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_performance.PMPIterator_I._d_destroy, args)

omniORB.registerObjref(PMPIterator_I._NP_RepositoryId, _objref_PMPIterator_I)
_0_performance._objref_PMPIterator_I = _objref_PMPIterator_I
del PMPIterator_I, _objref_PMPIterator_I

# PMPIterator_I skeleton
__name__ = "performance__POA"
class PMPIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_performance.PMPIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_performance.PMPIterator_I._d_next_n, "getLength": _0_performance.PMPIterator_I._d_getLength, "destroy": _0_performance.PMPIterator_I._d_destroy}

PMPIterator_I._omni_skeleton = PMPIterator_I
_0_performance__POA.PMPIterator_I = PMPIterator_I
omniORB.registerSkeleton(PMPIterator_I._NP_RepositoryId, PMPIterator_I)
del PMPIterator_I
__name__ = "performance"

# interface TCAParameterProfileIterator_I
_0_performance._d_TCAParameterProfileIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/performance/TCAParameterProfileIterator_I:1.0", "TCAParameterProfileIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfileIterator_I:1.0"] = _0_performance._d_TCAParameterProfileIterator_I
_0_performance.TCAParameterProfileIterator_I = omniORB.newEmptyClass()
class TCAParameterProfileIterator_I :
    _NP_RepositoryId = _0_performance._d_TCAParameterProfileIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_performance.TCAParameterProfileIterator_I = TCAParameterProfileIterator_I
_0_performance._tc_TCAParameterProfileIterator_I = omniORB.tcInternal.createTypeCode(_0_performance._d_TCAParameterProfileIterator_I)
omniORB.registerType(TCAParameterProfileIterator_I._NP_RepositoryId, _0_performance._d_TCAParameterProfileIterator_I, _0_performance._tc_TCAParameterProfileIterator_I)

# TCAParameterProfileIterator_I operations and attributes
TCAParameterProfileIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfileList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TCAParameterProfileIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TCAParameterProfileIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# TCAParameterProfileIterator_I object reference
class _objref_TCAParameterProfileIterator_I (CORBA.Object):
    _NP_RepositoryId = TCAParameterProfileIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_performance.TCAParameterProfileIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_performance.TCAParameterProfileIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_performance.TCAParameterProfileIterator_I._d_destroy, args)

omniORB.registerObjref(TCAParameterProfileIterator_I._NP_RepositoryId, _objref_TCAParameterProfileIterator_I)
_0_performance._objref_TCAParameterProfileIterator_I = _objref_TCAParameterProfileIterator_I
del TCAParameterProfileIterator_I, _objref_TCAParameterProfileIterator_I

# TCAParameterProfileIterator_I skeleton
__name__ = "performance__POA"
class TCAParameterProfileIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_performance.TCAParameterProfileIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_performance.TCAParameterProfileIterator_I._d_next_n, "getLength": _0_performance.TCAParameterProfileIterator_I._d_getLength, "destroy": _0_performance.TCAParameterProfileIterator_I._d_destroy}

TCAParameterProfileIterator_I._omni_skeleton = TCAParameterProfileIterator_I
_0_performance__POA.TCAParameterProfileIterator_I = TCAParameterProfileIterator_I
omniORB.registerSkeleton(TCAParameterProfileIterator_I._NP_RepositoryId, TCAParameterProfileIterator_I)
del TCAParameterProfileIterator_I
__name__ = "performance"

# interface PerformanceManagementMgr_I
_0_performance._d_PerformanceManagementMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/performance/PerformanceManagementMgr_I:1.0", "PerformanceManagementMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PerformanceManagementMgr_I:1.0"] = _0_performance._d_PerformanceManagementMgr_I
_0_performance.PerformanceManagementMgr_I = omniORB.newEmptyClass()
class PerformanceManagementMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_performance._d_PerformanceManagementMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_performance.PerformanceManagementMgr_I = PerformanceManagementMgr_I
_0_performance._tc_PerformanceManagementMgr_I = omniORB.tcInternal.createTypeCode(_0_performance._d_PerformanceManagementMgr_I)
omniORB.registerType(PerformanceManagementMgr_I._NP_RepositoryId, _0_performance._d_PerformanceManagementMgr_I, _0_performance._tc_PerformanceManagementMgr_I)

# PerformanceManagementMgr_I operations and attributes
PerformanceManagementMgr_I._d_getMEPMcapabilities = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_disablePMData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_enablePMData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_clearPMData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getHoldingTime = ((), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/HoldingTime_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getTCATPParameter = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/Granularity_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameters_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getHistoryPMData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/Destination_T:1.0"], (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterNameList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], omniORB.tcInternal.tv_boolean), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getAllCurrentPMData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterNameList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMDataIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_setTCATPParameter = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameters_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameters_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_enableTCA = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_disableTCA = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getProfileAssociatedTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_createTCAParameterProfile = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfile_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_deleteTCAParameterProfile = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getTCAParameterProfile = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfile_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_setTCAParameterProfile = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfile_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getAllTCAParameterProfileNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getTPHistoryPMData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterNameList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMDataIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getAllPMPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMPList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMPIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getAllPMPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_setTCAParameterProfilePointer = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"]), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getAllTCAParameterProfiles = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfileList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/TCAParameterProfileIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
PerformanceManagementMgr_I._d_getHistoryPMDataByPull = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMTPSelectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/performance/PMParameterNameList_T:1.0"]), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# PerformanceManagementMgr_I object reference
class _objref_PerformanceManagementMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = PerformanceManagementMgr_I._NP_RepositoryId

    def __init__(self, obj):
        _0_common._objref_Common_I.__init__(self, obj)

    def getMEPMcapabilities(self, *args):
        return self._obj.invoke("getMEPMcapabilities", _0_performance.PerformanceManagementMgr_I._d_getMEPMcapabilities, args)

    def disablePMData(self, *args):
        return self._obj.invoke("disablePMData", _0_performance.PerformanceManagementMgr_I._d_disablePMData, args)

    def enablePMData(self, *args):
        return self._obj.invoke("enablePMData", _0_performance.PerformanceManagementMgr_I._d_enablePMData, args)

    def clearPMData(self, *args):
        return self._obj.invoke("clearPMData", _0_performance.PerformanceManagementMgr_I._d_clearPMData, args)

    def getHoldingTime(self, *args):
        return self._obj.invoke("getHoldingTime", _0_performance.PerformanceManagementMgr_I._d_getHoldingTime, args)

    def getTCATPParameter(self, *args):
        return self._obj.invoke("getTCATPParameter", _0_performance.PerformanceManagementMgr_I._d_getTCATPParameter, args)

    def getHistoryPMData(self, *args):
        return self._obj.invoke("getHistoryPMData", _0_performance.PerformanceManagementMgr_I._d_getHistoryPMData, args)

    def getAllCurrentPMData(self, *args):
        return self._obj.invoke("getAllCurrentPMData", _0_performance.PerformanceManagementMgr_I._d_getAllCurrentPMData, args)

    def setTCATPParameter(self, *args):
        return self._obj.invoke("setTCATPParameter", _0_performance.PerformanceManagementMgr_I._d_setTCATPParameter, args)

    def enableTCA(self, *args):
        return self._obj.invoke("enableTCA", _0_performance.PerformanceManagementMgr_I._d_enableTCA, args)

    def disableTCA(self, *args):
        return self._obj.invoke("disableTCA", _0_performance.PerformanceManagementMgr_I._d_disableTCA, args)

    def getProfileAssociatedTPs(self, *args):
        return self._obj.invoke("getProfileAssociatedTPs", _0_performance.PerformanceManagementMgr_I._d_getProfileAssociatedTPs, args)

    def createTCAParameterProfile(self, *args):
        return self._obj.invoke("createTCAParameterProfile", _0_performance.PerformanceManagementMgr_I._d_createTCAParameterProfile, args)

    def deleteTCAParameterProfile(self, *args):
        return self._obj.invoke("deleteTCAParameterProfile", _0_performance.PerformanceManagementMgr_I._d_deleteTCAParameterProfile, args)

    def getTCAParameterProfile(self, *args):
        return self._obj.invoke("getTCAParameterProfile", _0_performance.PerformanceManagementMgr_I._d_getTCAParameterProfile, args)

    def setTCAParameterProfile(self, *args):
        return self._obj.invoke("setTCAParameterProfile", _0_performance.PerformanceManagementMgr_I._d_setTCAParameterProfile, args)

    def getAllTCAParameterProfileNames(self, *args):
        return self._obj.invoke("getAllTCAParameterProfileNames", _0_performance.PerformanceManagementMgr_I._d_getAllTCAParameterProfileNames, args)

    def getTPHistoryPMData(self, *args):
        return self._obj.invoke("getTPHistoryPMData", _0_performance.PerformanceManagementMgr_I._d_getTPHistoryPMData, args)

    def getAllPMPs(self, *args):
        return self._obj.invoke("getAllPMPs", _0_performance.PerformanceManagementMgr_I._d_getAllPMPs, args)

    def getAllPMPNames(self, *args):
        return self._obj.invoke("getAllPMPNames", _0_performance.PerformanceManagementMgr_I._d_getAllPMPNames, args)

    def setTCAParameterProfilePointer(self, *args):
        return self._obj.invoke("setTCAParameterProfilePointer", _0_performance.PerformanceManagementMgr_I._d_setTCAParameterProfilePointer, args)

    def getAllTCAParameterProfiles(self, *args):
        return self._obj.invoke("getAllTCAParameterProfiles", _0_performance.PerformanceManagementMgr_I._d_getAllTCAParameterProfiles, args)

    def getHistoryPMDataByPull(self, *args):
        return self._obj.invoke("getHistoryPMDataByPull", _0_performance.PerformanceManagementMgr_I._d_getHistoryPMDataByPull, args)

omniORB.registerObjref(PerformanceManagementMgr_I._NP_RepositoryId, _objref_PerformanceManagementMgr_I)
_0_performance._objref_PerformanceManagementMgr_I = _objref_PerformanceManagementMgr_I
del PerformanceManagementMgr_I, _objref_PerformanceManagementMgr_I

# PerformanceManagementMgr_I skeleton
__name__ = "performance__POA"
class PerformanceManagementMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_performance.PerformanceManagementMgr_I._NP_RepositoryId


    _omni_op_d = {"getMEPMcapabilities": _0_performance.PerformanceManagementMgr_I._d_getMEPMcapabilities, "disablePMData": _0_performance.PerformanceManagementMgr_I._d_disablePMData, "enablePMData": _0_performance.PerformanceManagementMgr_I._d_enablePMData, "clearPMData": _0_performance.PerformanceManagementMgr_I._d_clearPMData, "getHoldingTime": _0_performance.PerformanceManagementMgr_I._d_getHoldingTime, "getTCATPParameter": _0_performance.PerformanceManagementMgr_I._d_getTCATPParameter, "getHistoryPMData": _0_performance.PerformanceManagementMgr_I._d_getHistoryPMData, "getAllCurrentPMData": _0_performance.PerformanceManagementMgr_I._d_getAllCurrentPMData, "setTCATPParameter": _0_performance.PerformanceManagementMgr_I._d_setTCATPParameter, "enableTCA": _0_performance.PerformanceManagementMgr_I._d_enableTCA, "disableTCA": _0_performance.PerformanceManagementMgr_I._d_disableTCA, "getProfileAssociatedTPs": _0_performance.PerformanceManagementMgr_I._d_getProfileAssociatedTPs, "createTCAParameterProfile": _0_performance.PerformanceManagementMgr_I._d_createTCAParameterProfile, "deleteTCAParameterProfile": _0_performance.PerformanceManagementMgr_I._d_deleteTCAParameterProfile, "getTCAParameterProfile": _0_performance.PerformanceManagementMgr_I._d_getTCAParameterProfile, "setTCAParameterProfile": _0_performance.PerformanceManagementMgr_I._d_setTCAParameterProfile, "getAllTCAParameterProfileNames": _0_performance.PerformanceManagementMgr_I._d_getAllTCAParameterProfileNames, "getTPHistoryPMData": _0_performance.PerformanceManagementMgr_I._d_getTPHistoryPMData, "getAllPMPs": _0_performance.PerformanceManagementMgr_I._d_getAllPMPs, "getAllPMPNames": _0_performance.PerformanceManagementMgr_I._d_getAllPMPNames, "setTCAParameterProfilePointer": _0_performance.PerformanceManagementMgr_I._d_setTCAParameterProfilePointer, "getAllTCAParameterProfiles": _0_performance.PerformanceManagementMgr_I._d_getAllTCAParameterProfiles, "getHistoryPMDataByPull": _0_performance.PerformanceManagementMgr_I._d_getHistoryPMDataByPull}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

PerformanceManagementMgr_I._omni_skeleton = PerformanceManagementMgr_I
_0_performance__POA.PerformanceManagementMgr_I = PerformanceManagementMgr_I
omniORB.registerSkeleton(PerformanceManagementMgr_I._NP_RepositoryId, PerformanceManagementMgr_I)
del PerformanceManagementMgr_I
__name__ = "performance"

#
# End of module "performance"
#
__name__ = "performance_idl"

_exported_modules = ( "performance", )

# The end.
