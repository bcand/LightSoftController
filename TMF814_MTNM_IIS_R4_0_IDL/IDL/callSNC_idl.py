# Python stubs generated by omniidl from callSNC.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "mLSNPP.idl"
import mLSNPP_idl
_0_mLSNPP = omniORB.openModule("mLSNPP")
_0_mLSNPP__POA = omniORB.openModule("mLSNPP__POA")

# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

# #include "mLSNPPLink.idl"
import mLSNPPLink_idl
_0_mLSNPPLink = omniORB.openModule("mLSNPPLink")
_0_mLSNPPLink__POA = omniORB.openModule("mLSNPPLink__POA")

#
# Start of module "callSNC"
#
__name__ = "callSNC"
_0_callSNC = omniORB.openModule("callSNC", r"callSNC.idl")
_0_callSNC__POA = omniORB.openModule("callSNC__POA", r"callSNC.idl")


# typedef ... CallState_T
class CallState_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallState_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.CallState_T = CallState_T
_0_callSNC._d_CallState_T  = (omniORB.tcInternal.tv_string,0)
_0_callSNC._ad_CallState_T = (omniORB.tcInternal.tv_alias, CallState_T._NP_RepositoryId, "CallState_T", (omniORB.tcInternal.tv_string,0))
_0_callSNC._tc_CallState_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_CallState_T)
omniORB.registerType(CallState_T._NP_RepositoryId, _0_callSNC._ad_CallState_T, _0_callSNC._tc_CallState_T)
del CallState_T

# struct CallEnd_T
_0_callSNC.CallEnd_T = omniORB.newEmptyClass()
class CallEnd_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallEnd_T:1.0"

    def __init__(self, tNANameOrGroupTNAName, sNPPid, sNPid, tpName):
        self.tNANameOrGroupTNAName = tNANameOrGroupTNAName
        self.sNPPid = sNPPid
        self.sNPid = sNPid
        self.tpName = tpName

_0_callSNC.CallEnd_T = CallEnd_T
_0_callSNC._d_CallEnd_T  = (omniORB.tcInternal.tv_struct, CallEnd_T, CallEnd_T._NP_RepositoryId, "CallEnd_T", "tNANameOrGroupTNAName", omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPP/TNAName_T:1.0"], "sNPPid", (omniORB.tcInternal.tv_string,0), "sNPid", (omniORB.tcInternal.tv_string,0), "tpName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"])
_0_callSNC._tc_CallEnd_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallEnd_T)
omniORB.registerType(CallEnd_T._NP_RepositoryId, _0_callSNC._d_CallEnd_T, _0_callSNC._tc_CallEnd_T)
del CallEnd_T

# struct CallParameterProfile_T
_0_callSNC.CallParameterProfile_T = omniORB.newEmptyClass()
class CallParameterProfile_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallParameterProfile_T:1.0"

    def __init__(self, severelyDegradedThreshold, degradedTreshold, classOfService, classOfServiceParameters):
        self.severelyDegradedThreshold = severelyDegradedThreshold
        self.degradedTreshold = degradedTreshold
        self.classOfService = classOfService
        self.classOfServiceParameters = classOfServiceParameters

_0_callSNC.CallParameterProfile_T = CallParameterProfile_T
_0_callSNC._d_CallParameterProfile_T  = (omniORB.tcInternal.tv_struct, CallParameterProfile_T, CallParameterProfile_T._NP_RepositoryId, "CallParameterProfile_T", "severelyDegradedThreshold", (omniORB.tcInternal.tv_string,0), "degradedTreshold", (omniORB.tcInternal.tv_string,0), "classOfService", (omniORB.tcInternal.tv_string,0), "classOfServiceParameters", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_callSNC._tc_CallParameterProfile_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallParameterProfile_T)
omniORB.registerType(CallParameterProfile_T._NP_RepositoryId, _0_callSNC._d_CallParameterProfile_T, _0_callSNC._tc_CallParameterProfile_T)
del CallParameterProfile_T

# typedef ... LevelOfEffort_T
class LevelOfEffort_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/LevelOfEffort_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.LevelOfEffort_T = LevelOfEffort_T
_0_callSNC._d_LevelOfEffort_T  = (omniORB.tcInternal.tv_string,0)
_0_callSNC._ad_LevelOfEffort_T = (omniORB.tcInternal.tv_alias, LevelOfEffort_T._NP_RepositoryId, "LevelOfEffort_T", (omniORB.tcInternal.tv_string,0))
_0_callSNC._tc_LevelOfEffort_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_LevelOfEffort_T)
omniORB.registerType(LevelOfEffort_T._NP_RepositoryId, _0_callSNC._ad_LevelOfEffort_T, _0_callSNC._tc_LevelOfEffort_T)
del LevelOfEffort_T

# struct RouteGroupInfo_T
_0_callSNC.RouteGroupInfo_T = omniORB.newEmptyClass()
class RouteGroupInfo_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/RouteGroupInfo_T:1.0"

    def __init__(self, sNCname, routeGroupLabel):
        self.sNCname = sNCname
        self.routeGroupLabel = routeGroupLabel

_0_callSNC.RouteGroupInfo_T = RouteGroupInfo_T
_0_callSNC._d_RouteGroupInfo_T  = (omniORB.tcInternal.tv_struct, RouteGroupInfo_T, RouteGroupInfo_T._NP_RepositoryId, "RouteGroupInfo_T", "sNCname", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "routeGroupLabel", (omniORB.tcInternal.tv_string,0))
_0_callSNC._tc_RouteGroupInfo_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_RouteGroupInfo_T)
omniORB.registerType(RouteGroupInfo_T._NP_RepositoryId, _0_callSNC._d_RouteGroupInfo_T, _0_callSNC._tc_RouteGroupInfo_T)
del RouteGroupInfo_T

# typedef ... RouteGroupInfoList_T
class RouteGroupInfoList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/RouteGroupInfoList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.RouteGroupInfoList_T = RouteGroupInfoList_T
_0_callSNC._d_RouteGroupInfoList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/RouteGroupInfo_T:1.0"], 0)
_0_callSNC._ad_RouteGroupInfoList_T = (omniORB.tcInternal.tv_alias, RouteGroupInfoList_T._NP_RepositoryId, "RouteGroupInfoList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/RouteGroupInfo_T:1.0"], 0))
_0_callSNC._tc_RouteGroupInfoList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_RouteGroupInfoList_T)
omniORB.registerType(RouteGroupInfoList_T._NP_RepositoryId, _0_callSNC._ad_RouteGroupInfoList_T, _0_callSNC._tc_RouteGroupInfoList_T)
del RouteGroupInfoList_T

# struct Diversity_T
_0_callSNC.Diversity_T = omniORB.newEmptyClass()
class Diversity_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/Diversity_T:1.0"

    def __init__(self, coroutingLevelOfEffort, nodeDiversityLevelOfEffort, linkDiversityLevelOfEffort, nodeSRGType, linkSRGType):
        self.coroutingLevelOfEffort = coroutingLevelOfEffort
        self.nodeDiversityLevelOfEffort = nodeDiversityLevelOfEffort
        self.linkDiversityLevelOfEffort = linkDiversityLevelOfEffort
        self.nodeSRGType = nodeSRGType
        self.linkSRGType = linkSRGType

_0_callSNC.Diversity_T = Diversity_T
_0_callSNC._d_Diversity_T  = (omniORB.tcInternal.tv_struct, Diversity_T, Diversity_T._NP_RepositoryId, "Diversity_T", "coroutingLevelOfEffort", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/LevelOfEffort_T:1.0"], "nodeDiversityLevelOfEffort", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/LevelOfEffort_T:1.0"], "linkDiversityLevelOfEffort", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/LevelOfEffort_T:1.0"], "nodeSRGType", (omniORB.tcInternal.tv_string,0), "linkSRGType", (omniORB.tcInternal.tv_string,0))
_0_callSNC._tc_Diversity_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_Diversity_T)
omniORB.registerType(Diversity_T._NP_RepositoryId, _0_callSNC._d_Diversity_T, _0_callSNC._tc_Diversity_T)
del Diversity_T

# struct SharedResource_T
_0_callSNC.SharedResource_T = omniORB.newEmptyClass()
class SharedResource_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/SharedResource_T:1.0"

    def __init__(self, name, connectionNameList):
        self.name = name
        self.connectionNameList = connectionNameList

_0_callSNC.SharedResource_T = SharedResource_T
_0_callSNC._d_SharedResource_T  = (omniORB.tcInternal.tv_struct, SharedResource_T, SharedResource_T._NP_RepositoryId, "SharedResource_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "connectionNameList", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"])
_0_callSNC._tc_SharedResource_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_SharedResource_T)
omniORB.registerType(SharedResource_T._NP_RepositoryId, _0_callSNC._d_SharedResource_T, _0_callSNC._tc_SharedResource_T)
del SharedResource_T

# typedef ... SharedResourceList_T
class SharedResourceList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/SharedResourceList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.SharedResourceList_T = SharedResourceList_T
_0_callSNC._d_SharedResourceList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/SharedResource_T:1.0"], 0)
_0_callSNC._ad_SharedResourceList_T = (omniORB.tcInternal.tv_alias, SharedResourceList_T._NP_RepositoryId, "SharedResourceList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/SharedResource_T:1.0"], 0))
_0_callSNC._tc_SharedResourceList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_SharedResourceList_T)
omniORB.registerType(SharedResourceList_T._NP_RepositoryId, _0_callSNC._ad_SharedResourceList_T, _0_callSNC._tc_SharedResourceList_T)
del SharedResourceList_T

# struct DiversityInfo_T
_0_callSNC.DiversityInfo_T = omniORB.newEmptyClass()
class DiversityInfo_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/DiversityInfo_T:1.0"

    def __init__(self, sRGType, sharedResourceList):
        self.sRGType = sRGType
        self.sharedResourceList = sharedResourceList

_0_callSNC.DiversityInfo_T = DiversityInfo_T
_0_callSNC._d_DiversityInfo_T  = (omniORB.tcInternal.tv_struct, DiversityInfo_T, DiversityInfo_T._NP_RepositoryId, "DiversityInfo_T", "sRGType", (omniORB.tcInternal.tv_string,0), "sharedResourceList", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/SharedResourceList_T:1.0"])
_0_callSNC._tc_DiversityInfo_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_DiversityInfo_T)
omniORB.registerType(DiversityInfo_T._NP_RepositoryId, _0_callSNC._d_DiversityInfo_T, _0_callSNC._tc_DiversityInfo_T)
del DiversityInfo_T

# typedef ... DiversityInfoList_T
class DiversityInfoList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/DiversityInfoList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.DiversityInfoList_T = DiversityInfoList_T
_0_callSNC._d_DiversityInfoList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/DiversityInfo_T:1.0"], 0)
_0_callSNC._ad_DiversityInfoList_T = (omniORB.tcInternal.tv_alias, DiversityInfoList_T._NP_RepositoryId, "DiversityInfoList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/DiversityInfo_T:1.0"], 0))
_0_callSNC._tc_DiversityInfoList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_DiversityInfoList_T)
omniORB.registerType(DiversityInfoList_T._NP_RepositoryId, _0_callSNC._ad_DiversityInfoList_T, _0_callSNC._tc_DiversityInfoList_T)
del DiversityInfoList_T

# struct CallCreateData_T
_0_callSNC.CallCreateData_T = omniORB.newEmptyClass()
class CallCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallCreateData_T:1.0"

    def __init__(self, callName, userLabel, forceUniqueness, owner, networkAccessDomain, aEnd, zEnd, callParameters, callDiversity, additionalCreationInfo):
        self.callName = callName
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.aEnd = aEnd
        self.zEnd = zEnd
        self.callParameters = callParameters
        self.callDiversity = callDiversity
        self.additionalCreationInfo = additionalCreationInfo

_0_callSNC.CallCreateData_T = CallCreateData_T
_0_callSNC._d_CallCreateData_T  = (omniORB.tcInternal.tv_struct, CallCreateData_T, CallCreateData_T._NP_RepositoryId, "CallCreateData_T", "callName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "aEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallEnd_T:1.0"], "zEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallEnd_T:1.0"], "callParameters", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallParameterProfile_T:1.0"], "callDiversity", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/Diversity_T:1.0"], "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_callSNC._tc_CallCreateData_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallCreateData_T)
omniORB.registerType(CallCreateData_T._NP_RepositoryId, _0_callSNC._d_CallCreateData_T, _0_callSNC._tc_CallCreateData_T)
del CallCreateData_T

# struct Call_T
_0_callSNC.Call_T = omniORB.newEmptyClass()
class Call_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/Call_T:1.0"

    def __init__(self, callName, userLabel, owner, networkAccessDomain, nativeEMSName, callId, callState, aEnd, zEnd, callParameters, callDiversity, diversitySynthesis, linkDiversityViolations, nodeDiversityViolations, linkPartialDiversityList, nodePartialDiversityList, callAdditionalInfo):
        self.callName = callName
        self.userLabel = userLabel
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.nativeEMSName = nativeEMSName
        self.callId = callId
        self.callState = callState
        self.aEnd = aEnd
        self.zEnd = zEnd
        self.callParameters = callParameters
        self.callDiversity = callDiversity
        self.diversitySynthesis = diversitySynthesis
        self.linkDiversityViolations = linkDiversityViolations
        self.nodeDiversityViolations = nodeDiversityViolations
        self.linkPartialDiversityList = linkPartialDiversityList
        self.nodePartialDiversityList = nodePartialDiversityList
        self.callAdditionalInfo = callAdditionalInfo

_0_callSNC.Call_T = Call_T
_0_callSNC._d_Call_T  = (omniORB.tcInternal.tv_struct, Call_T, Call_T._NP_RepositoryId, "Call_T", "callName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "callId", (omniORB.tcInternal.tv_string,0), "callState", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallState_T:1.0"], "aEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallEnd_T:1.0"], "zEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallEnd_T:1.0"], "callParameters", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallParameterProfile_T:1.0"], "callDiversity", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/Diversity_T:1.0"], "diversitySynthesis", (omniORB.tcInternal.tv_string,0), "linkDiversityViolations", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/DiversityInfo_T:1.0"], "nodeDiversityViolations", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/DiversityInfo_T:1.0"], "linkPartialDiversityList", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/DiversityInfoList_T:1.0"], "nodePartialDiversityList", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/DiversityInfoList_T:1.0"], "callAdditionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_callSNC._tc_Call_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_Call_T)
omniORB.registerType(Call_T._NP_RepositoryId, _0_callSNC._d_Call_T, _0_callSNC._tc_Call_T)
del Call_T

# struct CallModifyData_T
_0_callSNC.CallModifyData_T = omniORB.newEmptyClass()
class CallModifyData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallModifyData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, networkAccessDomain, additionalModificationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.additionalModificationInfo = additionalModificationInfo

_0_callSNC.CallModifyData_T = CallModifyData_T
_0_callSNC._d_CallModifyData_T  = (omniORB.tcInternal.tv_struct, CallModifyData_T, CallModifyData_T._NP_RepositoryId, "CallModifyData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "additionalModificationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_callSNC._tc_CallModifyData_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallModifyData_T)
omniORB.registerType(CallModifyData_T._NP_RepositoryId, _0_callSNC._d_CallModifyData_T, _0_callSNC._tc_CallModifyData_T)
del CallModifyData_T

# typedef ... CallId_T
class CallId_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallId_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.CallId_T = CallId_T
_0_callSNC._d_CallId_T  = (omniORB.tcInternal.tv_string,0)
_0_callSNC._ad_CallId_T = (omniORB.tcInternal.tv_alias, CallId_T._NP_RepositoryId, "CallId_T", (omniORB.tcInternal.tv_string,0))
_0_callSNC._tc_CallId_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_CallId_T)
omniORB.registerType(CallId_T._NP_RepositoryId, _0_callSNC._ad_CallId_T, _0_callSNC._tc_CallId_T)
del CallId_T

# typedef ... CallIdList_T
class CallIdList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallIdList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.CallIdList_T = CallIdList_T
_0_callSNC._d_CallIdList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallId_T:1.0"], 0)
_0_callSNC._ad_CallIdList_T = (omniORB.tcInternal.tv_alias, CallIdList_T._NP_RepositoryId, "CallIdList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallId_T:1.0"], 0))
_0_callSNC._tc_CallIdList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_CallIdList_T)
omniORB.registerType(CallIdList_T._NP_RepositoryId, _0_callSNC._ad_CallIdList_T, _0_callSNC._tc_CallIdList_T)
del CallIdList_T

# struct ConnectionAndSupportingSNCs_T
_0_callSNC.ConnectionAndSupportingSNCs_T = omniORB.newEmptyClass()
class ConnectionAndSupportingSNCs_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/ConnectionAndSupportingSNCs_T:1.0"

    def __init__(self, topLevelConnection, sNCList):
        self.topLevelConnection = topLevelConnection
        self.sNCList = sNCList

_0_callSNC.ConnectionAndSupportingSNCs_T = ConnectionAndSupportingSNCs_T
_0_callSNC._d_ConnectionAndSupportingSNCs_T  = (omniORB.tcInternal.tv_struct, ConnectionAndSupportingSNCs_T, ConnectionAndSupportingSNCs_T._NP_RepositoryId, "ConnectionAndSupportingSNCs_T", "topLevelConnection", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], "sNCList", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"])
_0_callSNC._tc_ConnectionAndSupportingSNCs_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_ConnectionAndSupportingSNCs_T)
omniORB.registerType(ConnectionAndSupportingSNCs_T._NP_RepositoryId, _0_callSNC._d_ConnectionAndSupportingSNCs_T, _0_callSNC._tc_ConnectionAndSupportingSNCs_T)
del ConnectionAndSupportingSNCs_T

# typedef ... ConnectionsAndSupportingSNCsList_T
class ConnectionsAndSupportingSNCsList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/ConnectionsAndSupportingSNCsList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.ConnectionsAndSupportingSNCsList_T = ConnectionsAndSupportingSNCsList_T
_0_callSNC._d_ConnectionsAndSupportingSNCsList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/ConnectionAndSupportingSNCs_T:1.0"], 0)
_0_callSNC._ad_ConnectionsAndSupportingSNCsList_T = (omniORB.tcInternal.tv_alias, ConnectionsAndSupportingSNCsList_T._NP_RepositoryId, "ConnectionsAndSupportingSNCsList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/ConnectionAndSupportingSNCs_T:1.0"], 0))
_0_callSNC._tc_ConnectionsAndSupportingSNCsList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_ConnectionsAndSupportingSNCsList_T)
omniORB.registerType(ConnectionsAndSupportingSNCsList_T._NP_RepositoryId, _0_callSNC._ad_ConnectionsAndSupportingSNCsList_T, _0_callSNC._tc_ConnectionsAndSupportingSNCsList_T)
del ConnectionsAndSupportingSNCsList_T

# struct CallAndTopLevelConnectionsAndSNCs_T
_0_callSNC.CallAndTopLevelConnectionsAndSNCs_T = omniORB.newEmptyClass()
class CallAndTopLevelConnectionsAndSNCs_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCs_T:1.0"

    def __init__(self, theCall, topLevelConnectionsAndSNCsList):
        self.theCall = theCall
        self.topLevelConnectionsAndSNCsList = topLevelConnectionsAndSNCsList

_0_callSNC.CallAndTopLevelConnectionsAndSNCs_T = CallAndTopLevelConnectionsAndSNCs_T
_0_callSNC._d_CallAndTopLevelConnectionsAndSNCs_T  = (omniORB.tcInternal.tv_struct, CallAndTopLevelConnectionsAndSNCs_T, CallAndTopLevelConnectionsAndSNCs_T._NP_RepositoryId, "CallAndTopLevelConnectionsAndSNCs_T", "theCall", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/Call_T:1.0"], "topLevelConnectionsAndSNCsList", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/ConnectionsAndSupportingSNCsList_T:1.0"])
_0_callSNC._tc_CallAndTopLevelConnectionsAndSNCs_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallAndTopLevelConnectionsAndSNCs_T)
omniORB.registerType(CallAndTopLevelConnectionsAndSNCs_T._NP_RepositoryId, _0_callSNC._d_CallAndTopLevelConnectionsAndSNCs_T, _0_callSNC._tc_CallAndTopLevelConnectionsAndSNCs_T)
del CallAndTopLevelConnectionsAndSNCs_T

# struct CallAndTopLevelConnections_T
_0_callSNC.CallAndTopLevelConnections_T = omniORB.newEmptyClass()
class CallAndTopLevelConnections_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnections_T:1.0"

    def __init__(self, theCall, topLevelConnectionsList):
        self.theCall = theCall
        self.topLevelConnectionsList = topLevelConnectionsList

_0_callSNC.CallAndTopLevelConnections_T = CallAndTopLevelConnections_T
_0_callSNC._d_CallAndTopLevelConnections_T  = (omniORB.tcInternal.tv_struct, CallAndTopLevelConnections_T, CallAndTopLevelConnections_T._NP_RepositoryId, "CallAndTopLevelConnections_T", "theCall", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/Call_T:1.0"], "topLevelConnectionsList", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"])
_0_callSNC._tc_CallAndTopLevelConnections_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallAndTopLevelConnections_T)
omniORB.registerType(CallAndTopLevelConnections_T._NP_RepositoryId, _0_callSNC._d_CallAndTopLevelConnections_T, _0_callSNC._tc_CallAndTopLevelConnections_T)
del CallAndTopLevelConnections_T

# typedef ... CallAndTopLevelConnectionsList_T
class CallAndTopLevelConnectionsList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.CallAndTopLevelConnectionsList_T = CallAndTopLevelConnectionsList_T
_0_callSNC._d_CallAndTopLevelConnectionsList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnections_T:1.0"], 0)
_0_callSNC._ad_CallAndTopLevelConnectionsList_T = (omniORB.tcInternal.tv_alias, CallAndTopLevelConnectionsList_T._NP_RepositoryId, "CallAndTopLevelConnectionsList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnections_T:1.0"], 0))
_0_callSNC._tc_CallAndTopLevelConnectionsList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_CallAndTopLevelConnectionsList_T)
omniORB.registerType(CallAndTopLevelConnectionsList_T._NP_RepositoryId, _0_callSNC._ad_CallAndTopLevelConnectionsList_T, _0_callSNC._tc_CallAndTopLevelConnectionsList_T)
del CallAndTopLevelConnectionsList_T

# typedef ... CallAndTopLevelConnectionsAndSNCsList_T
class CallAndTopLevelConnectionsAndSNCsList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.CallAndTopLevelConnectionsAndSNCsList_T = CallAndTopLevelConnectionsAndSNCsList_T
_0_callSNC._d_CallAndTopLevelConnectionsAndSNCsList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCs_T:1.0"], 0)
_0_callSNC._ad_CallAndTopLevelConnectionsAndSNCsList_T = (omniORB.tcInternal.tv_alias, CallAndTopLevelConnectionsAndSNCsList_T._NP_RepositoryId, "CallAndTopLevelConnectionsAndSNCsList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCs_T:1.0"], 0))
_0_callSNC._tc_CallAndTopLevelConnectionsAndSNCsList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_CallAndTopLevelConnectionsAndSNCsList_T)
omniORB.registerType(CallAndTopLevelConnectionsAndSNCsList_T._NP_RepositoryId, _0_callSNC._ad_CallAndTopLevelConnectionsAndSNCsList_T, _0_callSNC._tc_CallAndTopLevelConnectionsAndSNCsList_T)
del CallAndTopLevelConnectionsAndSNCsList_T

# typedef ... RouteType_T
class RouteType_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/RouteType_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.RouteType_T = RouteType_T
_0_callSNC._d_RouteType_T  = (omniORB.tcInternal.tv_string,0)
_0_callSNC._ad_RouteType_T = (omniORB.tcInternal.tv_alias, RouteType_T._NP_RepositoryId, "RouteType_T", (omniORB.tcInternal.tv_string,0))
_0_callSNC._tc_RouteType_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_RouteType_T)
omniORB.registerType(RouteType_T._NP_RepositoryId, _0_callSNC._ad_RouteType_T, _0_callSNC._tc_RouteType_T)
del RouteType_T

# struct SNCAndRoute_T
_0_callSNC.SNCAndRoute_T = omniORB.newEmptyClass()
class SNCAndRoute_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/SNCAndRoute_T:1.0"

    def __init__(self, connection, connectionRoutes, edgeMLSNPPLinks, internalMLSNPPLinks, routeType):
        self.connection = connection
        self.connectionRoutes = connectionRoutes
        self.edgeMLSNPPLinks = edgeMLSNPPLinks
        self.internalMLSNPPLinks = internalMLSNPPLinks
        self.routeType = routeType

_0_callSNC.SNCAndRoute_T = SNCAndRoute_T
_0_callSNC._d_SNCAndRoute_T  = (omniORB.tcInternal.tv_struct, SNCAndRoute_T, SNCAndRoute_T._NP_RepositoryId, "SNCAndRoute_T", "connection", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], "connectionRoutes", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteList_T:1.0"], "edgeMLSNPPLinks", omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], "internalMLSNPPLinks", omniORB.typeMapping["IDL:mtnm.tmforum.org/mLSNPPLink/MLSNPPLinkList_T:1.0"], "routeType", omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/RouteType_T:1.0"])
_0_callSNC._tc_SNCAndRoute_T = omniORB.tcInternal.createTypeCode(_0_callSNC._d_SNCAndRoute_T)
omniORB.registerType(SNCAndRoute_T._NP_RepositoryId, _0_callSNC._d_SNCAndRoute_T, _0_callSNC._tc_SNCAndRoute_T)
del SNCAndRoute_T

# typedef ... SNCAndRouteList_T
class SNCAndRouteList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/callSNC/SNCAndRouteList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_callSNC.SNCAndRouteList_T = SNCAndRouteList_T
_0_callSNC._d_SNCAndRouteList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/SNCAndRoute_T:1.0"], 0)
_0_callSNC._ad_SNCAndRouteList_T = (omniORB.tcInternal.tv_alias, SNCAndRouteList_T._NP_RepositoryId, "SNCAndRouteList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/SNCAndRoute_T:1.0"], 0))
_0_callSNC._tc_SNCAndRouteList_T = omniORB.tcInternal.createTypeCode(_0_callSNC._ad_SNCAndRouteList_T)
omniORB.registerType(SNCAndRouteList_T._NP_RepositoryId, _0_callSNC._ad_SNCAndRouteList_T, _0_callSNC._tc_SNCAndRouteList_T)
del SNCAndRouteList_T

# interface CallAndTopLevelConnectionsIterator_I
_0_callSNC._d_CallAndTopLevelConnectionsIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsIterator_I:1.0", "CallAndTopLevelConnectionsIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsIterator_I:1.0"] = _0_callSNC._d_CallAndTopLevelConnectionsIterator_I
_0_callSNC.CallAndTopLevelConnectionsIterator_I = omniORB.newEmptyClass()
class CallAndTopLevelConnectionsIterator_I :
    _NP_RepositoryId = _0_callSNC._d_CallAndTopLevelConnectionsIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_callSNC.CallAndTopLevelConnectionsIterator_I = CallAndTopLevelConnectionsIterator_I
_0_callSNC._tc_CallAndTopLevelConnectionsIterator_I = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallAndTopLevelConnectionsIterator_I)
omniORB.registerType(CallAndTopLevelConnectionsIterator_I._NP_RepositoryId, _0_callSNC._d_CallAndTopLevelConnectionsIterator_I, _0_callSNC._tc_CallAndTopLevelConnectionsIterator_I)

# CallAndTopLevelConnectionsIterator_I operations and attributes
CallAndTopLevelConnectionsIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
CallAndTopLevelConnectionsIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
CallAndTopLevelConnectionsIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# CallAndTopLevelConnectionsIterator_I object reference
class _objref_CallAndTopLevelConnectionsIterator_I (CORBA.Object):
    _NP_RepositoryId = CallAndTopLevelConnectionsIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_callSNC.CallAndTopLevelConnectionsIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_callSNC.CallAndTopLevelConnectionsIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_callSNC.CallAndTopLevelConnectionsIterator_I._d_destroy, args)

omniORB.registerObjref(CallAndTopLevelConnectionsIterator_I._NP_RepositoryId, _objref_CallAndTopLevelConnectionsIterator_I)
_0_callSNC._objref_CallAndTopLevelConnectionsIterator_I = _objref_CallAndTopLevelConnectionsIterator_I
del CallAndTopLevelConnectionsIterator_I, _objref_CallAndTopLevelConnectionsIterator_I

# CallAndTopLevelConnectionsIterator_I skeleton
__name__ = "callSNC__POA"
class CallAndTopLevelConnectionsIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_callSNC.CallAndTopLevelConnectionsIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_callSNC.CallAndTopLevelConnectionsIterator_I._d_next_n, "getLength": _0_callSNC.CallAndTopLevelConnectionsIterator_I._d_getLength, "destroy": _0_callSNC.CallAndTopLevelConnectionsIterator_I._d_destroy}

CallAndTopLevelConnectionsIterator_I._omni_skeleton = CallAndTopLevelConnectionsIterator_I
_0_callSNC__POA.CallAndTopLevelConnectionsIterator_I = CallAndTopLevelConnectionsIterator_I
omniORB.registerSkeleton(CallAndTopLevelConnectionsIterator_I._NP_RepositoryId, CallAndTopLevelConnectionsIterator_I)
del CallAndTopLevelConnectionsIterator_I
__name__ = "callSNC"

# interface CallAndTopLevelConnectionsAndSNCsIterator_I
_0_callSNC._d_CallAndTopLevelConnectionsAndSNCsIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsIterator_I:1.0", "CallAndTopLevelConnectionsAndSNCsIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsIterator_I:1.0"] = _0_callSNC._d_CallAndTopLevelConnectionsAndSNCsIterator_I
_0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I = omniORB.newEmptyClass()
class CallAndTopLevelConnectionsAndSNCsIterator_I :
    _NP_RepositoryId = _0_callSNC._d_CallAndTopLevelConnectionsAndSNCsIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I = CallAndTopLevelConnectionsAndSNCsIterator_I
_0_callSNC._tc_CallAndTopLevelConnectionsAndSNCsIterator_I = omniORB.tcInternal.createTypeCode(_0_callSNC._d_CallAndTopLevelConnectionsAndSNCsIterator_I)
omniORB.registerType(CallAndTopLevelConnectionsAndSNCsIterator_I._NP_RepositoryId, _0_callSNC._d_CallAndTopLevelConnectionsAndSNCsIterator_I, _0_callSNC._tc_CallAndTopLevelConnectionsAndSNCsIterator_I)

# CallAndTopLevelConnectionsAndSNCsIterator_I operations and attributes
CallAndTopLevelConnectionsAndSNCsIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/callSNC/CallAndTopLevelConnectionsAndSNCsList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
CallAndTopLevelConnectionsAndSNCsIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
CallAndTopLevelConnectionsAndSNCsIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# CallAndTopLevelConnectionsAndSNCsIterator_I object reference
class _objref_CallAndTopLevelConnectionsAndSNCsIterator_I (CORBA.Object):
    _NP_RepositoryId = CallAndTopLevelConnectionsAndSNCsIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I._d_destroy, args)

omniORB.registerObjref(CallAndTopLevelConnectionsAndSNCsIterator_I._NP_RepositoryId, _objref_CallAndTopLevelConnectionsAndSNCsIterator_I)
_0_callSNC._objref_CallAndTopLevelConnectionsAndSNCsIterator_I = _objref_CallAndTopLevelConnectionsAndSNCsIterator_I
del CallAndTopLevelConnectionsAndSNCsIterator_I, _objref_CallAndTopLevelConnectionsAndSNCsIterator_I

# CallAndTopLevelConnectionsAndSNCsIterator_I skeleton
__name__ = "callSNC__POA"
class CallAndTopLevelConnectionsAndSNCsIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I._d_next_n, "getLength": _0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I._d_getLength, "destroy": _0_callSNC.CallAndTopLevelConnectionsAndSNCsIterator_I._d_destroy}

CallAndTopLevelConnectionsAndSNCsIterator_I._omni_skeleton = CallAndTopLevelConnectionsAndSNCsIterator_I
_0_callSNC__POA.CallAndTopLevelConnectionsAndSNCsIterator_I = CallAndTopLevelConnectionsAndSNCsIterator_I
omniORB.registerSkeleton(CallAndTopLevelConnectionsAndSNCsIterator_I._NP_RepositoryId, CallAndTopLevelConnectionsAndSNCsIterator_I)
del CallAndTopLevelConnectionsAndSNCsIterator_I
__name__ = "callSNC"

#
# End of module "callSNC"
#
__name__ = "callSNC_idl"

_exported_modules = ( "callSNC", )

# The end.
