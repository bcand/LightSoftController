# Python stubs generated by omniidl from trafficDescriptor.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

#
# Start of module "trafficDescriptor"
#
__name__ = "trafficDescriptor"
_0_trafficDescriptor = omniORB.openModule("trafficDescriptor", r"trafficDescriptor.idl")
_0_trafficDescriptor__POA = omniORB.openModule("trafficDescriptor__POA", r"trafficDescriptor.idl")


# enum ServiceCategory_T
_0_trafficDescriptor.SC_CBR = omniORB.EnumItem("SC_CBR", 0)
_0_trafficDescriptor.SC_VBRRT = omniORB.EnumItem("SC_VBRRT", 1)
_0_trafficDescriptor.SC_VBRNRT = omniORB.EnumItem("SC_VBRNRT", 2)
_0_trafficDescriptor.SC_ABR = omniORB.EnumItem("SC_ABR", 3)
_0_trafficDescriptor.SC_UBR = omniORB.EnumItem("SC_UBR", 4)
_0_trafficDescriptor.SC_GFR = omniORB.EnumItem("SC_GFR", 5)
_0_trafficDescriptor.SC_NA = omniORB.EnumItem("SC_NA", 6)
_0_trafficDescriptor.ServiceCategory_T = omniORB.Enum("IDL:mtnm.tmforum.org/trafficDescriptor/ServiceCategory_T:1.0", (_0_trafficDescriptor.SC_CBR, _0_trafficDescriptor.SC_VBRRT, _0_trafficDescriptor.SC_VBRNRT, _0_trafficDescriptor.SC_ABR, _0_trafficDescriptor.SC_UBR, _0_trafficDescriptor.SC_GFR, _0_trafficDescriptor.SC_NA,))

_0_trafficDescriptor._d_ServiceCategory_T  = (omniORB.tcInternal.tv_enum, _0_trafficDescriptor.ServiceCategory_T._NP_RepositoryId, "ServiceCategory_T", _0_trafficDescriptor.ServiceCategory_T._items)
_0_trafficDescriptor._tc_ServiceCategory_T = omniORB.tcInternal.createTypeCode(_0_trafficDescriptor._d_ServiceCategory_T)
omniORB.registerType(_0_trafficDescriptor.ServiceCategory_T._NP_RepositoryId, _0_trafficDescriptor._d_ServiceCategory_T, _0_trafficDescriptor._tc_ServiceCategory_T)

# typedef ... TrafficParameterList_T
class TrafficParameterList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/trafficDescriptor/TrafficParameterList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_trafficDescriptor.TrafficParameterList_T = TrafficParameterList_T
_0_trafficDescriptor._d_TrafficParameterList_T  = omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]
_0_trafficDescriptor._ad_TrafficParameterList_T = (omniORB.tcInternal.tv_alias, TrafficParameterList_T._NP_RepositoryId, "TrafficParameterList_T", omniORB.typeCodeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"]._d)
_0_trafficDescriptor._tc_TrafficParameterList_T = omniORB.tcInternal.createTypeCode(_0_trafficDescriptor._ad_TrafficParameterList_T)
omniORB.registerType(TrafficParameterList_T._NP_RepositoryId, _0_trafficDescriptor._ad_TrafficParameterList_T, _0_trafficDescriptor._tc_TrafficParameterList_T)
del TrafficParameterList_T

# struct TrafficDescriptor_T
_0_trafficDescriptor.TrafficDescriptor_T = omniORB.newEmptyClass()
class TrafficDescriptor_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptor_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, serviceCategory, trafficParameters, conformanceDefinition, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.serviceCategory = serviceCategory
        self.trafficParameters = trafficParameters
        self.conformanceDefinition = conformanceDefinition
        self.additionalInfo = additionalInfo

_0_trafficDescriptor.TrafficDescriptor_T = TrafficDescriptor_T
_0_trafficDescriptor._d_TrafficDescriptor_T  = (omniORB.tcInternal.tv_struct, TrafficDescriptor_T, TrafficDescriptor_T._NP_RepositoryId, "TrafficDescriptor_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "serviceCategory", omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/ServiceCategory_T:1.0"], "trafficParameters", omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficParameterList_T:1.0"], "conformanceDefinition", (omniORB.tcInternal.tv_string,0), "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_trafficDescriptor._tc_TrafficDescriptor_T = omniORB.tcInternal.createTypeCode(_0_trafficDescriptor._d_TrafficDescriptor_T)
omniORB.registerType(TrafficDescriptor_T._NP_RepositoryId, _0_trafficDescriptor._d_TrafficDescriptor_T, _0_trafficDescriptor._tc_TrafficDescriptor_T)
del TrafficDescriptor_T

# struct TDCreateData_T
_0_trafficDescriptor.TDCreateData_T = omniORB.newEmptyClass()
class TDCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/trafficDescriptor/TDCreateData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, serviceCategory, trafficParameters, conformanceDefinition, additionalInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.serviceCategory = serviceCategory
        self.trafficParameters = trafficParameters
        self.conformanceDefinition = conformanceDefinition
        self.additionalInfo = additionalInfo

_0_trafficDescriptor.TDCreateData_T = TDCreateData_T
_0_trafficDescriptor._d_TDCreateData_T  = (omniORB.tcInternal.tv_struct, TDCreateData_T, TDCreateData_T._NP_RepositoryId, "TDCreateData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "serviceCategory", omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/ServiceCategory_T:1.0"], "trafficParameters", omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficParameterList_T:1.0"], "conformanceDefinition", (omniORB.tcInternal.tv_string,0), "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_trafficDescriptor._tc_TDCreateData_T = omniORB.tcInternal.createTypeCode(_0_trafficDescriptor._d_TDCreateData_T)
omniORB.registerType(TDCreateData_T._NP_RepositoryId, _0_trafficDescriptor._d_TDCreateData_T, _0_trafficDescriptor._tc_TDCreateData_T)
del TDCreateData_T

# typedef ... TrafficDescriptorList_T
class TrafficDescriptorList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_trafficDescriptor.TrafficDescriptorList_T = TrafficDescriptorList_T
_0_trafficDescriptor._d_TrafficDescriptorList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptor_T:1.0"], 0)
_0_trafficDescriptor._ad_TrafficDescriptorList_T = (omniORB.tcInternal.tv_alias, TrafficDescriptorList_T._NP_RepositoryId, "TrafficDescriptorList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptor_T:1.0"], 0))
_0_trafficDescriptor._tc_TrafficDescriptorList_T = omniORB.tcInternal.createTypeCode(_0_trafficDescriptor._ad_TrafficDescriptorList_T)
omniORB.registerType(TrafficDescriptorList_T._NP_RepositoryId, _0_trafficDescriptor._ad_TrafficDescriptorList_T, _0_trafficDescriptor._tc_TrafficDescriptorList_T)
del TrafficDescriptorList_T

# interface TrafficDescriptorIterator_I
_0_trafficDescriptor._d_TrafficDescriptorIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorIterator_I:1.0", "TrafficDescriptorIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorIterator_I:1.0"] = _0_trafficDescriptor._d_TrafficDescriptorIterator_I
_0_trafficDescriptor.TrafficDescriptorIterator_I = omniORB.newEmptyClass()
class TrafficDescriptorIterator_I :
    _NP_RepositoryId = _0_trafficDescriptor._d_TrafficDescriptorIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_trafficDescriptor.TrafficDescriptorIterator_I = TrafficDescriptorIterator_I
_0_trafficDescriptor._tc_TrafficDescriptorIterator_I = omniORB.tcInternal.createTypeCode(_0_trafficDescriptor._d_TrafficDescriptorIterator_I)
omniORB.registerType(TrafficDescriptorIterator_I._NP_RepositoryId, _0_trafficDescriptor._d_TrafficDescriptorIterator_I, _0_trafficDescriptor._tc_TrafficDescriptorIterator_I)

# TrafficDescriptorIterator_I operations and attributes
TrafficDescriptorIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TrafficDescriptorIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TrafficDescriptorIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# TrafficDescriptorIterator_I object reference
class _objref_TrafficDescriptorIterator_I (CORBA.Object):
    _NP_RepositoryId = TrafficDescriptorIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_trafficDescriptor.TrafficDescriptorIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_trafficDescriptor.TrafficDescriptorIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_trafficDescriptor.TrafficDescriptorIterator_I._d_destroy, args)

omniORB.registerObjref(TrafficDescriptorIterator_I._NP_RepositoryId, _objref_TrafficDescriptorIterator_I)
_0_trafficDescriptor._objref_TrafficDescriptorIterator_I = _objref_TrafficDescriptorIterator_I
del TrafficDescriptorIterator_I, _objref_TrafficDescriptorIterator_I

# TrafficDescriptorIterator_I skeleton
__name__ = "trafficDescriptor__POA"
class TrafficDescriptorIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_trafficDescriptor.TrafficDescriptorIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_trafficDescriptor.TrafficDescriptorIterator_I._d_next_n, "getLength": _0_trafficDescriptor.TrafficDescriptorIterator_I._d_getLength, "destroy": _0_trafficDescriptor.TrafficDescriptorIterator_I._d_destroy}

TrafficDescriptorIterator_I._omni_skeleton = TrafficDescriptorIterator_I
_0_trafficDescriptor__POA.TrafficDescriptorIterator_I = TrafficDescriptorIterator_I
omniORB.registerSkeleton(TrafficDescriptorIterator_I._NP_RepositoryId, TrafficDescriptorIterator_I)
del TrafficDescriptorIterator_I
__name__ = "trafficDescriptor"

# interface TrafficDescriptorMgr_I
_0_trafficDescriptor._d_TrafficDescriptorMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorMgr_I:1.0", "TrafficDescriptorMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorMgr_I:1.0"] = _0_trafficDescriptor._d_TrafficDescriptorMgr_I
_0_trafficDescriptor.TrafficDescriptorMgr_I = omniORB.newEmptyClass()
class TrafficDescriptorMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_trafficDescriptor._d_TrafficDescriptorMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_trafficDescriptor.TrafficDescriptorMgr_I = TrafficDescriptorMgr_I
_0_trafficDescriptor._tc_TrafficDescriptorMgr_I = omniORB.tcInternal.createTypeCode(_0_trafficDescriptor._d_TrafficDescriptorMgr_I)
omniORB.registerType(TrafficDescriptorMgr_I._NP_RepositoryId, _0_trafficDescriptor._d_TrafficDescriptorMgr_I, _0_trafficDescriptor._tc_TrafficDescriptorMgr_I)

# TrafficDescriptorMgr_I operations and attributes
TrafficDescriptorMgr_I._d_getAllTrafficDescriptors = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptorIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TrafficDescriptorMgr_I._d_getAllTrafficDescriptorNames = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TrafficDescriptorMgr_I._d_getTrafficDescriptor = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptor_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TrafficDescriptorMgr_I._d_getAssociatedCTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TrafficDescriptorMgr_I._d_createTrafficDescriptor = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TDCreateData_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/trafficDescriptor/TrafficDescriptor_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TrafficDescriptorMgr_I._d_deleteTrafficDescriptor = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# TrafficDescriptorMgr_I object reference
class _objref_TrafficDescriptorMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = TrafficDescriptorMgr_I._NP_RepositoryId

    def __init__(self, obj):
        _0_common._objref_Common_I.__init__(self, obj)

    def getAllTrafficDescriptors(self, *args):
        return self._obj.invoke("getAllTrafficDescriptors", _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getAllTrafficDescriptors, args)

    def getAllTrafficDescriptorNames(self, *args):
        return self._obj.invoke("getAllTrafficDescriptorNames", _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getAllTrafficDescriptorNames, args)

    def getTrafficDescriptor(self, *args):
        return self._obj.invoke("getTrafficDescriptor", _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getTrafficDescriptor, args)

    def getAssociatedCTPs(self, *args):
        return self._obj.invoke("getAssociatedCTPs", _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getAssociatedCTPs, args)

    def createTrafficDescriptor(self, *args):
        return self._obj.invoke("createTrafficDescriptor", _0_trafficDescriptor.TrafficDescriptorMgr_I._d_createTrafficDescriptor, args)

    def deleteTrafficDescriptor(self, *args):
        return self._obj.invoke("deleteTrafficDescriptor", _0_trafficDescriptor.TrafficDescriptorMgr_I._d_deleteTrafficDescriptor, args)

omniORB.registerObjref(TrafficDescriptorMgr_I._NP_RepositoryId, _objref_TrafficDescriptorMgr_I)
_0_trafficDescriptor._objref_TrafficDescriptorMgr_I = _objref_TrafficDescriptorMgr_I
del TrafficDescriptorMgr_I, _objref_TrafficDescriptorMgr_I

# TrafficDescriptorMgr_I skeleton
__name__ = "trafficDescriptor__POA"
class TrafficDescriptorMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_trafficDescriptor.TrafficDescriptorMgr_I._NP_RepositoryId


    _omni_op_d = {"getAllTrafficDescriptors": _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getAllTrafficDescriptors, "getAllTrafficDescriptorNames": _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getAllTrafficDescriptorNames, "getTrafficDescriptor": _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getTrafficDescriptor, "getAssociatedCTPs": _0_trafficDescriptor.TrafficDescriptorMgr_I._d_getAssociatedCTPs, "createTrafficDescriptor": _0_trafficDescriptor.TrafficDescriptorMgr_I._d_createTrafficDescriptor, "deleteTrafficDescriptor": _0_trafficDescriptor.TrafficDescriptorMgr_I._d_deleteTrafficDescriptor}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

TrafficDescriptorMgr_I._omni_skeleton = TrafficDescriptorMgr_I
_0_trafficDescriptor__POA.TrafficDescriptorMgr_I = TrafficDescriptorMgr_I
omniORB.registerSkeleton(TrafficDescriptorMgr_I._NP_RepositoryId, TrafficDescriptorMgr_I)
del TrafficDescriptorMgr_I
__name__ = "trafficDescriptor"

#
# End of module "trafficDescriptor"
#
__name__ = "trafficDescriptor_idl"

_exported_modules = ( "trafficDescriptor", )

# The end.
