# Python stubs generated by omniidl from flowDomain.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")

# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")

# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

# #include "performance.idl"
import performance_idl
_0_performance = omniORB.openModule("performance")
_0_performance__POA = omniORB.openModule("performance__POA")

# #include "flowDomainFragment.idl"
import flowDomainFragment_idl
_0_flowDomainFragment = omniORB.openModule("flowDomainFragment")
_0_flowDomainFragment__POA = omniORB.openModule("flowDomainFragment__POA")

# #include "topologicalLink.idl"
import topologicalLink_idl
_0_topologicalLink = omniORB.openModule("topologicalLink")
_0_topologicalLink__POA = omniORB.openModule("topologicalLink__POA")

#
# Start of module "flowDomain"
#
__name__ = "flowDomain"
_0_flowDomain = omniORB.openModule("flowDomain", r"flowDomain.idl")
_0_flowDomain__POA = omniORB.openModule("flowDomain__POA", r"flowDomain.idl")


# enum ConnectivityState_T
_0_flowDomain.CS_UNKNOWN = omniORB.EnumItem("CS_UNKNOWN", 0)
_0_flowDomain.CS_FULLY_CONNECTED = omniORB.EnumItem("CS_FULLY_CONNECTED", 1)
_0_flowDomain.CS_NOT_FULLY_CONNECTED = omniORB.EnumItem("CS_NOT_FULLY_CONNECTED", 2)
_0_flowDomain.ConnectivityState_T = omniORB.Enum("IDL:mtnm.tmforum.org/flowDomain/ConnectivityState_T:1.0", (_0_flowDomain.CS_UNKNOWN, _0_flowDomain.CS_FULLY_CONNECTED, _0_flowDomain.CS_NOT_FULLY_CONNECTED,))

_0_flowDomain._d_ConnectivityState_T  = (omniORB.tcInternal.tv_enum, _0_flowDomain.ConnectivityState_T._NP_RepositoryId, "ConnectivityState_T", _0_flowDomain.ConnectivityState_T._items)
_0_flowDomain._tc_ConnectivityState_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_ConnectivityState_T)
omniORB.registerType(_0_flowDomain.ConnectivityState_T._NP_RepositoryId, _0_flowDomain._d_ConnectivityState_T, _0_flowDomain._tc_ConnectivityState_T)

# enum ConnectivityRequirement_T
_0_flowDomain.CR_IGNORE = omniORB.EnumItem("CR_IGNORE", 0)
_0_flowDomain.CR_REJECT = omniORB.EnumItem("CR_REJECT", 1)
_0_flowDomain.ConnectivityRequirement_T = omniORB.Enum("IDL:mtnm.tmforum.org/flowDomain/ConnectivityRequirement_T:1.0", (_0_flowDomain.CR_IGNORE, _0_flowDomain.CR_REJECT,))

_0_flowDomain._d_ConnectivityRequirement_T  = (omniORB.tcInternal.tv_enum, _0_flowDomain.ConnectivityRequirement_T._NP_RepositoryId, "ConnectivityRequirement_T", _0_flowDomain.ConnectivityRequirement_T._items)
_0_flowDomain._tc_ConnectivityRequirement_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_ConnectivityRequirement_T)
omniORB.registerType(_0_flowDomain.ConnectivityRequirement_T._NP_RepositoryId, _0_flowDomain._d_ConnectivityRequirement_T, _0_flowDomain._tc_ConnectivityRequirement_T)

# enum CPTP_Role_T
_0_flowDomain.CPTPR_FD_EDGE = omniORB.EnumItem("CPTPR_FD_EDGE", 0)
_0_flowDomain.CPTPR_FD_INTERNAL = omniORB.EnumItem("CPTPR_FD_INTERNAL", 1)
_0_flowDomain.CPTPR_ALL = omniORB.EnumItem("CPTPR_ALL", 2)
_0_flowDomain.CPTP_Role_T = omniORB.Enum("IDL:mtnm.tmforum.org/flowDomain/CPTP_Role_T:1.0", (_0_flowDomain.CPTPR_FD_EDGE, _0_flowDomain.CPTPR_FD_INTERNAL, _0_flowDomain.CPTPR_ALL,))

_0_flowDomain._d_CPTP_Role_T  = (omniORB.tcInternal.tv_enum, _0_flowDomain.CPTP_Role_T._NP_RepositoryId, "CPTP_Role_T", _0_flowDomain.CPTP_Role_T._items)
_0_flowDomain._tc_CPTP_Role_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_CPTP_Role_T)
omniORB.registerType(_0_flowDomain.CPTP_Role_T._NP_RepositoryId, _0_flowDomain._d_CPTP_Role_T, _0_flowDomain._tc_CPTP_Role_T)

# typedef ... FDType_T
class FDType_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/FDType_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomain.FDType_T = FDType_T
_0_flowDomain._d_FDType_T  = (omniORB.tcInternal.tv_string,0)
_0_flowDomain._ad_FDType_T = (omniORB.tcInternal.tv_alias, FDType_T._NP_RepositoryId, "FDType_T", (omniORB.tcInternal.tv_string,0))
_0_flowDomain._tc_FDType_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._ad_FDType_T)
omniORB.registerType(FDType_T._NP_RepositoryId, _0_flowDomain._ad_FDType_T, _0_flowDomain._tc_FDType_T)
del FDType_T

# typedef ... ParameterGroupsList_T
class ParameterGroupsList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/ParameterGroupsList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomain.ParameterGroupsList_T = ParameterGroupsList_T
_0_flowDomain._d_ParameterGroupsList_T  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_flowDomain._ad_ParameterGroupsList_T = (omniORB.tcInternal.tv_alias, ParameterGroupsList_T._NP_RepositoryId, "ParameterGroupsList_T", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_flowDomain._tc_ParameterGroupsList_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._ad_ParameterGroupsList_T)
omniORB.registerType(ParameterGroupsList_T._NP_RepositoryId, _0_flowDomain._ad_ParameterGroupsList_T, _0_flowDomain._tc_ParameterGroupsList_T)
del ParameterGroupsList_T

# struct FlowDomain_T
_0_flowDomain.FlowDomain_T = omniORB.newEmptyClass()
class FlowDomain_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/FlowDomain_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, transmissionParams, networkAccessDomain, fDConnectivityState, fdType, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.transmissionParams = transmissionParams
        self.networkAccessDomain = networkAccessDomain
        self.fDConnectivityState = fDConnectivityState
        self.fdType = fdType
        self.additionalInfo = additionalInfo

_0_flowDomain.FlowDomain_T = FlowDomain_T
_0_flowDomain._d_FlowDomain_T  = (omniORB.tcInternal.tv_struct, FlowDomain_T, FlowDomain_T._NP_RepositoryId, "FlowDomain_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "fDConnectivityState", omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/ConnectivityState_T:1.0"], "fdType", omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDType_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomain._tc_FlowDomain_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_FlowDomain_T)
omniORB.registerType(FlowDomain_T._NP_RepositoryId, _0_flowDomain._d_FlowDomain_T, _0_flowDomain._tc_FlowDomain_T)
del FlowDomain_T

# typedef ... FDList_T
class FDList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/FDList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomain.FDList_T = FDList_T
_0_flowDomain._d_FDList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FlowDomain_T:1.0"], 0)
_0_flowDomain._ad_FDList_T = (omniORB.tcInternal.tv_alias, FDList_T._NP_RepositoryId, "FDList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FlowDomain_T:1.0"], 0))
_0_flowDomain._tc_FDList_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._ad_FDList_T)
omniORB.registerType(FDList_T._NP_RepositoryId, _0_flowDomain._ad_FDList_T, _0_flowDomain._tc_FDList_T)
del FDList_T

# interface FDIterator_I
_0_flowDomain._d_FDIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/flowDomain/FDIterator_I:1.0", "FDIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDIterator_I:1.0"] = _0_flowDomain._d_FDIterator_I
_0_flowDomain.FDIterator_I = omniORB.newEmptyClass()
class FDIterator_I :
    _NP_RepositoryId = _0_flowDomain._d_FDIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_flowDomain.FDIterator_I = FDIterator_I
_0_flowDomain._tc_FDIterator_I = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_FDIterator_I)
omniORB.registerType(FDIterator_I._NP_RepositoryId, _0_flowDomain._d_FDIterator_I, _0_flowDomain._tc_FDIterator_I)

# FDIterator_I operations and attributes
FDIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FDIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FDIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# FDIterator_I object reference
class _objref_FDIterator_I (CORBA.Object):
    _NP_RepositoryId = FDIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_flowDomain.FDIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_flowDomain.FDIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_flowDomain.FDIterator_I._d_destroy, args)

omniORB.registerObjref(FDIterator_I._NP_RepositoryId, _objref_FDIterator_I)
_0_flowDomain._objref_FDIterator_I = _objref_FDIterator_I
del FDIterator_I, _objref_FDIterator_I

# FDIterator_I skeleton
__name__ = "flowDomain__POA"
class FDIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_flowDomain.FDIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_flowDomain.FDIterator_I._d_next_n, "getLength": _0_flowDomain.FDIterator_I._d_getLength, "destroy": _0_flowDomain.FDIterator_I._d_destroy}

FDIterator_I._omni_skeleton = FDIterator_I
_0_flowDomain__POA.FDIterator_I = FDIterator_I
omniORB.registerSkeleton(FDIterator_I._NP_RepositoryId, FDIterator_I)
del FDIterator_I
__name__ = "flowDomain"

# struct FDCreateData_T
_0_flowDomain.FDCreateData_T = omniORB.newEmptyClass()
class FDCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/FDCreateData_T:1.0"

    def __init__(self, name, userLabel, forceUniqueness, owner, networkAccessDomain, mfds, transmissionParams, additionalCreationInfo):
        self.name = name
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.mfds = mfds
        self.transmissionParams = transmissionParams
        self.additionalCreationInfo = additionalCreationInfo

_0_flowDomain.FDCreateData_T = FDCreateData_T
_0_flowDomain._d_FDCreateData_T  = (omniORB.tcInternal.tv_struct, FDCreateData_T, FDCreateData_T._NP_RepositoryId, "FDCreateData_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "mfds", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomain._tc_FDCreateData_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_FDCreateData_T)
omniORB.registerType(FDCreateData_T._NP_RepositoryId, _0_flowDomain._d_FDCreateData_T, _0_flowDomain._tc_FDCreateData_T)
del FDCreateData_T

# struct FDModifyData_T
_0_flowDomain.FDModifyData_T = omniORB.newEmptyClass()
class FDModifyData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/FDModifyData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, networkAccessDomain, transmissionParams, additionalModificationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.transmissionParams = transmissionParams
        self.additionalModificationInfo = additionalModificationInfo

_0_flowDomain.FDModifyData_T = FDModifyData_T
_0_flowDomain._d_FDModifyData_T  = (omniORB.tcInternal.tv_struct, FDModifyData_T, FDModifyData_T._NP_RepositoryId, "FDModifyData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalModificationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomain._tc_FDModifyData_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_FDModifyData_T)
omniORB.registerType(FDModifyData_T._NP_RepositoryId, _0_flowDomain._d_FDModifyData_T, _0_flowDomain._tc_FDModifyData_T)
del FDModifyData_T

# struct MatrixFlowDomain_T
_0_flowDomain.MatrixFlowDomain_T = omniORB.newEmptyClass()
class MatrixFlowDomain_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, transmissionParams, networkAccessDomain, flexible, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.transmissionParams = transmissionParams
        self.networkAccessDomain = networkAccessDomain
        self.flexible = flexible
        self.additionalInfo = additionalInfo

_0_flowDomain.MatrixFlowDomain_T = MatrixFlowDomain_T
_0_flowDomain._d_MatrixFlowDomain_T  = (omniORB.tcInternal.tv_struct, MatrixFlowDomain_T, MatrixFlowDomain_T._NP_RepositoryId, "MatrixFlowDomain_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "flexible", omniORB.tcInternal.tv_boolean, "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomain._tc_MatrixFlowDomain_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_MatrixFlowDomain_T)
omniORB.registerType(MatrixFlowDomain_T._NP_RepositoryId, _0_flowDomain._d_MatrixFlowDomain_T, _0_flowDomain._tc_MatrixFlowDomain_T)
del MatrixFlowDomain_T

# typedef ... MFDList_T
class MFDList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/MFDList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_flowDomain.MFDList_T = MFDList_T
_0_flowDomain._d_MFDList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"], 0)
_0_flowDomain._ad_MFDList_T = (omniORB.tcInternal.tv_alias, MFDList_T._NP_RepositoryId, "MFDList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"], 0))
_0_flowDomain._tc_MFDList_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._ad_MFDList_T)
omniORB.registerType(MFDList_T._NP_RepositoryId, _0_flowDomain._ad_MFDList_T, _0_flowDomain._tc_MFDList_T)
del MFDList_T

# struct FTPCreateData_T
_0_flowDomain.FTPCreateData_T = omniORB.newEmptyClass()
class FTPCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/FTPCreateData_T:1.0"

    def __init__(self, equipmentName, userLabel, forceUniqueness, owner, networkAccessDomain, ingressTransmissionDescriptorName, egressTransmissionDescriptorName, tpMappingMode, direction, transmissionParams, additionalCreationInfo):
        self.equipmentName = equipmentName
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.ingressTransmissionDescriptorName = ingressTransmissionDescriptorName
        self.egressTransmissionDescriptorName = egressTransmissionDescriptorName
        self.tpMappingMode = tpMappingMode
        self.direction = direction
        self.transmissionParams = transmissionParams
        self.additionalCreationInfo = additionalCreationInfo

_0_flowDomain.FTPCreateData_T = FTPCreateData_T
_0_flowDomain._d_FTPCreateData_T  = (omniORB.tcInternal.tv_struct, FTPCreateData_T, FTPCreateData_T._NP_RepositoryId, "FTPCreateData_T", "equipmentName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "ingressTransmissionDescriptorName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "egressTransmissionDescriptorName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "tpMappingMode", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationMode_T:1.0"], "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/Directionality_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomain._tc_FTPCreateData_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_FTPCreateData_T)
omniORB.registerType(FTPCreateData_T._NP_RepositoryId, _0_flowDomain._d_FTPCreateData_T, _0_flowDomain._tc_FTPCreateData_T)
del FTPCreateData_T

# interface MFDIterator_I
_0_flowDomain._d_MFDIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/flowDomain/MFDIterator_I:1.0", "MFDIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDIterator_I:1.0"] = _0_flowDomain._d_MFDIterator_I
_0_flowDomain.MFDIterator_I = omniORB.newEmptyClass()
class MFDIterator_I :
    _NP_RepositoryId = _0_flowDomain._d_MFDIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_flowDomain.MFDIterator_I = MFDIterator_I
_0_flowDomain._tc_MFDIterator_I = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_MFDIterator_I)
omniORB.registerType(MFDIterator_I._NP_RepositoryId, _0_flowDomain._d_MFDIterator_I, _0_flowDomain._tc_MFDIterator_I)

# MFDIterator_I operations and attributes
MFDIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MFDIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MFDIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# MFDIterator_I object reference
class _objref_MFDIterator_I (CORBA.Object):
    _NP_RepositoryId = MFDIterator_I._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_flowDomain.MFDIterator_I._d_next_n, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_flowDomain.MFDIterator_I._d_getLength, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_flowDomain.MFDIterator_I._d_destroy, args)

omniORB.registerObjref(MFDIterator_I._NP_RepositoryId, _objref_MFDIterator_I)
_0_flowDomain._objref_MFDIterator_I = _objref_MFDIterator_I
del MFDIterator_I, _objref_MFDIterator_I

# MFDIterator_I skeleton
__name__ = "flowDomain__POA"
class MFDIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_flowDomain.MFDIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_flowDomain.MFDIterator_I._d_next_n, "getLength": _0_flowDomain.MFDIterator_I._d_getLength, "destroy": _0_flowDomain.MFDIterator_I._d_destroy}

MFDIterator_I._omni_skeleton = MFDIterator_I
_0_flowDomain__POA.MFDIterator_I = MFDIterator_I
omniORB.registerSkeleton(MFDIterator_I._NP_RepositoryId, MFDIterator_I)
del MFDIterator_I
__name__ = "flowDomain"

# struct MFDCreateData_T
_0_flowDomain.MFDCreateData_T = omniORB.newEmptyClass()
class MFDCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/MFDCreateData_T:1.0"

    def __init__(self, name, userLabel, forceUniqueness, owner, networkAccessDomain, unassignedCPTPs, transmissionParams, additionalCreationInfo):
        self.name = name
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.unassignedCPTPs = unassignedCPTPs
        self.transmissionParams = transmissionParams
        self.additionalCreationInfo = additionalCreationInfo

_0_flowDomain.MFDCreateData_T = MFDCreateData_T
_0_flowDomain._d_MFDCreateData_T  = (omniORB.tcInternal.tv_struct, MFDCreateData_T, MFDCreateData_T._NP_RepositoryId, "MFDCreateData_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "unassignedCPTPs", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomain._tc_MFDCreateData_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_MFDCreateData_T)
omniORB.registerType(MFDCreateData_T._NP_RepositoryId, _0_flowDomain._d_MFDCreateData_T, _0_flowDomain._tc_MFDCreateData_T)
del MFDCreateData_T

# struct MFDModifyData_T
_0_flowDomain.MFDModifyData_T = omniORB.newEmptyClass()
class MFDModifyData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/flowDomain/MFDModifyData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, networkAccessDomain, transmissionParams, additionalModificationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.networkAccessDomain = networkAccessDomain
        self.transmissionParams = transmissionParams
        self.additionalModificationInfo = additionalModificationInfo

_0_flowDomain.MFDModifyData_T = MFDModifyData_T
_0_flowDomain._d_MFDModifyData_T  = (omniORB.tcInternal.tv_struct, MFDModifyData_T, MFDModifyData_T._NP_RepositoryId, "MFDModifyData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "networkAccessDomain", (omniORB.tcInternal.tv_string,0), "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "additionalModificationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_flowDomain._tc_MFDModifyData_T = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_MFDModifyData_T)
omniORB.registerType(MFDModifyData_T._NP_RepositoryId, _0_flowDomain._d_MFDModifyData_T, _0_flowDomain._tc_MFDModifyData_T)
del MFDModifyData_T

# interface FlowDomainMgr_I
_0_flowDomain._d_FlowDomainMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/flowDomain/FlowDomainMgr_I:1.0", "FlowDomainMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FlowDomainMgr_I:1.0"] = _0_flowDomain._d_FlowDomainMgr_I
_0_flowDomain.FlowDomainMgr_I = omniORB.newEmptyClass()
class FlowDomainMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_flowDomain._d_FlowDomainMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_flowDomain.FlowDomainMgr_I = FlowDomainMgr_I
_0_flowDomain._tc_FlowDomainMgr_I = omniORB.tcInternal.createTypeCode(_0_flowDomain._d_FlowDomainMgr_I)
omniORB.registerType(FlowDomainMgr_I._NP_RepositoryId, _0_flowDomain._d_FlowDomainMgr_I, _0_flowDomain._tc_FlowDomainMgr_I)

# FlowDomainMgr_I operations and attributes
FlowDomainMgr_I._d_getAllFlowDomains = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getFlowDomainsByUserLabel = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FlowDomain_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAssociatingFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FlowDomain_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getTransmissionParams = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/ParameterGroupsList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_createFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FlowDomain_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_deleteFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_modifyFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FDModifyData_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FlowDomain_T:1.0"], (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_associateMFDsWithFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_deAssociateMFDsFromFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_associateCPTPsWithFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_deAssociateCPTPsFromFlowDomain = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAllAssociatedMFDs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAllSupportedMFDs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getMFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAssigningMFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_createMFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_deleteMFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_modifyMFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MFDModifyData_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/MatrixFlowDomain_T:1.0"], (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_assignCPTPsToMFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_unassignCPTPsFromMFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_createFTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/FTPCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_deleteFTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAllCPTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/CPTP_Role_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAllAssignedCPTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAllAssignableCPTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAllFDFrs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong, omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getFDFrsWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getFDFrsByUserLabel = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getFDFr = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_createAndActivateFDFr = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/ConnectivityRequirement_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragmentList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/MatrixFlowDomainFragmentList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_deactivateAndDeleteFDFr = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_modifyFDFr = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrModifyData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomain/ConnectivityRequirement_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FlowDomainFragment_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getAllTopologicalLinksOfFD = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
FlowDomainMgr_I._d_getFDFrRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/flowDomainFragment/FDFrRoute_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# FlowDomainMgr_I object reference
class _objref_FlowDomainMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = FlowDomainMgr_I._NP_RepositoryId

    def __init__(self, obj):
        _0_common._objref_Common_I.__init__(self, obj)

    def getAllFlowDomains(self, *args):
        return self._obj.invoke("getAllFlowDomains", _0_flowDomain.FlowDomainMgr_I._d_getAllFlowDomains, args)

    def getFlowDomainsByUserLabel(self, *args):
        return self._obj.invoke("getFlowDomainsByUserLabel", _0_flowDomain.FlowDomainMgr_I._d_getFlowDomainsByUserLabel, args)

    def getFlowDomain(self, *args):
        return self._obj.invoke("getFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_getFlowDomain, args)

    def getAssociatingFD(self, *args):
        return self._obj.invoke("getAssociatingFD", _0_flowDomain.FlowDomainMgr_I._d_getAssociatingFD, args)

    def getTransmissionParams(self, *args):
        return self._obj.invoke("getTransmissionParams", _0_flowDomain.FlowDomainMgr_I._d_getTransmissionParams, args)

    def createFlowDomain(self, *args):
        return self._obj.invoke("createFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_createFlowDomain, args)

    def deleteFlowDomain(self, *args):
        return self._obj.invoke("deleteFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_deleteFlowDomain, args)

    def modifyFlowDomain(self, *args):
        return self._obj.invoke("modifyFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_modifyFlowDomain, args)

    def associateMFDsWithFlowDomain(self, *args):
        return self._obj.invoke("associateMFDsWithFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_associateMFDsWithFlowDomain, args)

    def deAssociateMFDsFromFlowDomain(self, *args):
        return self._obj.invoke("deAssociateMFDsFromFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_deAssociateMFDsFromFlowDomain, args)

    def associateCPTPsWithFlowDomain(self, *args):
        return self._obj.invoke("associateCPTPsWithFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_associateCPTPsWithFlowDomain, args)

    def deAssociateCPTPsFromFlowDomain(self, *args):
        return self._obj.invoke("deAssociateCPTPsFromFlowDomain", _0_flowDomain.FlowDomainMgr_I._d_deAssociateCPTPsFromFlowDomain, args)

    def getAllAssociatedMFDs(self, *args):
        return self._obj.invoke("getAllAssociatedMFDs", _0_flowDomain.FlowDomainMgr_I._d_getAllAssociatedMFDs, args)

    def getAllSupportedMFDs(self, *args):
        return self._obj.invoke("getAllSupportedMFDs", _0_flowDomain.FlowDomainMgr_I._d_getAllSupportedMFDs, args)

    def getMFD(self, *args):
        return self._obj.invoke("getMFD", _0_flowDomain.FlowDomainMgr_I._d_getMFD, args)

    def getAssigningMFD(self, *args):
        return self._obj.invoke("getAssigningMFD", _0_flowDomain.FlowDomainMgr_I._d_getAssigningMFD, args)

    def createMFD(self, *args):
        return self._obj.invoke("createMFD", _0_flowDomain.FlowDomainMgr_I._d_createMFD, args)

    def deleteMFD(self, *args):
        return self._obj.invoke("deleteMFD", _0_flowDomain.FlowDomainMgr_I._d_deleteMFD, args)

    def modifyMFD(self, *args):
        return self._obj.invoke("modifyMFD", _0_flowDomain.FlowDomainMgr_I._d_modifyMFD, args)

    def assignCPTPsToMFD(self, *args):
        return self._obj.invoke("assignCPTPsToMFD", _0_flowDomain.FlowDomainMgr_I._d_assignCPTPsToMFD, args)

    def unassignCPTPsFromMFD(self, *args):
        return self._obj.invoke("unassignCPTPsFromMFD", _0_flowDomain.FlowDomainMgr_I._d_unassignCPTPsFromMFD, args)

    def createFTP(self, *args):
        return self._obj.invoke("createFTP", _0_flowDomain.FlowDomainMgr_I._d_createFTP, args)

    def deleteFTP(self, *args):
        return self._obj.invoke("deleteFTP", _0_flowDomain.FlowDomainMgr_I._d_deleteFTP, args)

    def getAllCPTPs(self, *args):
        return self._obj.invoke("getAllCPTPs", _0_flowDomain.FlowDomainMgr_I._d_getAllCPTPs, args)

    def getAllAssignedCPTPs(self, *args):
        return self._obj.invoke("getAllAssignedCPTPs", _0_flowDomain.FlowDomainMgr_I._d_getAllAssignedCPTPs, args)

    def getAllAssignableCPTPs(self, *args):
        return self._obj.invoke("getAllAssignableCPTPs", _0_flowDomain.FlowDomainMgr_I._d_getAllAssignableCPTPs, args)

    def getAllFDFrs(self, *args):
        return self._obj.invoke("getAllFDFrs", _0_flowDomain.FlowDomainMgr_I._d_getAllFDFrs, args)

    def getFDFrsWithTP(self, *args):
        return self._obj.invoke("getFDFrsWithTP", _0_flowDomain.FlowDomainMgr_I._d_getFDFrsWithTP, args)

    def getFDFrsByUserLabel(self, *args):
        return self._obj.invoke("getFDFrsByUserLabel", _0_flowDomain.FlowDomainMgr_I._d_getFDFrsByUserLabel, args)

    def getFDFr(self, *args):
        return self._obj.invoke("getFDFr", _0_flowDomain.FlowDomainMgr_I._d_getFDFr, args)

    def createAndActivateFDFr(self, *args):
        return self._obj.invoke("createAndActivateFDFr", _0_flowDomain.FlowDomainMgr_I._d_createAndActivateFDFr, args)

    def deactivateAndDeleteFDFr(self, *args):
        return self._obj.invoke("deactivateAndDeleteFDFr", _0_flowDomain.FlowDomainMgr_I._d_deactivateAndDeleteFDFr, args)

    def modifyFDFr(self, *args):
        return self._obj.invoke("modifyFDFr", _0_flowDomain.FlowDomainMgr_I._d_modifyFDFr, args)

    def getAllTopologicalLinksOfFD(self, *args):
        return self._obj.invoke("getAllTopologicalLinksOfFD", _0_flowDomain.FlowDomainMgr_I._d_getAllTopologicalLinksOfFD, args)

    def getFDFrRoute(self, *args):
        return self._obj.invoke("getFDFrRoute", _0_flowDomain.FlowDomainMgr_I._d_getFDFrRoute, args)

omniORB.registerObjref(FlowDomainMgr_I._NP_RepositoryId, _objref_FlowDomainMgr_I)
_0_flowDomain._objref_FlowDomainMgr_I = _objref_FlowDomainMgr_I
del FlowDomainMgr_I, _objref_FlowDomainMgr_I

# FlowDomainMgr_I skeleton
__name__ = "flowDomain__POA"
class FlowDomainMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_flowDomain.FlowDomainMgr_I._NP_RepositoryId


    _omni_op_d = {"getAllFlowDomains": _0_flowDomain.FlowDomainMgr_I._d_getAllFlowDomains, "getFlowDomainsByUserLabel": _0_flowDomain.FlowDomainMgr_I._d_getFlowDomainsByUserLabel, "getFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_getFlowDomain, "getAssociatingFD": _0_flowDomain.FlowDomainMgr_I._d_getAssociatingFD, "getTransmissionParams": _0_flowDomain.FlowDomainMgr_I._d_getTransmissionParams, "createFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_createFlowDomain, "deleteFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_deleteFlowDomain, "modifyFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_modifyFlowDomain, "associateMFDsWithFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_associateMFDsWithFlowDomain, "deAssociateMFDsFromFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_deAssociateMFDsFromFlowDomain, "associateCPTPsWithFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_associateCPTPsWithFlowDomain, "deAssociateCPTPsFromFlowDomain": _0_flowDomain.FlowDomainMgr_I._d_deAssociateCPTPsFromFlowDomain, "getAllAssociatedMFDs": _0_flowDomain.FlowDomainMgr_I._d_getAllAssociatedMFDs, "getAllSupportedMFDs": _0_flowDomain.FlowDomainMgr_I._d_getAllSupportedMFDs, "getMFD": _0_flowDomain.FlowDomainMgr_I._d_getMFD, "getAssigningMFD": _0_flowDomain.FlowDomainMgr_I._d_getAssigningMFD, "createMFD": _0_flowDomain.FlowDomainMgr_I._d_createMFD, "deleteMFD": _0_flowDomain.FlowDomainMgr_I._d_deleteMFD, "modifyMFD": _0_flowDomain.FlowDomainMgr_I._d_modifyMFD, "assignCPTPsToMFD": _0_flowDomain.FlowDomainMgr_I._d_assignCPTPsToMFD, "unassignCPTPsFromMFD": _0_flowDomain.FlowDomainMgr_I._d_unassignCPTPsFromMFD, "createFTP": _0_flowDomain.FlowDomainMgr_I._d_createFTP, "deleteFTP": _0_flowDomain.FlowDomainMgr_I._d_deleteFTP, "getAllCPTPs": _0_flowDomain.FlowDomainMgr_I._d_getAllCPTPs, "getAllAssignedCPTPs": _0_flowDomain.FlowDomainMgr_I._d_getAllAssignedCPTPs, "getAllAssignableCPTPs": _0_flowDomain.FlowDomainMgr_I._d_getAllAssignableCPTPs, "getAllFDFrs": _0_flowDomain.FlowDomainMgr_I._d_getAllFDFrs, "getFDFrsWithTP": _0_flowDomain.FlowDomainMgr_I._d_getFDFrsWithTP, "getFDFrsByUserLabel": _0_flowDomain.FlowDomainMgr_I._d_getFDFrsByUserLabel, "getFDFr": _0_flowDomain.FlowDomainMgr_I._d_getFDFr, "createAndActivateFDFr": _0_flowDomain.FlowDomainMgr_I._d_createAndActivateFDFr, "deactivateAndDeleteFDFr": _0_flowDomain.FlowDomainMgr_I._d_deactivateAndDeleteFDFr, "modifyFDFr": _0_flowDomain.FlowDomainMgr_I._d_modifyFDFr, "getAllTopologicalLinksOfFD": _0_flowDomain.FlowDomainMgr_I._d_getAllTopologicalLinksOfFD, "getFDFrRoute": _0_flowDomain.FlowDomainMgr_I._d_getFDFrRoute}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

FlowDomainMgr_I._omni_skeleton = FlowDomainMgr_I
_0_flowDomain__POA.FlowDomainMgr_I = FlowDomainMgr_I
omniORB.registerSkeleton(FlowDomainMgr_I._NP_RepositoryId, FlowDomainMgr_I)
del FlowDomainMgr_I
__name__ = "flowDomain"

#
# End of module "flowDomain"
#
__name__ = "flowDomain_idl"

_exported_modules = ( "flowDomain", )

# The end.
